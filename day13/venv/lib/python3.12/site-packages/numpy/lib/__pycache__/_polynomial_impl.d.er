##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/numpy/lib/_polynomial_impl.py 1734628981 44294

.__all__: global::List!({"polysub", "poly", "polyval", "polyadd", "poly1d", "roots", "polyder", "polymul", "polydiv", "polyfit", "polyint"}, 11)
.functools = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.re = pyimport "<failure>"


.warnings = pyimport "<failure>"


.___v_desugar_1 = pyimport "<failure>"

.set_module: Never
.NX: Never

.___v_desugar_2 = pyimport "__init__"
.__init__ = pyimport "__init__"
.isscalar: Never
.abs: Never
.finfo: Never
.atleast_1d: Never
.hstack: Never
.dot: Never
.array: Never
.ones: Never
.overrides = pyimport "overrides"

.___v_desugar_3 = pyimport "exceptions"
.exceptions = pyimport "exceptions"
.RankWarning: {numpy.exceptions.RankWarning}
.___v_desugar_4 = pyimport "_twodim_base_impl"
._twodim_base_impl = pyimport "_twodim_base_impl"
.diag: Never
.vander: Never
.___v_desugar_5 = pyimport "_function_base_impl"
._function_base_impl = pyimport "_function_base_impl"
.trim_zeros: Never
.___v_desugar_6 = pyimport "_type_check_impl"
._type_check_impl = pyimport "_type_check_impl"
.iscomplex: (x: Obj) -> Never
.real: |Type_8222: Type, Type_6904 <: Structural({.real = ?8222})|(val: Type_6904) -> Never
.imag: |Type_8410: Type, Type_6918 <: Structural({.imag = ?8410})|(val: Type_6918) -> Never
.mintypecode: (typechars: Obj, typeset: Obj := Obj, default: Obj := Obj) -> Never
.___v_desugar_7 = pyimport "__init__"

.eigvals: Never
.lstsq: Never
.inv: Never
.array_function_dispatch: Never
._poly_dispatcher: |Type_7683: Type|(seq_of_zeros: Type_7683) -> Type_7683
.poly: (seq_of_zeros: Obj) -> Never
._roots_dispatcher: |Type_7703: Type|(p: Type_7703) -> Type_7703
.roots: (p: Obj) -> Never
._polyint_dispatcher: |Type_7717: Type|(p: Type_7717, m: Obj := Obj, k: Obj := Obj) -> global::Tuple([Type_7717])
.polyint: (p: Obj, m: Obj := Obj, k: Obj := Obj) -> Never
._polyder_dispatcher: |Type_7755: Type|(p: Type_7755, m: Obj := Obj) -> global::Tuple([Type_7755])
.polyder: |O: Type, O :> Int|(p: O, m: O := O) -> Never
._polyfit_dispatcher: |Type_7819: Type, Type_7788: Type, Type_7792: Type|(x: Type_7788, y: Type_7792, deg: Obj, rcond: Obj := Obj, full: Obj := Obj, w: Type_7819 := Type_7819, cov: Obj := Obj) -> global::Tuple([Type_7788, Type_7792, Type_7819])
.polyfit: |Type_7840 <: Structural({.__lt__ = (self: Never, ?R) -> Bool}), R: Type|(x: Obj, y: Never, deg: Type_7840, rcond: Obj := {None}, full: Bool := {False} and Bool, w: Obj := {None}, cov: {"unscaled"} := {False} and {"unscaled"}) -> Never
._polyval_dispatcher: |Type_7865: Type, Type_7862: Type|(p: Type_7862, x: Type_7865) -> global::Tuple([Type_7862, Type_7865])
.polyval: (p: Obj, x: Nat) -> Nat
._binary_op_dispatcher: |Type_7887: Type, Type_7893: Type|(a1: Type_7887, a2: Type_7893) -> global::Tuple([Type_7887, Type_7893])
.polyadd: (a1: Obj, a2: Obj) -> Never
.polysub: (a1: Obj, a2: Obj) -> Never
.polymul: (a1: Obj, a2: Obj) -> Never
._polydiv_dispatcher: |Type_7944: Type, Type_7946: Type|(u: Type_7944, v: Type_7946) -> global::Tuple([Type_7944, Type_7946])
.polydiv: (u: Never, v: Never) -> global::Tuple([Never, Never])
._poly_mat: Never
._raise_power: |R <: Float, R <: Str|(astr: global::Indexable(Obj, R), wrap: R := R) -> Str
.poly1d: ClassType


