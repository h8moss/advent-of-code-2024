##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/numpy/lib/_datasource.py 1734628981 22729

.os = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.___v_desugar_1 = pyimport "<failure>"

.set_module: Never
._open: (path: Obj, mode: Str := Str, destpath: Obj := Obj, encoding: Obj := Obj, newline: Obj := Obj) -> Never
._check_mode: |Type_3277 <: Structural({.__contains__ = (self: Never, ?R) -> Bool and (self: Never, ?R) -> Bool}), R: Type|(mode: Type_3277, encoding: Obj, newline: Obj) -> NoneType
.Type__FileOpeners: ClassType
.Type__FileOpeners._file_openers: Never
.Type__FileOpeners._loaded: Never
.Type__FileOpeners.__call__: () -> _datasource.Type__FileOpeners
.Type__FileOpeners._load: (self: _datasource.Type__FileOpeners) -> NoneType
.Type__FileOpeners.keys: (self: _datasource.Type__FileOpeners) -> global::List!(Never, _: Nat)
.Type__FileOpeners.__getitem__: (self: _datasource.Type__FileOpeners, key: Obj) -> Never

_datasource = pyimport "_datasource"
._file_openers: .Type__FileOpeners
.open: (path: Obj, mode: Str := Str, destpath: Obj := Obj, encoding: Obj := Obj, newline: Obj := Obj) -> Never
.DataSource: ClassType
.DataSource.__call__: (destpath: Obj := Obj) -> _datasource.DataSource
.DataSource.__del__: (self: _datasource.DataSource) -> NoneType
.DataSource._iszip: (self: _datasource.DataSource, filename: Obj) -> Bool
.DataSource._iswritemode: (self: _datasource.DataSource, mode: Obj) -> Bool
.DataSource._splitzipext: (self: _datasource.DataSource, filename: Obj) -> Never
.DataSource._possible_names: |T <: Structural({.__add__ = (self: Never, ?T) -> Never}), T <: Structural({.__add__ = (self: Never, ?T) -> ?T}), T: Type|(self: _datasource.DataSource, filename: T) -> global::List!(T, 2)
.DataSource._isurl: (self: _datasource.DataSource, path: Obj) -> Bool
.DataSource._cache: (self: _datasource.DataSource, path: Obj) -> Never
.DataSource._findfile: (self: _datasource.DataSource, path: Never) -> {None}
.DataSource.abspath: (self: _datasource.DataSource, path: Obj) -> Never
.DataSource._sanitize_relative_path: (self: _datasource.DataSource, path: Obj) -> Never
.DataSource.exists: (self: _datasource.DataSource, path: Obj) -> {False}
.DataSource.open: (self: _datasource.DataSource, path: Obj, mode: Str := Str, encoding: Obj := Obj, newline: Obj := Obj) -> Never

.Repository: ClassType
.Repository <: .DataSource
.Repository._baseurl: Never
.Repository.__call__: (baseurl: Obj, destpath: Obj := Obj) -> _datasource.Repository
.Repository.__del__: (self: _datasource.Repository) -> Never
.Repository._fullpath: |Type_3754 <: Str|(self: _datasource.Repository, path: Type_3754) -> Type_3754
.Repository._findfile: (self: Never, path: Obj) -> {None}
.Repository.abspath: (self: _datasource.Repository, path: Str) -> Never
.Repository.exists: (self: _datasource.Repository, path: Str) -> Never
.Repository.open: (self: _datasource.Repository, path: Str, mode: Obj := Obj, encoding: Obj := Obj, newline: Obj := Obj) -> Never
.Repository.listdir: (self: _datasource.Repository) -> Never

