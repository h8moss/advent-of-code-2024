##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/numpy/lib/_type_check_impl.py 1734628981 19220

.functools = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.__all__: global::List!({"mintypecode", "iscomplex", "real_if_close", "real", "isrealobj", "iscomplexobj", "typename", "nan_to_num", "imag", "isreal", "common_type"}, 11)
.___v_desugar_1 = pyimport "<failure>"

.set_module: Never
._nx = pyimport "numeric"
.numeric = pyimport "numeric"

.___v_desugar_2 = pyimport "numeric"

.asarray: Never
.asanyarray: Never
.isnan: Never
.zeros: Never
.overrides = pyimport "overrides"
.getlimits = pyimport "getlimits"

.___v_desugar_3 = pyimport "_ufunclike_impl"
._ufunclike_impl = pyimport "_ufunclike_impl"
.isneginf: (x: Obj, out: Obj := Obj) -> Never
.isposinf: (x: Obj, out: Obj := Obj) -> Never
.array_function_dispatch: Never
._typecodes_by_elsize: {"GDFgdfQqLlIiHhBb?"}
.mintypecode: (typechars: Obj, typeset: Obj := Obj, default: Obj := Obj) -> Never
._real_dispatcher: |Type_6897: Type|(val: Type_6897) -> global::Tuple([Type_6897])
.real: |Type_8222: Type, Type_6904 <: Structural({.real = ?8222})|(val: Type_6904) -> Never
._imag_dispatcher: |Type_6912: Type|(val: Type_6912) -> global::Tuple([Type_6912])
.imag: |Type_8410: Type, Type_6918 <: Structural({.imag = ?8410})|(val: Type_6918) -> Never
._is_type_dispatcher: |Type_6922: Type|(x: Type_6922) -> global::Tuple([Type_6922])
.iscomplex: (x: Obj) -> Never
.isreal: (x: Never) -> {.imag(.x) in {0}}
.iscomplexobj: |Type_6942 <: Structural({.dtype = ?9095}), Type_9095: Type|(x: Type_6942) -> Bool
.isrealobj: (x: Never) -> Never
._getmaxmin: (t: Obj) -> global::Tuple([Never, Never])
._nan_to_num_dispatcher: |Type_6960: Type|(x: Type_6960, copy: Obj := Obj, nan: Obj := Obj, posinf: Obj := Obj, neginf: Obj := Obj) -> global::Tuple([Type_6960])
.nan_to_num: (x: Obj, copy: Obj := Obj, nan: Obj := Obj, posinf: Obj := Obj, neginf: Obj := Obj) -> Never
._real_if_close_dispatcher: |Type_7029: Type|(a: Type_7029, tol: Obj := Obj) -> global::Tuple([Type_7029])
.real_if_close: (a: Obj, tol: Structural({.__gt__ = (self: Never, Obj) -> Bool}) := {100} and Structural({.__gt__ = (self: Never, Obj) -> Bool})) -> Never
._namefromtype: global::Dict!({{"H"}: {"unsigned short"}, {"S1"}: {"character"}, {"g"}: {"long precision"}, {"?"}: {"bool"}, {"G"}: {"complex long double precision"}, {"Q"}: {"unsigned long long integer"}, {"q"}: {"long long integer"}, {"U"}: {"unicode"}, {"i"}: {"integer"}, {"O"}: {"object"}, {"I"}: {"unsigned integer"}, {"S"}: {"string"}, {"b"}: {"signed char"}, {"l"}: {"long integer"}, {"B"}: {"unsigned char"}, {"L"}: {"unsigned long integer"}, {"f"}: {"single precision"}, {"F"}: {"complex single precision"}, {"V"}: {"void"}, {"d"}: {"double precision"}, {"h"}: {"short"}, {"D"}: {"complex double precision"}})
.typename: (char: Obj) -> {"unsigned short"}
.array_type: Never
.array_precision: Never
._common_type_dispatcher: |Type_7070: Type|(*arrays: Type_7070) -> global::List(Type_7070, _: Nat)
.common_type: (*arrays: Never) -> Never
