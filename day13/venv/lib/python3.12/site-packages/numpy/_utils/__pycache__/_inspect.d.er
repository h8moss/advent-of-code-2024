##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/numpy/_utils/_inspect.py 1734628981 7435

.types = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.__all__: global::List!({"getargspec", "formatargspec"}, 2)
.ismethod: (Obj: Obj) -> Bool
.isfunction: (Obj: Obj) -> Bool
.iscode: (Obj: Obj) -> Bool
.___v_global_2470: global::Tuple([{1}, {2}, {4}, {8}])
.CO_OPTIMIZED: Never
.CO_NEWLOCALS: Never
.CO_VARARGS: Never
.CO_VARKEYWORDS: Never

.getargs: |K: Type, Type_10455: Type, Self <: global::Indexable(?K, ?V), Self <: global::Indexable(?K, ?V), V: Type, Self <: global::Indexable(?K, ?V), Type_7540 <: Structural({.co_argcount = Obj; .co_flags = ?10280 and ?10455; .co_varnames = ?Self and ?Self}), Type_10280: Type|(co: Type_7540) -> global::Tuple([global::List!(Self, _: Nat), {None}, {None}])
.getargspec: |Type_7528: Type, Type_11330: Type, Type_7528 <: Structural({.__func__ = ?Type_7528; .__defaults__ = ?11330; .__code__ = Never})|(func: Type_7528) -> global::Tuple([global::List!(global::Indexable(Obj, global::Iterable(Never)), _: Nat), {None}, {None}, Type_11330])
.getargvalues: |Type_7577 <: Structural({.f_locals = ?11843; .f_code = Never}), Type_11843: Type|(frame: Type_7577) -> global::Tuple([global::List!(global::Indexable(Obj, global::Iterable(Never)), _: Nat), {None}, {None}, Type_11843])
.joinseq: |Type_7581 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, ?11957) -> ?R}), R: Type, Type_11957: Type|(seq: Type_7581) -> Never
.strseq: |T :> ?T or ?U, U: Type, T: Type|(Obj: T, convert: ({Obj}) -> Never, join: (global::List!(T, _: Nat)) -> Never := |T: Type, Type_7581 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: (global::List!(T, _: Nat)) -> Never, ?11957) -> ?R}), R: Type, Type_11957: Type|(seq: Type_7581) -> Never and (global::List!(T, _: Nat)) -> Never) -> T
.formatargspec: |T <: Structural({.__add__ = (self: Never, ?R) -> ?O}), Type_7620 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, Int) -> ?T}), T: Type, R: Type, O: Type|(args: Type_7620, varargs: Obj := {None}, varkw: Obj := {None}, defaults: Never := Never, formatarg: ({Obj}) -> Never := {Str} and ({Obj}) -> Never, formatvarargs: ({Type_v_global_18357: Obj | Type_v_global_18357 != None}) -> T := ({Type_v_global_18357: Obj | Type_v_global_18357 != None}) -> T, formatvarkw: ({Type_v_global_18402: Obj | Type_v_global_18402 != None}) -> T := ({Type_v_global_18402: Obj | Type_v_global_18402 != None}) -> T, formatvalue: (Obj) -> R := (Obj) -> R, join: (global::List!(T, _: Nat)) -> Never := |T <: Structural({.__add__ = (self: Never, ?R) -> ?O}), Type_7581 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: (global::List!(T, _: Nat)) -> Never, ?11957) -> ?R}), R: Type, O: Type, Type_11957: Type|(seq: Type_7581) -> Never and (global::List!(T, _: Nat)) -> Never) -> Str
.formatargvalues: |T <: Str, K: Type, T: Type, Type_7746 <: Structural({.__getitem__ = (self: Obj, ?K) -> ?14776 and (self: Obj, ?K) -> ?14836}), K <: Bool, Type_14836: Type, R: Type, Type_14776: Type|(args: global::Iterable(T), varargs: K, varkw: K, locals: Type_7746, formatarg: Obj := {Str}, formatvarargs: (K) -> Structural({.__add__ = (self: Never, R) -> T}) := (K) -> Structural({.__add__ = (self: Never, R) -> T}), formatvarkw: (K) -> Structural({.__add__ = (self: Never, R) -> T}) := (K) -> Structural({.__add__ = (self: Never, R) -> T}), formatvalue: Obj := Obj, join: (global::List!(T, _: Nat)) -> Never := |T: Type, Type_7581 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: (global::List!(T, _: Nat)) -> Never, ?11957) -> ?R}), R: Type, Type_11957: Type|(seq: Type_7581) -> Never and (global::List!(T, _: Nat)) -> Never) -> Str
