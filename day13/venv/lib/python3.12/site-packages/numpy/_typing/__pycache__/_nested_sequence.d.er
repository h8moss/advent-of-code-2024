##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/numpy/_typing/_nested_sequence.py 1734628981 2608

.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.annotations: Never
.___v_desugar_2 = pyimport "<failure>"

.Any: Never
.TypeVar: Never
.Protocol: Never
.runtime_checkable: Never
.TYPE_CHECKING: Never

.__all__: global::List!({"_NestedSequence"}, 1)
._T_co: Never
.Type__NestedSequence: ClassType
.Type__NestedSequence <: Never
.Type__NestedSequence.__len__: (self: _nested_sequence.Type__NestedSequence) -> Int
.Type__NestedSequence.__getitem__: (self: _nested_sequence.Type__NestedSequence, index: Int) -> Never
.Type__NestedSequence.__contains__: (self: _nested_sequence.Type__NestedSequence, x: Obj) -> Bool
.Type__NestedSequence.__iter__: (self: _nested_sequence.Type__NestedSequence) -> global::Iterator(_: Type)
.Type__NestedSequence.__reversed__: (self: _nested_sequence.Type__NestedSequence) -> global::Iterator(_: Type)
.Type__NestedSequence.count: (self: _nested_sequence.Type__NestedSequence, value: Obj) -> Int
.Type__NestedSequence.index: (self: _nested_sequence.Type__NestedSequence, value: Obj) -> Int

