##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/numpy/_core/arrayprint.py 1734628981 64812

.__all__: global::List!({"array_str", "get_printoptions", "format_float_positional", "printoptions", "array_repr", "array2string", "set_printoptions", "format_float_scientific"}, 8)
.__docformat__: {"restructuredtext"}
.functools = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.numbers = pyimport "<failure>"


.sys = pyimport "<failure>"


.___v_desugar_1 = pyimport "<failure>"

.get_ident: Never
.___v_desugar_2 = pyimport "<failure>"

.get_ident: Never

.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_3 = pyimport "__init__"

._nt: Never
.___v_desugar_4 = pyimport "umath"
.umath = pyimport "umath"
.absolute: Never
.isinf: Never
.isfinite: Never
.isnat: Never
.___v_desugar_5 = pyimport "__init__"

.multiarray: Never
.___v_desugar_6 = pyimport "multiarray"
.multiarray = pyimport "multiarray"
.array: Never
.dragon4_positional: Never
.dragon4_scientific: Never
.datetime_as_string: |Type_25992: Type|(arr: Type_25992, unit: Obj := Obj, timezone: Obj := Obj, casting: Obj := Obj) -> global::Tuple([Type_25992])
.datetime_data: Never
.ndarray: Never
.___v_desugar_7 = pyimport "fromnumeric"
.fromnumeric = pyimport "fromnumeric"
.any: |Type_43805: Type|(a: Obj, axis: Obj := Obj, out: Obj := Obj, keepdims: Type_43805 := Type_43805, where: Type_43805 := Type_43805) -> Never
.___v_desugar_8 = pyimport "numeric"
.numeric = pyimport "numeric"
.concatenate: |T :> {Type_v_global_24815: Obj | Type_v_global_24815 != None}|(arrays: global::List!(T, _: Nat), axis: Obj := Obj, out: Obj := Obj, dtype: Obj := Obj, casting: Obj := Obj) -> global::List!(T, _: Nat)
.asarray: Never
.errstate: Never
.___v_desugar_9 = pyimport "numerictypes"
.numerictypes = pyimport "numerictypes"
.longlong: Never
.intc: Never
.int_: Never
.float64: Never
.complex128: Never
.flexible: Never
.___v_desugar_10 = pyimport "overrides"
.overrides = pyimport "overrides"
.array_function_dispatch: (dispatcher: Obj := Obj, module: Obj := Obj, verify: Bool := Bool, docs_from_dispatcher: Bool := Bool) -> |Type_968 <: Structural({.__code__ = Type_1447}), Type_1447 <: Code|(implementation: Type_968) -> Never
.set_module: Never
.___v_desugar_11 = pyimport "printoptions"
.printoptions = pyimport "printoptions"
.format_options: Never
.operator = pyimport "<failure>"


.warnings = pyimport "<failure>"


.contextlib = pyimport "<failure>"


._make_options_dict: |T: Type|(precision: Obj := Obj, threshold: Obj := Obj, edgeitems: Obj := Obj, linewidth: Obj := Obj, suppress: Obj := Obj, nanstr: Obj := Obj, infstr: Obj := Obj, sign: T := T, formatter: Obj := Obj, floatmode: T := T, legacy: {False} := {False}, override_repr: Obj := Obj) -> Never
.set_printoptions: |V: Type, T: Type|(precision: Obj := Obj, threshold: Obj := Obj, edgeitems: Obj := Obj, linewidth: Obj := Obj, suppress: Obj := Obj, nanstr: Obj := Obj, infstr: Obj := Obj, formatter: V := V, sign: T := T, floatmode: T := T, legacy: {False} := {False}, override_repr: V := V) -> Never
._set_printoptions: |V: Type, T: Type|(precision: Obj := Obj, threshold: Obj := Obj, edgeitems: Obj := Obj, linewidth: Obj := Obj, suppress: Obj := Obj, nanstr: Obj := Obj, infstr: Obj := Obj, formatter: V := V, sign: T := T, floatmode: T := T, legacy: {False} := {False}, override_repr: V := V) -> Never
.get_printoptions: () -> Never
._get_legacy_print_mode: () -> Never
.printoptions: (*args: Obj, **kwargs := ?50096) -> Never
._leading_trailing: |E: Type, K: Type, V: Type, O: Type, Self <: global::Indexable(?K, ?V), Type_51897: Type, O <: Structural({.__len__ = (self: Never) -> Nat; .__add__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), R: Type, Type_50099 <: Structural({.shape = ?Self; .ndim = ?E; .__getitem__ = (self: Obj, ?O) -> ?51897})|(a: Type_50099, edgeitems: Obj, index: O := O) -> Never
._object_format: (o: Obj) -> Str
.repr_format: (x: Obj) -> Str
.str_format: (x: Obj) -> Str
._get_formatdict: (data: arrayprint.IntegerFormat, precision: Obj, floatmode: Obj, suppress: Obj, sign: Obj, legacy: Obj, formatter: Obj, **kwargs := ?50140) -> global::Dict!({{"float"}: () -> Never, {"complexfloat"}: () -> Never, {"void"}: () -> (x: Obj) -> Str, {"int"}: () -> Never, {"datetime"}: () -> Never, {"numpystr"}: () -> (x: Obj) -> Str, {"longfloat"}: () -> Never, {"longcomplexfloat"}: () -> Never, {"bool"}: () -> Never, {"object"}: () -> (o: Obj) -> Str, {"timedelta"}: () -> Never})
._get_format_function: |Type_54085: Type, Type_50121 <: Structural({.dtype = ?54085})|(data: Type_50121, **options := ?50147) -> Never
._recursive_guard: (fillvalue: Obj := Obj) -> |Type_54550: Type|(f: (Type_54550) -> Never) -> (self: Obj, *args: Obj, **kwargs := ?54552) -> Never
._array2string: |Type_50154 <: Structural({.size = ?54645; .shape = ?E}), E: Type, R <: {?MIN}, MIN: Int, Type_54645: Type|(a: Type_50154, options: global::Indexable(Obj, R), separator: Obj := Obj, prefix: Structural({.__len__ = (self: Never) -> Nat}) := {""} and Structural({.__len__ = (self: Never) -> Nat})) -> Never
._array2string_dispatcher: |Type_50169: Type|(a: Type_50169, max_line_width: Obj := Obj, precision: Obj := Obj, suppress_small: Obj := Obj, separator: Obj := Obj, prefix: Obj := Obj, style: Obj := Obj, formatter: Obj := Obj, threshold: Obj := Obj, edgeitems: Obj := Obj, sign: Obj := Obj, floatmode: Obj := Obj, suffix: Obj := Obj, legacy: Obj := Obj) -> global::Tuple([Type_50169])
.array2string: |T: Type|(a: Never, max_line_width: Obj := Obj, precision: Obj := Obj, suppress_small: Obj := Obj, separator: Obj := Obj, prefix: Structural({.__len__ = (self: Never) -> Nat}) := {""} and Structural({.__len__ = (self: Never) -> Nat}), style: (object: Obj) -> Str := _globals.Type__NoValueType and (object: Obj) -> Str, formatter: Obj := {None}, threshold: Obj := {None}, edgeitems: Obj := {None}, sign: T := {None} and T, floatmode: T := {None} and T, suffix: Obj := {""}, legacy: {False} := {None} and {False}) -> Never
._extendLine: |O <: Structural({.__add__ = (self: Never, ?R) -> ?O}), R <: Float, O: Type, Type_55303: Type, R :> {113}, O <: Structural({.__len__ = (self: Never) -> Nat; .__add__ = (self: Never, ?R) -> ?O; .rstrip = (self: Obj) -> ?55303}), R <: Structural({.__len__ = (self: Never) -> Nat}), R: Type, O <: Structural({.__len__ = (self: Never) -> Nat; .__add__ = (self: Never, ?R) -> ?O; .rstrip = (self: Never) -> ?55303})|(s: O, line: O, word: R, line_width: R, next_line_prefix: O, legacy: Structural({.__gt__ = (self: Never, R) -> Bool})) -> global::Tuple([O, O])
._extendLine_pretty: |Type_55337: Type, R <: Structural({.splitlines = (self: Obj) -> ?55337})|(s: Never, line: Never, word: R, line_width: R, next_line_prefix: Never, legacy: Never) -> global::Tuple([Never, Never])
._formatArray: |Type_50154 <: Structural({.size = ?54645; .shape = ?E}), E: Type, R <: {?MIN}, MIN: Int, Type_54645: Type|(a: Type_50154, format_function: Never, line_width: R, next_line_prefix: Str, separator: Obj, edge_items: R, summary_insert: {"...", ""}, legacy: R) -> Never
._none_or_positive_arg: |R: Type, Type_50296 <: Structural({.__lt__ = (self: Never, ?R) -> Bool})|(x: Type_50296, name: Obj) -> Type_50296
.FloatingFormat: ClassType
.FloatingFormat.exp_format: Never
.FloatingFormat.sign: Never
.FloatingFormat.large_exponent: Never
.FloatingFormat._legacy: Never
.FloatingFormat.floatmode: Never
.FloatingFormat.precision: Never
.FloatingFormat.suppress_small: Never
.FloatingFormat.__call__: |R: Type, Type_50348 <: Structural({.__lt__ = (self: Never, ?R) -> Bool})|(self: arrayprint.FloatingFormat, x: Type_50348) -> Never
.FloatingFormat.fillFormat: (self: arrayprint.FloatingFormat, data: global::Indexable(Obj, {0})) -> NoneType
.FloatingFormat.__call__: |R: Type, Type_50348 <: Structural({.__lt__ = (self: Never, ?R) -> Bool})|(self: arrayprint.FloatingFormat, x: Type_50348) -> Never

.format_float_scientific: (x: Obj, precision: Never := Never, unique: Obj := Obj, trim: Obj := Obj, sign: Obj := Obj, pad_left: Never := Never, exp_digits: Never := Never, min_digits: Never := Never) -> Never
.format_float_positional: (x: Obj, precision: Never := Never, unique: Obj := Obj, fractional: Obj := Obj, trim: Obj := Obj, sign: Obj := Obj, pad_left: Never := Never, pad_right: Never := Never, min_digits: Never := Never) -> Never
.IntegerFormat: ClassType
.IntegerFormat.format: Never
.IntegerFormat.__call__: (self: arrayprint.IntegerFormat, x: Obj) -> Never
.IntegerFormat.__call__: (self: arrayprint.IntegerFormat, x: Obj) -> Never

.BoolFormat: ClassType
.BoolFormat.truestr: Never
.BoolFormat.__call__: (self: arrayprint.IntegerFormat, x: Bool) -> {"False"}
.BoolFormat.__call__: (self: arrayprint.IntegerFormat, x: Bool) -> {"False"}

.ComplexFloatingFormat: ClassType
.ComplexFloatingFormat.real_format: Never
.ComplexFloatingFormat.imag_format: Never
.ComplexFloatingFormat.__call__: |Type_57796: Type, Type_50429 <: Structural({.real = ?57796; .imag = ?57799}), Type_57799: Type|(self: arrayprint.ComplexFloatingFormat, x: Type_50429) -> Never
.ComplexFloatingFormat.__call__: |Type_57796: Type, Type_50429 <: Structural({.real = ?57796; .imag = ?57799}), Type_57799: Type|(self: arrayprint.ComplexFloatingFormat, x: Type_50429) -> Never

.Type__TimelikeFormat: ClassType
.Type__TimelikeFormat._nat: Never
.Type__TimelikeFormat._format: Never
.Type__TimelikeFormat.__call__: (self: arrayprint.IntegerFormat, x: Obj) -> Never
.Type__TimelikeFormat._format_non_nat: (self: arrayprint.Type__TimelikeFormat, x: Obj) -> Never
.Type__TimelikeFormat.__call__: (self: arrayprint.IntegerFormat, x: Obj) -> Never

.DatetimeFormat: ClassType
arrayprint = pyimport "arrayprint"
.DatetimeFormat <: .Type__TimelikeFormat
.DatetimeFormat.timezone: Never
.DatetimeFormat.legacy: Never
.DatetimeFormat.casting: Never
.DatetimeFormat.unit: Never
.DatetimeFormat.__call__: (self: arrayprint.IntegerFormat, x: Obj) -> Never
.DatetimeFormat.__call__: (self: arrayprint.IntegerFormat, x: Obj) -> Never
.DatetimeFormat._format_non_nat: (self: arrayprint.DatetimeFormat, x: Obj) -> Str

.TimedeltaFormat: ClassType
.TimedeltaFormat <: .Type__TimelikeFormat
.TimedeltaFormat._format_non_nat: (self: arrayprint.TimedeltaFormat, x: Obj) -> Str

.SubArrayFormat: ClassType
.SubArrayFormat.format_function: Never
.SubArrayFormat.threshold: Never
.SubArrayFormat.edge_items: Never
.SubArrayFormat.__call__: |Type_57960: Type, Type_50500 <: Structural({.size = ?57960})|(self: arrayprint.SubArrayFormat, a: Type_50500) -> Never
.SubArrayFormat.__call__: |Type_57960: Type, Type_50500 <: Structural({.size = ?57960})|(self: arrayprint.SubArrayFormat, a: Type_50500) -> Never
.SubArrayFormat.format_array: |Type_57960: Type, Type_50500 <: Structural({.size = ?57960})|(self: arrayprint.SubArrayFormat, a: Type_50500) -> Never

.StructuredVoidFormat: ClassType
.StructuredVoidFormat.format_functions: Never
.StructuredVoidFormat.__call__: (self: arrayprint.StructuredVoidFormat, x: Obj) -> Never
.StructuredVoidFormat.from_data: |Type_54085: Type, Type_50121 <: Structural({.dtype = ?54085})|(cls: Type_50121, data: Structural({.dtype = global::Indexable(Obj, global::List(Never, _: Nat)); .__getitem__ = (self: Obj, Obj) -> Never}), **options := ?50555) -> Never
.StructuredVoidFormat.__call__: (self: arrayprint.StructuredVoidFormat, x: Obj) -> Never

._void_scalar_to_string: |Type_58539: Type, Type_50566 <: Structural({.dtype = ?58539})|(x: Type_50566, is_repr: Bool := Bool) -> Str
._typelessdata: global::List!(Never, 4)
.dtype_is_implied: (dtype: Obj) -> Bool
.dtype_short_repr: |Type_58705 <: Bool, Type_50577 <: Structural({.names = ?58676; .name = Never; .isnative = ?58705; .type = ?58685}), Type_58676: Type, Type_58685 <: ClassType|(dtype: Type_50577) -> Never
._array_repr_implementation: |Type_58839: Type, Type_50585 <: Structural({.shape = ?E and ?58863; .dtype = Never; .item = (self: Obj) -> ?58839; .size = ?E and ?58879}), O <: Structural({.__len__ = (self: Never) -> Nat; .__add__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), E: Type, Type_58879: Type, R <: Float, Type_50602: Type, O: Type, Type_58863: Type, Type_50595: Type, R: Type|(arr: Type_50585, max_line_width: R := {None} and R, precision: Type_50595 := {None} and Type_50595, suppress_small: Type_50602 := {None} and Type_50602, array2string: (Type_50585, R, Type_50595, Type_50602, {", "}, O) -> Never := |T: Type|(a: Never, max_line_width: Obj := Obj, precision: Obj := Obj, suppress_small: Obj := Obj, separator: Obj := Obj, prefix: Structural({.__len__ = (self: Never) -> Nat}) := {""}, style: (object: Obj) -> Str := _globals.Type__NoValueType, formatter: Obj := {None}, threshold: Obj := {None}, edgeitems: Obj := {None}, sign: T := {None}, floatmode: T := {None}, suffix: Obj := {""}, legacy: {False} := {None}) -> Never and (Type_50585, R, Type_50595, Type_50602, {", "}, O) -> Never) -> O
._array_repr_dispatcher: |Type_50607: Type|(arr: Type_50607, max_line_width: Obj := Obj, precision: Obj := Obj, suppress_small: Obj := Obj) -> global::Tuple([Type_50607])
.array_repr: |Type_49967: Type|(arr: Never, max_line_width: Type_49967 := Type_49967, precision: Obj := Obj, suppress_small: Obj := Obj) -> Structural({.__len__ = (self: Never) -> Nat; .__add__ = (self: Never, Type_49967) -> Never})
._guarded_repr_or_str: (v: Obj) -> Str
._array_str_implementation: |Type_50628 <: Structural({.item = (self: Obj) -> ?59364; .shape = ?E and ?59370}), E: Type, Type_50637: Type, Type_50639: Type, Type_59364: Type, Type_59370: Type, Type_50633: Type, Type_59378: Type|(a: Type_50628, max_line_width: Type_50633 := {None} and Type_50633, precision: Type_50637 := {None} and Type_50637, suppress_small: Type_50639 := {None} and Type_50639, array2string: (Type_50628, Type_50633, Type_50637, Type_50639, {" "}, {""}) -> Type_59378 := |T: Type|(a: Never, max_line_width: Obj := Obj, precision: Obj := Obj, suppress_small: Obj := Obj, separator: Obj := Obj, prefix: Structural({.__len__ = (self: Never) -> Nat}) := {""}, style: (object: Obj) -> Str := _globals.Type__NoValueType, formatter: Obj := {None}, threshold: Obj := {None}, edgeitems: Obj := {None}, sign: T := {None}, floatmode: T := {None}, suffix: Obj := {""}, legacy: {False} := {None}) -> Never and (Type_50628, Type_50633, Type_50637, Type_50639, {" "}, {""}) -> Type_59378) -> Type_59378
._array_str_dispatcher: |Type_50643: Type|(a: Type_50643, max_line_width: Obj := Obj, precision: Obj := Obj, suppress_small: Obj := Obj) -> global::Tuple([Type_50643])
.array_str: (a: Never, max_line_width: Obj := Obj, precision: Obj := Obj, suppress_small: Obj := Obj) -> Never
._array2string_impl: |T: Type|(a: Never, max_line_width: Obj := Obj, precision: Obj := Obj, suppress_small: Obj := Obj, separator: Obj := Obj, prefix: Structural({.__len__ = (self: Never) -> Nat}) := {""} and Structural({.__len__ = (self: Never) -> Nat}), style: (object: Obj) -> Str := _globals.Type__NoValueType and (object: Obj) -> Str, formatter: Obj := {None}, threshold: Obj := {None}, edgeitems: Obj := {None}, sign: T := {None} and T, floatmode: T := {None} and T, suffix: Obj := {""}, legacy: {False} := {None} and {False}) -> Never
._default_array_str: Never
._default_array_repr: Never
