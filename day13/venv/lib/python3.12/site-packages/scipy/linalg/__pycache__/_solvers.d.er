##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/linalg/_solvers.py 1734628983 28290

.warnings = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_1 = pyimport "__init__"

.inv: Never
.LinAlgError: Never
.norm: Never
.cond: Never
.svd: Never
.___v_desugar_2 = pyimport "_basic"
._basic = pyimport "_basic"
.solve: Never
.solve_triangular: (a: Obj, b: Obj, trans: {1, 0, 2} := {2, 0, 1} and {1, 0, 2}, lower: Obj := Obj, unit_diagonal: Obj := Obj, overwrite_b: {False} := {False} and {False}, check_finite: Obj := Obj) -> Never
.matrix_balance: (A: Obj, permute: Obj := Obj, scale: Obj := Obj, separate: Obj := Obj, overwrite_a: Obj := Obj) -> global::Tuple([Never, Never])
.___v_desugar_3 = pyimport "lapack"
.lapack = pyimport "lapack"
.get_lapack_funcs: (names: global::Iterable(Never), arrays: Never := Never, dtype: Obj := Obj, ilp64: Bool := Bool and Bool) -> Never
.___v_desugar_4 = pyimport "_decomp_schur"
._decomp_schur = pyimport "_decomp_schur"
.schur: |T :> {"real"}, T <: global::Indexable(K, V), K :> {0, 1}, E :> {None}, Type_488212 :> {True}, Type_488212 <: Bool, V: Type|(a: Obj, output: T := T and T, lwork: E := E and E, overwrite_a: {False} := {False} and {False}, sort: {None} := {None} and {None}, check_finite: Type_488212 := Type_488212 and Type_488212) -> global::Indexable(Obj, Never) or T
.___v_desugar_5 = pyimport "_decomp_lu"
._decomp_lu = pyimport "_decomp_lu"
.lu: Never
.___v_desugar_6 = pyimport "_decomp_qr"
._decomp_qr = pyimport "_decomp_qr"
.qr: |V <: Structural({.__or__ = (self: Never, ?R) -> ?V}), R: Type, V: Type|(a: Obj, overwrite_a: V := {False} and V, lwork: V := {None} and V, mode: {"r"} := {"full"} and {"r"}, pivoting: Bool := {False} and Bool, check_finite: Bool := {True} and Bool) -> Never
.___v_desugar_7 = pyimport "_decomp_qz"
._decomp_qz = pyimport "_decomp_qz"
.ordqz: Never
.___v_desugar_8 = pyimport "_decomp"
._decomp = pyimport "_decomp"
._asarray_validated: (a: Obj, check_finite: Bool := Bool and Bool, sparse_ok: Bool := Bool and Bool, objects_ok: Bool := Bool and Bool, mask_ok: Bool := Bool and Bool, as_inexact: Bool := Bool and Bool) -> Never
.___v_desugar_9 = pyimport "_special_matrices"
._special_matrices = pyimport "_special_matrices"
.kron: Never
.block_diag: Never
.__all__: global::List!({"solve_discrete_are", "solve_sylvester", "solve_discrete_lyapunov", "solve_continuous_are", "solve_lyapunov", "solve_continuous_lyapunov"}, 6)
.solve_sylvester: (a: Obj, b: Obj, q: Obj) -> Never
.solve_continuous_lyapunov: (a: Obj, q: Obj) -> Never
.solve_lyapunov: (a: Obj, q: Obj) -> Never
._solve_discrete_lyapunov_direct: (a: Obj, q: Obj) -> Never
._solve_discrete_lyapunov_bilinear: |O: Type, K: Type, Type_488600 <: Structural({.conj = (self: Obj) -> Never; .__add__ = (self: Never, ?R) -> ?O; .shape = ?Self}), V: Type, Self <: global::Indexable(?K, ?V), R: Type|(a: Type_488600, q: Obj) -> Never
.solve_discrete_lyapunov: (a: Obj, q: Obj, method: Structural({.lower = (self: Obj) -> {"direct"}}) := {None} and Structural({.lower = (self: Obj) -> {"direct"}})) -> Never
.solve_continuous_are: (a: Obj, b: Obj, q: Obj, r: Obj, e: Obj := Obj, s: Obj := Obj, balanced: Bool := Bool) -> Never
.solve_discrete_are: |V <: Structural({.__neg__ = (self: Never) -> ?R}), V <: Structural({.__neg__ = (self: Never) -> ?U and (self: Never) -> ?R}), V: Type, R: Type, U: Type|(a: V, b: V, q: V, r: V, e: V := {None} and V, s: V := {None} and V, balanced: Bool := {True} and Bool) -> Never
._are_validate_args: (a: Obj, b: Obj, q: Obj, r: Obj, e: Obj, s: Obj, eq_type: Str := Str) -> global::Tuple([Never, Never, Never, Never, Never, Never, Never, Never, {Complex}, {s in {Type_v_global_439038: Obj | Type_v_global_439038 != None}} or {e in {Type_v_global_439037: Obj | Type_v_global_439037 != None}}])
