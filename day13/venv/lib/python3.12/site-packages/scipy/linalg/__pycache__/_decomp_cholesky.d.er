##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/linalg/_decomp_cholesky.py 1734628983 12543

.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_1 = pyimport "__init__"

.asarray_chkfinite: Never
.asarray: Never
.atleast_2d: Never
.empty_like: Never
.___v_desugar_2 = pyimport "_misc"
._misc = pyimport "_misc"
.LinAlgError: Never
._datacopied: Never
.___v_desugar_3 = pyimport "lapack"
.lapack = pyimport "lapack"
.get_lapack_funcs: (names: global::Iterable(Never), arrays: Never := Never, dtype: Obj := Obj, ilp64: Bool := Bool and Bool) -> Never
.__all__: global::List!({"cholesky", "cho_solve", "cho_factor", "cholesky_banded", "cho_solve_banded"}, 5)
._cholesky: |Type_488248: Type, R: Type, R :> {0}|(a: Obj, lower: Type_488248 := Type_488248, overwrite_a: Structural({.__or__ = (self: Never, R) -> Structural({.__or__ = (self: Never, R) -> Never})}) := {False} and Structural({.__or__ = (self: Never, R) -> Structural({.__or__ = (self: Never, R) -> Never})}), clean: Obj := {True}, check_finite: Bool := {True} and Bool) -> global::Tuple([Structural({.__gt__ = (self: Never, R) -> Bool; .__lt__ = (self: Never, R) -> Bool}), Type_488248])
.cholesky: |Type_488248 :> {False}, Type_488254 :> {True}, Type_488254 <: Bool|(a: Obj, lower: Type_488248 := Type_488248 and Type_488248, overwrite_a: {False} := {False} and {False}, check_finite: Type_488254 := Type_488254 and Type_488254) -> Structural({.__gt__ = (self: Never, Bool) -> Bool; .__lt__ = (self: Never, Bool) -> Bool})
.cho_factor: |Type_488248: Type, R: Type|(a: Obj, lower: Type_488248 := Type_488248, overwrite_a: Structural({.__or__ = (self: Never, R) -> Structural({.__or__ = (self: Never, R) -> Never}) and (self: Never, R) -> Structural({.__or__ = (self: Never, R) -> Never})}) := {False} and Structural({.__or__ = (self: Never, R) -> Structural({.__or__ = (self: Never, R) -> Never}) and (self: Never, R) -> Structural({.__or__ = (self: Never, R) -> Never})}), check_finite: Bool := {True} and Bool) -> global::Tuple([Structural({.__gt__ = (self: Never, R) -> Bool; .__lt__ = (self: Never, R) -> Bool}), Type_488248])
.cho_solve: |Type_488286 :> {True}, Type_488286 <: Bool|(c_and_lower: global::Indexable(Obj, global::List(Type, _: Nat)), b: Obj, overwrite_b: {False} := {False} and {False}, check_finite: Type_488286 := Type_488286 and Type_488286) -> {0}
.cholesky_banded: |E: Type, Type_489946: Type, Type_488297 :> {True}, Type_488297 <: Bool, Type_488292 <: Structural({.size = ?E; .dtype = ?489946}), Type_488293 :> {False}, Type_488295 :> {False}|(ab: Type_488292, overwrite_ab: Type_488293 := Type_488293 and Type_488293, lower: Type_488295 := Type_488295 and Type_488295, check_finite: Type_488297 := Type_488297 and Type_488297) -> Structural({.__gt__ = (self: Never, Obj) -> Bool; .__lt__ = (self: Never, Obj) -> Bool})
.cho_solve_banded: |E: Type, K: Type, Type_488306 <: Structural({.size = ?E; .shape = ?Self; .dtype = ?490487}), Type_488307 :> {False}, V <: Structural({.__gt__ = (self: Never, ?R) -> Bool; .__lt__ = (self: Never, ?R) -> Bool}), V: Type, R :> {0}, V <: Structural({.__gt__ = (self: Never, ?R) -> Bool; .__lt__ = (self: Never, ?R) -> Bool}), Self :> global::Tuple([?V, {True}]), Self <: global::Indexable(?K, ?V), Type_488313 :> {True}, Type_488313 <: Bool, Self <: global::Indexable(?K, ?V), Type_490487: Type, R: Type|(cb_and_lower: Self, b: Type_488306, overwrite_b: Type_488307 := Type_488307 and Type_488307, check_finite: Type_488313 := Type_488313 and Type_488313) -> V
