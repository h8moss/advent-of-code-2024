##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/_lib/_docscrape.py 1734628983 21498

.inspect = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.textwrap = pyimport "<failure>"


.re = pyimport "<failure>"


.pydoc = pyimport "<failure>"


.___v_desugar_1 = pyimport "<failure>"

.warn: Never
.___v_desugar_2 = pyimport "<failure>"

.namedtuple: Never
.___v_desugar_3 = pyimport "<failure>"

.Callable: Never
.Mapping: Never
.copy = pyimport "<failure>"


.sys = pyimport "<failure>"


.strip_blank_lines: (l: Never) -> Never
.Reader: ClassType
.Reader.__call__: (data: Obj) -> scipy._lib._docscrape.Reader
.Reader.__getitem__: (self: scipy._lib._docscrape.Reader, n: Obj) -> Never
.Reader.reset: (self: scipy._lib._docscrape.Reader) -> NoneType
.Reader.read: (self: scipy._lib._docscrape.Reader) -> Never
.Reader.seek_next_non_empty_line: (self: scipy._lib._docscrape.Reader) -> NoneType
.Reader.eof: (self: scipy._lib._docscrape.Reader) -> Bool
.Reader.read_to_condition: (self: scipy._lib._docscrape.Reader, condition_func: (Obj) -> Bool) -> global::List!(Never, 0)
.Reader.read_to_next_empty_line: (self: scipy._lib._docscrape.Reader) -> global::List!(Never, 0)
.Reader.read_to_next_unindented_line: (self: scipy._lib._docscrape.Reader) -> global::List!(Never, 0)
.Reader.peek: (self: scipy._lib._docscrape.Reader, n: Obj := Obj) -> Never
.Reader.is_empty: |Type_17520 <: Structural({.strip = (self: Obj) -> ?20584}), Type_20584: Type|(self: Type_17520) -> Never

.ParseError: ClassType
.ParseError <: global::Exception
.ParseError.__str__: (self: scipy._lib._docscrape.ParseError) -> Str

.Parameter: Never
.NumpyDocString: ClassType
.NumpyDocString <: Never
.NumpyDocString._parsed_data: Never
.NumpyDocString._doc: Never
.NumpyDocString.__call__: (docstring: Obj, config: Obj := Obj) -> scipy._lib._docscrape.NumpyDocString
.NumpyDocString.sections: global::Dict!({{"Warns"}: global::List!(Never, 0), {"Raises"}: global::List!(Never, 0), {"Warnings"}: global::List!(Never, 0), {"References"}: {""}, {"Other Parameters"}: global::List!(Never, 0), {"Returns"}: global::List!(Never, 0), {"index"}: global::Dict!({Never: Never}), {"Methods"}: global::List!(Never, 0), {"Receives"}: global::List!(Never, 0), {"Notes"}: global::List!(Never, 0), {"Summary"}: global::List!({""}, 1), {"Signature"}: {""}, {"Attributes"}: global::List!(Never, 0), {"See Also"}: global::List!(Never, 0), {"Yields"}: global::List!(Never, 0), {"Extended Summary"}: global::List!(Never, 0), {"Examples"}: {""}, {"Parameters"}: global::List!(Never, 0)})
.NumpyDocString.__getitem__: (self: scipy._lib._docscrape.NumpyDocString, key: Obj) -> Never
.NumpyDocString.__setitem__: (self: scipy._lib._docscrape.NumpyDocString, key: Obj, val: Obj) -> NoneType
.NumpyDocString.__iter__: |I <: global::Iterable(?T), T: Type|(self: scipy._lib._docscrape.NumpyDocString) -> ?I.Iterator
.NumpyDocString.__len__: (self: scipy._lib._docscrape.NumpyDocString) -> Nat
.NumpyDocString._is_at_section: (self: scipy._lib._docscrape.NumpyDocString) -> Bool
.NumpyDocString._strip: (self: scipy._lib._docscrape.NumpyDocString, doc: Never) -> Never
.NumpyDocString._read_to_next_section: (self: scipy._lib._docscrape.NumpyDocString) -> global::List!(Never, 0)
.NumpyDocString._read_sections: (self: scipy._lib._docscrape.NumpyDocString) -> NoneType
.NumpyDocString._parse_param_list: (self: scipy._lib._docscrape.NumpyDocString, content: Obj, single_element_is_type: Bool := Bool) -> global::List!(Never, 1)
.NumpyDocString._role: {":(?P<role>\\w+):"}
.NumpyDocString._funcbacktick: {"`(?P<name>(?:~\\w+\\.)?[a-zA-Z0-9_\\.-]+)`"}
.NumpyDocString._funcplain: {"(?P<name2>[a-zA-Z0-9_\\.-]+)"}
.NumpyDocString._funcname: Str
.NumpyDocString._funcnamenext: Str
.NumpyDocString._funcnamenext: Str
.NumpyDocString._description: {"(?P<description>\\s*:(\\s+(?P<desc>\\S+.*))?)?\\s*$"}
.NumpyDocString._func_rgx: Never
.NumpyDocString._line_rgx: Never
.NumpyDocString.empty_description: {".."}
.NumpyDocString._parse_see_also: |T :> global::Tuple([global::List!(?T, 1), global::List!(?T, 1)]), T <: Structural({.strip = (self: Obj) -> ?T; .startswith = (self: Obj, ?24816) -> ?R}), T: Type, R: Type, Type_24816: Type|(self: scipy._lib._docscrape.NumpyDocString, content: global::Iterable(T)) -> global::List!(T, 1)
.NumpyDocString._parse_index: (self: scipy._lib._docscrape.NumpyDocString, section: Obj, content: global::Iterable(Never)) -> global::Dict!({{"default"}: Structural({.strip = (self: Never) -> Never})})
.NumpyDocString._parse_summary: (self: scipy._lib._docscrape.NumpyDocString) -> NoneType
.NumpyDocString._parse: (self: Never) -> NoneType
.NumpyDocString._error_location: (self: scipy._lib._docscrape.NumpyDocString, msg: Str, error: Bool := Bool) -> Never
.NumpyDocString._str_header: |Type_17721 <: Structural({.__len__ = (self: Never) -> Nat})|(self: scipy._lib._docscrape.NumpyDocString, name: Type_17721, symbol: Nat := {"-"} and Nat) -> global::List!(Type_17721 or Nat, 2)
.NumpyDocString._str_indent: |R <: Str, R <: Nat|(self: scipy._lib._docscrape.NumpyDocString, doc: global::Iterable(R), indent: R := R) -> global::List!(Never, 0)
.NumpyDocString._str_signature: (self: scipy._lib._docscrape.NumpyDocString) -> Never
.NumpyDocString._str_summary: (self: scipy._lib._docscrape.NumpyDocString) -> Never
.NumpyDocString._str_extended_summary: (self: scipy._lib._docscrape.NumpyDocString) -> Never
.NumpyDocString._str_param_list: |Type_17432 <: Structural({.__len__ = (self: Never) -> Nat})|(self: scipy._lib._docscrape.NumpyDocString, name: Type_17432) -> global::List!(Never, 0)
.NumpyDocString._str_section: |Type_17432: Type, Type_27613: Type|(self: scipy._lib._docscrape.NumpyDocString, name: ?Type_17432) -> global::List!(?27613, 0)
.NumpyDocString._str_see_also: |M: Nat, T: Type, N: Nat|(self: scipy._lib._docscrape.NumpyDocString, func_role: Bool) -> global::List!(?T, ?N + ?M)
.NumpyDocString._str_index: |U: Type, T: Type|(self: scipy._lib._docscrape.NumpyDocString) -> ?U or ?T
.NumpyDocString.__str__: |Type_17820: Type|(self: scipy._lib._docscrape.NumpyDocString, func_role: Bool := ?17820 and Bool) -> Str

.indent: (Str: Obj, indent: Never := Never) -> Str
.dedent_lines: (lines: global::Iterable(Str)) -> Never
.header: |Type_17846 <: Structural({.__len__ = (self: Never) -> Nat; .__add__ = (self: Never, ?R) -> ?O}), R: Type, O: Type, R :> Nat|(text: Type_17846, style: Structural({.__mul__ = (self: Never, R) -> R}) := {"-"} and Structural({.__mul__ = (self: Never, R) -> R})) -> O
.FunctionDoc: ClassType
scipy = pyimport "scipy"
.FunctionDoc <: scipy._lib._docscrape.NumpyDocString
.FunctionDoc._f: Never
.FunctionDoc._role: Never
.FunctionDoc.__call__: (func: Obj, role: Obj := Obj, doc: Obj := Obj, config: Obj := Obj) -> scipy._lib._docscrape.FunctionDoc
.FunctionDoc.get_func: (self: scipy._lib._docscrape.FunctionDoc) -> global::Tuple([Never, Never])
.FunctionDoc.__str__: (self: scipy._lib._docscrape.FunctionDoc) -> Str

.ClassDoc: ClassType
.ClassDoc <: scipy._lib._docscrape.NumpyDocString
.ClassDoc._cls: Never
.ClassDoc.show_inherited_members: Never
.ClassDoc._mod: Never
.ClassDoc.__call__: (cls: Obj, doc: Obj := Obj, modulename: Obj := Obj, func_doc: Obj := Obj, config: Obj := Obj) -> scipy._lib._docscrape.ClassDoc
.ClassDoc.extra_public_methods: global::List!({"__call__"}, 1)
.ClassDoc.methods: (self: scipy._lib._docscrape.ClassDoc) -> Never
.ClassDoc.properties: (self: scipy._lib._docscrape.ClassDoc) -> Never
.ClassDoc._is_show_member: (self: scipy._lib._docscrape.ClassDoc, name: Obj) -> {True}

