##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/optimize/_minpack_py.py 1734628983 44787
.warnings = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.___v_desugar_1 = pyimport "__init__"
.__init__ = pyimport "__init__"
._minpack: Never
.np = pyimport "__init__"


.___v_desugar_2 = pyimport "__init__"

.atleast_1d: Never
.triu: Never
.shape: Never
.transpose: Never
.zeros: Never
.prod: Never
.greater: Never
.asarray: Never
.inf: Never
.finfo: Never
.inexact: Never
.issubdtype: Never
.dtype: Never
.linalg = pyimport "__init__"


.___v_desugar_3 = pyimport "__init__"

.svd: Never
.cholesky: Never
.solve_triangular: Never
.LinAlgError: Never
.___v_desugar_4 = pyimport "_util"
._util = pyimport "_util"
._asarray_validated: (a: Obj, check_finite: Bool := Bool, sparse_ok: Bool := Bool, objects_ok: Bool := Bool, mask_ok: Bool := Bool, as_inexact: Bool := Bool) -> Never
._lazywhere: (cond: Obj, arrays: Obj, f: () -> Never, fillvalue: Structural({.dtype = Ref(Obj)}) := {None} and Structural({.dtype = Ref(Obj)}), f2: () -> Never := {None} and () -> Never) -> Never
._contains_nan: |E :> {"raise"}|(a: Never, nan_policy: E := E, policies: Structural({.__contains__ = (self: Never, E) -> Bool}) := {None} and Structural({.__contains__ = (self: Never, E) -> Bool}), xp: Obj := {None}) -> global::Tuple([Bool, E])
.___v_desugar_5 = pyimport "_util"

._getfullargspec: (func: Obj) -> Never
.___v_desugar_6 = pyimport "_optimize"
._optimize = pyimport "_optimize"
.OptimizeResult: Never
._check_unknown_options: Never
.OptimizeWarning: Never
.___v_desugar_7 = pyimport "__init__"

.least_squares: (fun: (Obj) -> Never, x0: Obj, jac: (Obj) -> Never := {"2-point"} and (Obj) -> Never, bounds: {"lm"} := {"lm"}, method: Never := Never, ftol: Never := Never, xtol: Never := Never, gtol: {"jac"} := {0.00000001} and {"jac"}, x_scale: {"linear"} := {1.0} and {"linear"}, loss: Never := Never, f_scale: Never := Never, diff_step: {"exact"} := {None} and {"exact"}, tr_solver: Obj := {None}, tr_options: Never := Never, jac_sparsity: {100} := {None} and {100}, max_nfev: Obj := {None}, verbose: Obj := {0}, args: Obj := Obj, kwargs: Obj := global::Dict!({Never: Never})) -> Never
.___v_desugar_8 = pyimport "least_squares"
.least_squares = pyimport "least_squares"
.prepare_bounds: (bounds: Obj, n: Obj) -> global::Tuple([Never, Never])
.___v_desugar_9 = pyimport "_minimize"
._minimize = pyimport "_minimize"
.Bounds: {_constraints.Bounds}
.__all__: global::List!({"leastsq", "fixed_point", "fsolve", "curve_fit"}, 4)
._check_func: (checker: Obj, argname: Obj, thefunc: () -> Never, x0: global::Indexable(Obj, Never), args: Obj, numinputs: NoneType or Int, output_shape: Never := Never) -> global::Tuple([Never, Never])
.fsolve: Never
._root_hybr: ||Never
.LEASTSQ_SUCCESS: Never
.LEASTSQ_FAILURE: Never
.leastsq: |R :> global::Tuple([?R]), Type_269365: Type, R: Type, R :> Nat|(func: () -> Type_269365, x0: Obj, args: R := R, Dfun: () -> Type_269365 := {None} and () -> Type_269365, full_output: Bool := {False} and Bool, col_deriv: Bool := {False} and Bool, ftol: R := {0.0000000149012} and R, xtol: R := {0.0000000149012} and R, gtol: R := {0.0} and R, maxfev: R := {0} and R, epsfcn: Obj := {None}, factor: Obj := {100}, diag: Obj := {None}) -> Never
._lightweight_memoizer: |E: Type, Type_270155: Type|(f: (E) -> Type_270155) -> (params: Obj) -> Never
._wrap_func: |Type_262702 <: Structural({.size = ?E; .ndim = ?E}), E: Type, R: Type, Type_262700: Type, O: Type|(func: (Type_262700) -> Structural({.__sub__ = (self: Never, R) -> O}), xdata: Type_262700, ydata: R, transform: Type_262702) -> (params: Obj) -> Never
._wrap_jac: |E: Type, Type_262705: Type, Type_270246: Type, Type_262706 <: Structural({.ndim = ?E})|(jac: (Type_262705) -> Type_270246, xdata: Type_262705, transform: Type_262706) -> (params: Obj) -> Never
._initialize_feasible: |Self <: global::Indexable(?K, ?V), K: Type, V: Type, Self <: global::Indexable(?K, ?V)|(lb: Self, ub: Self) -> Never
.curve_fit: |E: Type, R <: Float, R <: Structural({.size = ?E and ?270663; .__getitem__ = (self: Obj, ?270648) -> ?270649}), Type_270663: Type, Type_270648: Type, Type_270649: Type|(f: (Obj) -> Structural({.__sub__ = (self: Never, R) -> Never}), xdata: Never, ydata: R, p0: Structural({.size = Int and R}) := {None} and Structural({.size = Int and R}), sigma: Obj := {None}, absolute_sigma: Bool := {False} and Bool, check_finite: Bool := {None} and Bool, bounds: {"lm"} := {"lm"}, method: (params: Never) -> Never := {None} and (params: Never) -> Never, jac: Bool := {None} and Bool, full_output: {"propagate"} := {False} and {"propagate"}, nan_policy: Obj := {None}, **kwargs := ?262732) -> Never
.check_gradient: (fcn: (Obj) -> Never, Dfcn: (Obj) -> Never, x0: Obj, args: Obj := Obj, col_deriv: {0} := {0} and {0}) -> global::Tuple([Never, Never])
._del2: |R <: Structural({.__sub__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(p0: R, p1: Structural({.__sub__ = (self: Never, R) -> O}), d: R) -> O
._relerr: |Type_262746 <: Structural({.__sub__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(actual: Type_262746, desired: R) -> O
._fixed_point_helper: (func: (Obj) -> Obj, x0: Obj, args: Obj, xtol: Obj, maxiter: {_: Int}, use_accel: Bool) -> Never
.fixed_point: (func: (Obj) -> Obj, x0: Obj, args: Obj := Obj, xtol: Obj := {0.00000001}, maxiter: {_: Int} := {500} and {_: Int}, method: Obj := {"del2"}) -> Never
