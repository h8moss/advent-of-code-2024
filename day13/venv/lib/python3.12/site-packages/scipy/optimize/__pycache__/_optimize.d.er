##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/optimize/_optimize.py 1734628983 146664
.__all__: global::List!({"fmin", "bracket", "rosen", "rosen_hess", "check_grad", "OptimizeWarning", "fmin_powell", "rosen_hess_prod", "show_options", "approx_fprime", "brent", "rosen_der", "line_search", "fminbound", "brute", "fmin_cg", "golden", "OptimizeResult", "fmin_ncg", "fmin_bfgs"}, 20)
.__docformat__: {"restructuredtext en"}
.math = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.warnings = pyimport "<failure>"


.sys = pyimport "<failure>"


.inspect = pyimport "<failure>"


.___v_desugar_1 = pyimport "__init__"
.__init__ = pyimport "__init__"
.atleast_1d: Never
.eye: Never
.argmin: Never
.zeros: Never
.shape: Never
.squeeze: Never
.asarray: Never
.sqrt: Never
.np = pyimport "__init__"


.___v_desugar_2 = pyimport "__init__"

.cholesky: Never
.issymmetric: Never
.LinAlgError: Never
.___v_desugar_3 = pyimport "__init__"

.LinearOperator: Never
.___v_desugar_4 = pyimport "_linesearch"
._linesearch = pyimport "_linesearch"
.line_search_wolfe1: Never
.line_search_wolfe2: Never
.line_search: Never
.LineSearchWarning: Never
.___v_desugar_5 = pyimport "_numdiff"
._numdiff = pyimport "_numdiff"
.approx_derivative: (fun: (Structural({.dtype = Obj})) -> Never, x0: Obj, method: Never := Never, rel_step: Never := Never, abs_step: Never := Never, f0: Never := Never, bounds: Structural({.__len__ = (self: Never) -> Nat}) := Structural({.__len__ = (self: Never) -> Nat}) and Structural({.__len__ = (self: Never) -> Nat}), sparsity: Structural({.__and__ = (self: Never, Obj: Obj) -> Bool}) := {_: Never | True} and Structural({.__and__ = (self: Never, Obj: Obj) -> Bool}), as_linear_operator: Obj := {False}, args: Obj := Obj, kwargs: Obj := global::Dict!({Never: Never})) -> Never
.___v_desugar_6 = pyimport "_util"
._util = pyimport "_util"
._getfullargspec: (func: Obj) -> Never
.___v_desugar_7 = pyimport "_util"

.MapWrapper: {_util.MapWrapper}
.check_random_state: (seed: Obj) -> Never
._RichResult: Never
._call_callback_maybe_halt: |Type_424235: Type|(callback: (Type_424235) -> Never, res: Type_424235) -> Never
.___v_desugar_8 = pyimport "_differentiable_functions"
._differentiable_functions = pyimport "_differentiable_functions"
.ScalarFunction: Never
.FD_METHODS: Never
._status_message: global::Dict!({{"maxfev"}: {"Maximum number of function evaluations has been exceeded."}, {"pr_loss"}: {"Desired error not necessarily achieved due to precision loss."}, {"nan"}: {"NaN result encountered."}, {"maxiter"}: {"Maximum number of iterations has been exceeded."}, {"success"}: {"Optimization terminated successfully."}, {"out_of_bounds"}: {"The result is outside of the provided bounds."}})
.MemoizeJac: ClassType
.MemoizeJac._value: Never
.MemoizeJac.jac: Never
.MemoizeJac.fun: Never
.MemoizeJac.x: Never
.MemoizeJac.__call__: (self: _optimize.MemoizeJac, x: Obj, *args: Obj) -> Never
.MemoizeJac._compute_if_needed: (self: _optimize.MemoizeJac, x: Obj, *args: Obj) -> NoneType
.MemoizeJac.__call__: (self: _optimize.MemoizeJac, x: Obj, *args: Obj) -> Never
.MemoizeJac.derivative: (self: _optimize.MemoizeJac, x: Obj, *args: Obj) -> Never

._wrap_callback: |Type_499952: Type|(callback: () -> Type_499952, method: {"trust-constr"} := {None} and {"trust-constr"}) -> (res: Obj) -> Never
.OptimizeResult: ClassType
.OptimizeResult <: Never

.OptimizeWarning: ClassType
.OptimizeWarning <: global::UserWarning

._check_positive_definite: (Hk: Obj) -> NoneType
._check_unknown_options: (unknown_options: Never) -> NoneType
.is_finite_scalar: (x: Obj) -> Bool
._epsilon: Never
.vecnorm: (x: Obj, ord: Float := Float) -> Never
._prepare_scalar_function: (fun: Obj, x0: Obj, jac: Obj := Obj, args: Obj := Obj, bounds: Obj := Obj, epsilon: Obj := Obj, finite_diff_rel_step: Obj := Obj, hess: Obj := Obj) -> Never
._clip_x_for_func: |Type_500129: Type, Type_500135 <: Structural({.__lt__ = (self: Never, ?V) -> Bool; .__gt__ = (self: Never, ?V) -> Bool}), V: Type|(func: (Type_500135) -> Type_500129, bounds: global::Indexable(Obj, V)) -> |V: Type, Type_500135 <: Structural({.__lt__ = (self: Never, ?V) -> Bool; .__gt__ = (self: Never, ?V) -> Bool})|(x: Type_500135) -> Never
._check_clip_x: |V: Type, Type_500135 <: Structural({.__lt__ = (self: Never, ?V) -> Bool; .__gt__ = (self: Never, ?V) -> Bool})|(x: Type_500135, bounds: global::Indexable(Obj, V)) -> Type_500135
.rosen: (x: Obj) -> Never
.rosen_der: (x: Obj) -> Never
.rosen_hess: Never
.rosen_hess_prod: Never
._wrap_scalar_function: |Type_500443: Type|(function: (Obj) -> Type_500443, args: global::List(Never, _: Nat)) -> global::Tuple([global::List!({0}, 1), (x: Obj, *wrapper_args: Obj) -> Never])
.Type__MaxFuncCallError: ClassType
.Type__MaxFuncCallError <: global::RuntimeError

._wrap_scalar_function_maxfun_validation: |Type_500516: Type, M: Nat, R <: Float, T: Type, R <: global::List(?T, ?M)|(function: (Obj) -> Type_500516, args: R, maxfun: R) -> global::Tuple([global::List!({0}, 1), (x: Obj, *wrapper_args: Obj) -> Never])
.fmin: |T: Type|(func: (Obj) -> Never, x0: Obj, args: global::List(T, _: Nat) := global::List(T, _: Nat), xtol: Obj := Obj, ftol: Obj := Obj, maxiter: Obj := Obj, maxfun: Obj := Obj, full_output: Bool := Bool, disp: Obj := Obj, retall: Bool := Bool, callback: (res: Never) -> Never := {None} and (res: Never) -> Never, initial_simplex: Obj := {None}) -> T
._minimize_neldermead: |T: Type, R :> {0.0001}, Type_499194 :> {False}, Type_499194 <: Bool, Type_499196 :> {False}, Type_499196 <: Bool, Type_499204 :> {False}, Type_499204 <: Bool, M: Nat, R <: global::List(?T, ?M), Type_499206 :> {None}, Type_499198 :> {None}|(func: (Obj) -> Never, x0: Obj, args: R := R, callback: (res: Obj) -> Never := {None} and (res: Obj) -> Never, maxiter: {None} := {None} and {None}, maxfev: {None} := {None} and {None}, disp: Type_499194 := Type_499194 and Type_499194, return_all: Type_499196 := Type_499196 and Type_499196, initial_simplex: Type_499198 := Type_499198 and Type_499198, xatol: R := R and R, fatol: R := R and R, adaptive: Type_499204 := Type_499204 and Type_499204, bounds: Type_499206 := Type_499206 and Type_499206, **unknown_options := ?499208) -> global::Indexable(Obj, Never)
.approx_fprime: (xk: Obj, f: (Obj) -> Never, *args: Obj, epsilon: Never := Never) -> Never
.check_grad: (func: |Type_501332 <: Structural({.__mul__ = (self: Never, ?R) -> ?R}), R: Type, O: Type, Type_501354: Type|(w: Type_501332, func: (O) -> Type_501354, x0: Structural({.__add__ = (self: Never, R) -> O}), v: R, *args: Obj) -> Type_501354, grad: (Obj) -> Never, x0: Obj, *args: Obj, epsilon: Obj := Obj, direction: {"random"} := {"all"} and {"random"}, seed: Obj := {None}) -> Never
.approx_fhess_p: |R <: Structural({.__sub__ = (self: Never, ?R) -> ?O}), R <: Structural({.__mul__ = (self: Never, ?R) -> ?R}), R: Type, Type_499227 <: Structural({.__add__ = (self: Never, ?R) -> ?O}), O: Type|(x0: Type_499227, p: R, fprime: () -> R, epsilon: R, *args: Obj) -> O
.Type__LineSearchError: ClassType
.Type__LineSearchError <: global::RuntimeError

._line_search_wolfe12: |Type_499235 <: Structural({.__add__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(f: Obj, fprime: Obj, xk: Type_499235, pk: R, gfk: Obj, old_fval: Obj, old_old_fval: Obj, **kwargs := ?V) -> Never
.fmin_bfgs: (f: Obj, x0: Obj, fprime: Obj := Obj, args: Obj := Obj, gtol: Obj := Obj, norm: Obj := Obj, epsilon: Obj := Obj, maxiter: Bool := Bool, full_output: Obj := Obj, disp: Bool := Bool, retall: (res: Never) -> Never := {0} and (res: Never) -> Never, callback: Obj := {None}, xrtol: Obj := {0}, c1: Obj := {0.0001}, c2: Obj := {0.9}, hess_inv0: Obj := {None}) -> Never
._minimize_bfgs: |R :> {0.00001}, R <: Float, Type_499289 :> {False}, Type_499289 <: Bool, Type_499301 :> {None}, U :> {0.9}, Type_499135 :> {False}, Type_499133 :> {None}, R :> {"2-point"}|(fun: Obj, x0: Obj, args: Obj := Obj, jac: R := R, callback: (res: Obj) -> Never := {None} and (res: Obj) -> Never, gtol: R := R and R, norm: Type_499133 := Type_499133 and Type_499133, eps: R := R and R, maxiter: {None} := {None} and {None}, disp: Type_499289 := Type_499289 and Type_499289, return_all: Type_499135 := Type_499135 and Type_499135, finite_diff_rel_step: {None} := {None} and {None}, xrtol: {0} := {0} and {0}, c1: {0.0001} := {0.0001} and {0.0001}, c2: U := U and U, hess_inv0: Type_499301 := Type_499301 and Type_499301, **unknown_options := ?499303) -> global::Indexable(Obj, Never)
._print_success_message_or_warn: (warnflag: Obj, message: Obj, warntype: {None} := {None} and {None}) -> NoneType
.fmin_cg: (f: Obj, x0: Obj, fprime: Obj := Obj, args: Obj := Obj, gtol: Obj := Obj, norm: Obj := Obj, epsilon: Obj := Obj, maxiter: Bool := Bool, full_output: Obj := Obj, disp: Bool := Bool, retall: (res: Never) -> Never := {0} and (res: Never) -> Never, callback: Obj := {None}, c1: Obj := {0.0001}, c2: Obj := {0.4}) -> Never
._minimize_cg: |Type_499353 :> {False}, Type_499353 <: Bool, R <: Float, R :> {0.00001}, V: Type, Type_499135 :> {False}, V :> {0.0, 10000000000000000159028911097599180468360808563945281389781327557747838772170381060813469985856815104.0, 0.0001, 0}, Type_499133 :> {None}, R :> {"2-point"}|(fun: Obj, x0: Obj, args: Obj := Obj, jac: R := R, callback: (res: Obj) -> Never := {None} and (res: Obj) -> Never, gtol: R := R and R, norm: Type_499133 := Type_499133 and Type_499133, eps: R := R and R, maxiter: {None} := {None} and {None}, disp: Type_499353 := Type_499353 and Type_499353, return_all: Type_499135 := Type_499135 and Type_499135, finite_diff_rel_step: {None} := {None} and {None}, c1: V := {0.0001} and V, c2: Obj := {0.4}, **unknown_options := ?499363) -> global::Indexable(Obj, V)
.fmin_ncg: |R :> {None}, V :> {0.0, 10000000000000000159028911097599180468360808563945281389781327557747838772170381060813469985856815104.0, 0.0001, 0}, R :> {"2-point"}|(f: Obj, x0: Obj, fprime: R, fhess_p: Obj := Obj, fhess: R := R, args: Obj := Obj, avextol: Obj := Obj, epsilon: Obj := Obj, maxiter: Obj := Obj, full_output: Bool := Bool, disp: Obj := Obj, retall: Bool := Bool, callback: (res: Never) -> Never := {None} and (res: Never) -> Never, c1: V := {0.0001} and V, c2: V := {0.9} and V) -> Never
._minimize_newtoncg: |R :> {"2-point"}, Type_499411 :> {False}, Type_499411 <: Bool, Type_499413 :> {False}, Type_499413 <: Bool, R :> {None}, V :> {0.0, 10000000000000000159028911097599180468360808563945281389781327557747838772170381060813469985856815104.0, 0.0001, 0}, V: Type, R :> {0.00001}|(fun: Obj, x0: Obj, args: Obj := Obj, jac: R := R, hess: R := R, hessp: Obj := Obj, callback: (res: Obj) -> Never := {None} and (res: Obj) -> Never, xtol: R := R and R, eps: R := R and R, maxiter: {None} := {None} and {None}, disp: Type_499411 := Type_499411 and Type_499411, return_all: Type_499413 := Type_499413 and Type_499413, c1: V := {0.0001} and V, c2: V := {0.9} and V, **unknown_options := ?499419) -> global::Indexable(Obj, V)
.fminbound: (func: Obj, x1: Obj, x2: Obj, args: Obj := Obj, xtol: Obj := Obj, maxfun: Obj := Obj, full_output: Bool := Bool, disp: Obj := Obj) -> Never
._minimize_scalar_bounded: |Type_507472 :> {500}, Type_507472 <: Float|(func: Obj, bounds: global::Tuple([Never, Never]), args: Obj := Obj, xatol: {0.00001} := {0.00001} and {0.00001}, maxiter: Type_507472 := Type_507472 and Type_507472, disp: {0} := {0} and {0}, **unknown_options := ?499445) -> global::Indexable(Obj, Never)
.Brent: ClassType
.Brent.maxiter: Never
.Brent.iter: Never
.Brent.xmin: Never
.Brent.args: Never
.Brent.fval: Never
.Brent.funcalls: Never
.Brent.func: Never
.Brent._mintol: Never
.Brent.disp: Never
.Brent.tol: Never
.Brent._cg: Never
.Brent.__call__: (func: Obj, args: Obj := Obj, tol: Obj := Obj, maxiter: Obj := Obj, full_output: Obj := Obj, disp: Obj := Obj) -> _optimize.Brent
.Brent.set_bracket: (self: _optimize.Brent, brack: Obj := Obj) -> NoneType
.Brent.get_bracket_info: Never
.Brent.optimize: (self: _optimize.Brent) -> NoneType
.Brent.get_result: (self: _optimize.Brent, full_output: Bool := Bool) -> Never

.brent: (func: Obj, args: Obj := Obj, brack: Obj := Obj, tol: Obj := Obj, full_output: Bool := Bool, maxiter: Obj := Obj) -> Never
._minimize_scalar_brent: |R :> {500}, Type_499457 :> {0}, Type_499457 <: Bool|(func: Obj, brack: Obj := Obj, args: Obj := Obj, xtol: {0.0000000148} := {0.0000000148} and {0.0000000148}, maxiter: R := R and R, disp: Type_499457 := Type_499457 and Type_499457, **unknown_options := ?499493) -> global::Indexable(Obj, Never)
.golden: (func: Obj, args: Obj := Obj, brack: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, Obj) -> Float}) := Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, Obj) -> Float}), tol: Obj := Obj, full_output: Bool := Bool, maxiter: Obj := Obj) -> Never
._minimize_scalar_golden: |R: Type, R :> {5000}, R <: {5000}, Type_499512 <: Structural({.__mul__ = (self: Never, ?R) -> ?R})|(func: Obj, brack: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, Obj) -> Float}) := {None} and Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, Obj) -> Float}), args: R := R, xtol: Type_499512 := Type_499512 and Type_499512, maxiter: {5000} := R and {5000}, disp: {0} := {0} and {0}, **unknown_options := ?499518) -> global::Indexable(Obj, Never)
.bracket: |R :> {1000}, R <: Float, R: Type, R <: Structural({.__sub__ = (self: Never, ?R) -> ?R and (self: Never, ?R) -> ?R; .__add__ = (self: Never, ?R) -> Never and (self: Never, ?R) -> Never; .__lt__ = (self: Never, ?R) -> Bool})|(func: () -> {3}, xa: Float := Float and Float, xb: Float := Float and Float, args: R := R, grow_limit: {110.0} := {110.0} and {110.0}, maxiter: R := R and R) -> global::Tuple([Never, Never, R, {3}, {3}, {3}, Nat])
.BracketError: ClassType
.BracketError <: global::RuntimeError

._recover_from_bracket_error: |Type_505923: Type, Type_499535: Type, Type_499534: Type, T: Type|(solver: (T, Type_499534, Type_499535) -> Type_505923, fun: T, bracket: Type_499534, args: Type_499535, **options := ?499536) -> Type_505923
._line_for_search: Never
._linesearch_powell: |R :> {100}, O <: {0.00001}, R: Type, O <: Structural({.__add__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), O: Type|(func: (O) -> Never, p: O, xi: R, tol: Structural({.__div__ = (self: Never, R) -> O and (self: Never, R) -> O}) := {0.001} and Structural({.__div__ = (self: Never, R) -> O and (self: Never, R) -> O}), lower_bound: Never := Never, upper_bound: Never := Never, fval: Obj := {None}) -> Never
.fmin_powell: |M: Nat, R <: Structural({.__gt__ = (self: Never, Never) -> Bool}), T: Type, R <: global::List(?T, ?M)|(func: (Obj) -> Never, x0: R, args: R := R, xtol: Obj := Obj, ftol: Obj := Obj, maxiter: Obj := Obj, maxfun: Obj := Obj, full_output: Bool := Bool, disp: Obj := Obj, retall: Bool := Bool, callback: (res: Never) -> Never := {None} and (res: Never) -> Never, direc: Obj := {None}) -> T
._minimize_powell: |Type_499594 :> {False}, Type_499594 <: Bool, Type_499598 :> {False}, Type_499598 <: Bool, R <: global::List(?T, ?M), Self <: global::Indexable(?K, ?V), Type_506923: Type, Type_499584 <: Structural({.lb = ?506923; .__and__ = (self: Never, ?R) -> ?O; .ub = Never}), Type_499596 <: Structural({.__setitem__ = (self: Type_499596, ?R, ?V) -> ?T; .shape = ?Self; .__getitem__ = (self: Type_499596, {Type_v_global_4: Int | (Type_v_global_4 >= 0) and (Type_v_global_4 <= pred(<failure>))}) -> ?R and (self: Type_499596, ?R) -> ?V}), Self <: global::Indexable(?K, ?V), R <: Structural({.__gt__ = (self: Never, Never) -> Bool}), K: Type, T: Type, O: Type, V: Type, M: Nat, R: Type, Type_499596 <: Structural({.__setitem__ = (self: Obj, ?R, ?V) -> ?T; .shape = ?Self; .__getitem__ = (self: Obj, {Type_v_global_4: Int | (Type_v_global_4 >= 0) and (Type_v_global_4 <= pred(<failure>))}) -> ?R and (self: Obj, ?R) -> ?V})|(func: (Obj) -> Never, x0: R, args: R := R, callback: (res: Obj) -> Never := {None} and (res: Obj) -> Never, bounds: Type_499584 := Type_499584 and Type_499584, xtol: {0.0001} := {0.0001} and {0.0001}, ftol: {0.0001} := {0.0001} and {0.0001}, maxiter: {None} := {None} and {None}, maxfev: {None} := {None} and {None}, disp: Type_499594 := Type_499594 and Type_499594, direc: Type_499596 := Type_499596 and Type_499596, return_all: Type_499598 := Type_499598 and Type_499598, **unknown_options := ?499600) -> Self
._endprint: (x: Obj, flag: Obj, fval: Obj, maxfun: Float, xtol: Obj, disp: {0}) -> global::Tuple([])
.brute: Never
._Brute_Wrapper: ClassType

.show_options: |T :> {"root\n", "minimize_scalar\n", "linprog\n", "minimize\n", "\n\n===============\n", "\n\n\n=======\n", "========\n", "====\n", "\n\n\n========\n", "\n\n\n====\n", "===============\n", "=======\n"}, T <: Str, T: Type, T <: Structural({.lower = (self: Obj) -> ?T}), T <: Structural({.lower = (self: T) -> ?T})|(solver: Str := Str, method: T := T and T, disp: {False} := {True} and {False}) -> T
