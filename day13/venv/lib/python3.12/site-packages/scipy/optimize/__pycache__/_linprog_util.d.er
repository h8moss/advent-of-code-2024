##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/optimize/_linprog_util.py 1734628983 62749

.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.sps = pyimport "__init__"


.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.warn: Never
.___v_desugar_2 = pyimport "_optimize"
._optimize = pyimport "_optimize"
.OptimizeWarning: Never
.___v_desugar_3 = pyimport "_remove_redundancy"
._remove_redundancy = pyimport "_remove_redundancy"
._remove_redundancy_svd: ||Never
._remove_redundancy_pivot_sparse: (A: Obj, rhs: global::Indexable(Obj, Never)) -> global::Tuple([Never, Never, Nat, Str])
._remove_redundancy_pivot_dense: (A: Obj, rhs: global::Indexable(Obj, Never), true_rank: Obj := Obj) -> global::Tuple([Never, Never, Nat, Str])
._remove_redundancy_id: ||Never
.___v_desugar_4 = pyimport "<failure>"

.namedtuple: Never
._LPProblem: Never


._check_sparse_inputs: |Type_231235: Type, Type_231233: Type|(options: Never, meth: Obj, A_ub: Type_231233, A_eq: Type_231235) -> global::Tuple([Never, Type_231233, Type_231235])
._format_A_constraints: |U: Type|(A: U, n_x: Obj, sparse_lhs: Bool := Bool) -> U
._format_b_constraints: (b: Obj) -> Never
._clean_inputs: Never
._presolve: |Type_231256 <: Structural({.__and__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), R: Type, O: Type, R <: Structural({.__neg__ = (self: Never) -> ?R})|(lp: global::Indexable(Obj, Never), rr: Type_231256, rr_method: {"svd"}, tol: R := {0.000000001} and R) -> global::Tuple([Never, Nat, Never, global::List!((x_mod: Obj) -> Never, 1), Bool, Nat, Str])
._parse_linprog: |Type_231250 <: Structural({._replace = (self: Never, A_ub := ?249061, A_eq := ?249062) -> ?249063; .A_ub = ?Type_231233; .A_eq = ?Type_231235}), Type_231235: Type, Type_249062: Type, Type_249063: Type, Type_231233: Type, Type_249061: Type, Type_231250 <: Structural({._replace = (self: Obj, A_ub := ?249061, A_eq := ?249062) -> ?249063; .A_ub = ?Type_231233; .A_eq = ?Type_231235})|(lp: Type_231250, options: Obj, meth: Obj) -> global::Tuple([Type_231250, Never])
._get_Abc: ||Never
._round_to_power_of_two: (x: Obj) -> Never
._autoscale: |O <: Structural({.size = ?249812; .__div__ = (self: Never, ?R) -> ?O; .__mul__ = (self: Never, ?R) -> ?O}), Type_249812: Type, Self <: global::Indexable(?K, ?V), U :> {1}, O <: Structural({.__mul__ = (self: Never, ?R) -> ?O}), Type_249690: Type, Type_231291: Type, K: Type, R <: Structural({.size = ?249690; .shape = ?Self; .__mul__ = (self: Never, ?R) -> Never and (self: Never, ?R) -> Never}), T: Type, V: Type, O: Type, R: Type|(A: R, b: O, c: O, x0: Type_231291) -> global::Tuple([R, O, O, Type_231291, {1}, U or T])
._unscale: |O: Type, Type_249910: Type, R <: Structural({.__len__ = (self: Never) -> Nat}), Type_249911: Type, R: Type, Type_231294 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, ?249910) -> ?249911})|(x: Type_231294, C: R, b_scale: R) -> O
._display_summary: (message: Obj, status: Obj, fun: Obj, iteration: Obj) -> NoneType
._postsolve: Never
._check_result: |R <: Structural({.__neg__ = (self: Never) -> ?R}), Type_231323 <: Structural({.__le__ = (self: Never, ?R) -> Bool; .__ge__ = (self: Never, ?R) -> Bool}), O :> Str, R :> {1}, R: Type|(x: Type_231323, fun: Obj, status: {0, 4}, slack: Structural({.__lt__ = (self: Never, R) -> Bool}), con: Obj, bounds: global::Indexable(Obj, Structural({.__sub__ = (self: Never, R) -> R; .__add__ = (self: Never, R) -> R})), tol: R, message: O, integrality: Structural({.__gt__ = (self: Never, R) -> Bool})) -> global::Tuple([{0, 4}, O])
