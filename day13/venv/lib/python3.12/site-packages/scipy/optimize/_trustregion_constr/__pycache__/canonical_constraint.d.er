##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/optimize/_trustregion_constr/canonical_constraint.py 1734628983 12538
.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.sps = pyimport "__init__"


.CanonicalConstraint: ClassType
.CanonicalConstraint.n_ineq: Never
.CanonicalConstraint.n_eq: Never
.CanonicalConstraint.keep_feasible: Never
.CanonicalConstraint.hess: Never
.CanonicalConstraint.jac: Never
.CanonicalConstraint.fun: Never
.CanonicalConstraint.__call__: (n_eq: Obj, n_ineq: Obj, fun: Obj, jac: Obj, hess: Obj, keep_feasible: Obj) -> canonical_constraint.CanonicalConstraint
.CanonicalConstraint.from_PreparedConstraint: |Type_179535: Type, Type_179528: Type, K: Type, Self <: global::Indexable(?K, ?V), V: Type, Type_179112 <: Structural({.keep_feasible = ?179535; .fun = ?179528; .bounds = ?Self})|(cls: Obj, constraint: Type_179112) -> Never
.CanonicalConstraint.empty: |Type_185768: Type|(cls: ({0}, {0}, (x: Obj) -> global::Tuple([Obj, Obj]), (x: Obj) -> global::Tuple([Obj, Obj]), (x: Obj, v_eq: Obj, v_ineq: Obj) -> Never, Obj) -> Type_185768, n: Obj) -> Type_185768
.CanonicalConstraint.concatenate: |Type_188795: Type|(cls: (global::Add(Never), global::Add(Never), (x: Obj) -> global::Tuple([Obj, Obj]), (x: Obj) -> global::Tuple([Obj, Obj]), (x: Structural({.shape = global::Indexable(Obj, Never)}), v_eq: global::Indexable(Obj, Never), v_ineq: global::Indexable(Obj, Never)) -> Never, Obj) -> Type_188795, canonical_constraints: Never, sparse_jacobian: Bool) -> Type_188795
.CanonicalConstraint._equal_to_canonical: |Type_190056: Type, Type_190002: Type, Type_190242: Type, Type_189042: Type, Type_189033: Type, Type_189976: Type, Type_190665: Type, K: Type, R <: Structural({.shape = ?Self}), V: Type, Type_179141 <: Structural({.sparse_jacobian = ?189645 and ?190284; .n = ?189465 and ?190242; .hess = (self: Obj, ?189040, ?189042) -> ?190056; .jac = (self: Obj, ?189035) -> ?190002; .fun = (self: Obj, ?189033) -> ?189976}), Type_189645 <: Bool, Type_190284 <: Bool, Type_189040: Type, Self <: global::Indexable(?K, ?V), Type_189035: Type, Type_189465: Type|(cls: (V, {0}, (x: Obj) -> global::Tuple([Never, Obj]), (x: Obj) -> global::Tuple([Never, Obj]), (x: Obj, v_eq: Obj, v_ineq: Obj) -> Never, Obj) -> Type_190665, cfun: Type_179141, value: R) -> Type_190665
.CanonicalConstraint._less_to_canonical: |Type_191747: Type, Type_190977: Type, Type_191721: Type, Type_191962: Type, Type_191020: Type, Type_190967: Type, Type_191767: Type, K: Type, Self <: global::Indexable(?K, ?V), Type_191916: Type, Type_190965: Type, V: Type, Type_191023 <: Bool, Type_190971: Type, R <: Structural({.__lt__ = (self: Never, ?R) -> Bool; .__getitem__ = (self: Obj, ?191916) -> ?191917}), Type_191917: Type, Self <: global::Indexable(?K, Self), Type_179151 <: Structural({.sparse_jacobian = ?191023; .n = ?191020; .hess = (self: Obj, ?190971, ?190977) -> ?191767; .jac = (self: Obj, ?190967) -> ?191747; .fun = (self: Obj, ?190965) -> ?191721}), R: Type|(cls: ({0}, Obj, (x: Obj) -> global::Tuple([Obj, Never]), (x: Obj) -> global::Tuple([Obj, Never]), (x: Obj, v_eq: Obj, v_ineq: Obj) -> Never, Self) -> Type_191962, cfun: Type_179151, ub: R, keep_feasible: Self) -> Type_191962
.CanonicalConstraint._greater_to_canonical: |Type_192447: Type, Self <: global::Indexable(?K, ?V), Type_192042: Type, Type_192092 <: Bool, K: Type, Type_192563: Type, Type_192468: Type, V: Type, O: Type, Type_192074: Type, Type_192044: Type, Type_192046: Type, R: Type, Self <: global::Indexable(?K, Self), Type_179179 <: Structural({.sparse_jacobian = ?192092; .n = ?192074; .hess = (self: Obj, ?192046, ?R) -> ?192468; .jac = (self: Obj, ?192044) -> ?192447; .fun = (self: Obj, ?192042) -> ?R})|(cls: ({0}, Obj, (x: Obj) -> global::Tuple([Obj, Never]), (x: Obj) -> global::Tuple([Obj, Never]), (x: Obj, v_eq: Obj, v_ineq: Structural({.__neg__ = (self: Never) -> Never})) -> Never, Self) -> Type_192563, cfun: Type_179179, lb: Structural({.__sub__ = (self: Never, R) -> O; .__gt__ = (self: Never, R) -> Bool; .__getitem__ = (self: Obj, Obj) -> Never}), keep_feasible: Self) -> Type_192563
.CanonicalConstraint._interval_to_canonical: |K: Type, Type_194881: Type, Self <: global::Indexable(?K, ?V), O: Type, V: Type, Self <: global::Indexable(?K, ?V)|(cls: (Obj, O, (x: Obj) -> global::Tuple([Never, Obj]), (x: Obj) -> global::Tuple([Obj, Obj]), (x: Obj, v_eq: Obj, v_ineq: global::Indexable(Obj, Structural({.__sub__ = (self: Never, Obj) -> Never; .__neg__ = (self: Never) -> Never}))) -> Never, Obj) -> Type_194881, cfun: canonical_constraint.CanonicalConstraint, lb: Self, ub: Self, keep_feasible: Self) -> Type_194881

.initial_constraints_as_canonical: ||Never
