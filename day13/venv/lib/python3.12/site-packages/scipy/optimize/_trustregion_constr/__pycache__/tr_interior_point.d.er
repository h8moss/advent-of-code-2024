##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/optimize/_trustregion_constr/tr_interior_point.py 1734628983 13798

.sps = pyimport "__init__"
.__init__ = pyimport "__init__"

.np = pyimport "__init__"


.___v_desugar_1 = pyimport "equality_constrained_sqp"
.equality_constrained_sqp = pyimport "equality_constrained_sqp"
.equality_constrained_sqp: ||Never
.___v_desugar_2 = pyimport "__init__"

.LinearOperator: Never
.__all__: global::List!({"tr_interior_point"}, 1)
.BarrierSubproblem: ClassType
.BarrierSubproblem.s0: Never
.BarrierSubproblem.constr: Never
.BarrierSubproblem.xtol: Never
.BarrierSubproblem.fun0: Never
.BarrierSubproblem.jac0: Never
.BarrierSubproblem.jac: Never
.BarrierSubproblem.n_vars: Never
.BarrierSubproblem.fun: Never
.BarrierSubproblem.grad: Never
.BarrierSubproblem.n_ineq: Never
.BarrierSubproblem.x0: Never
.BarrierSubproblem.barrier_parameter: Never
.BarrierSubproblem.n_eq: Never
.BarrierSubproblem.enforce_feasibility: Never
.BarrierSubproblem.grad0: Never
.BarrierSubproblem.terminate: Never
.BarrierSubproblem.constr0: Never
.BarrierSubproblem.tolerance: Never
.BarrierSubproblem.lagr_hess: Never
.BarrierSubproblem.global_stop_criteria: Never
.BarrierSubproblem.__call__: (x0: Obj, s0: Obj, fun: Obj, grad: Obj, lagr_hess: Obj, n_vars: Obj, n_ineq: Obj, n_eq: Obj, constr: Obj, jac: Obj, barrier_parameter: Obj, tolerance: Obj, enforce_feasibility: Obj, global_stop_criteria: Obj, xtol: Obj, fun0: Obj, grad0: Obj, constr_ineq0: Obj, jac_ineq0: Obj, constr_eq0: Obj, jac_eq0: Obj) -> tr_interior_point.BarrierSubproblem
.BarrierSubproblem.update: (self: tr_interior_point.BarrierSubproblem, barrier_parameter: Never, tolerance: Never) -> NoneType
.BarrierSubproblem.get_slack: |V: Type|(self: tr_interior_point.BarrierSubproblem, z: global::Indexable(Obj, V)) -> V
.BarrierSubproblem.get_variables: |V: Type|(self: tr_interior_point.BarrierSubproblem, z: global::Indexable(Obj, V)) -> V
.BarrierSubproblem.function_and_constraints: (self: tr_interior_point.BarrierSubproblem, z: global::Indexable(Obj, global::Dict!(_: global::GenericDict))) -> global::Tuple([Never, Never])
.BarrierSubproblem._compute_function: |Type_181205: Type, D: global::GenericDict, Type_181196 <: Structural({.__sub__ = (self: Never, ?R) -> ?181205}), R: Type, R <: global::Dict!(?D)|(self: tr_interior_point.BarrierSubproblem, f: Type_181196, c_ineq: global::Indexable(Obj, Structural({.__neg__ = (self: Never) -> Never})), s: R) -> Type_181205
.BarrierSubproblem._compute_constr: |Type_181215 <: Structural({.__add__ = (self: Never, ?R) -> ?O}), R <: global::Dict!(?D), D: global::GenericDict, R: Type, O: Type|(self: tr_interior_point.BarrierSubproblem, c_ineq: Type_181215, c_eq: Obj, s: R) -> Never
.BarrierSubproblem.scaling: (self: tr_interior_point.BarrierSubproblem, z: global::Indexable(Obj, Never)) -> Never
.BarrierSubproblem.gradient_and_jacobian: (self: tr_interior_point.BarrierSubproblem, z: global::Indexable(Obj, Never)) -> global::Tuple([Never, Never])
.BarrierSubproblem._compute_gradient: (self: tr_interior_point.BarrierSubproblem, g: Obj) -> Never
.BarrierSubproblem._compute_jacobian: (self: tr_interior_point.BarrierSubproblem, J_eq: Obj, J_ineq: Obj, s: Obj) -> Never
.BarrierSubproblem._assemble_sparse_jacobian: Never
.BarrierSubproblem.lagrangian_hessian_x: |Self <: global::Indexable(?K, ?V), K: Type, Self <: global::Indexable(?K, ?V), K :> global::Slice, V: Type|(self: tr_interior_point.BarrierSubproblem, z: Self, v: Self) -> Never
.BarrierSubproblem.lagrangian_hessian_s: |V: Type, K: Type, Self <: global::Indexable(?K, ?V), K :> global::Slice, Self <: global::Indexable(?K, ?R), R: Type|(self: tr_interior_point.BarrierSubproblem, z: Self, v: Self) -> Never
.BarrierSubproblem.lagrangian_hessian: |K :> global::Slice, Self <: global::Indexable(?K, ?R), R: Type|(self: tr_interior_point.BarrierSubproblem, z: Self, v: Self) -> Never
.BarrierSubproblem.stop_criteria: |Type_181307 <: Structural({.__lt__ = (self: Never, ?R) -> Bool}), R: Type|(self: tr_interior_point.BarrierSubproblem, state: Obj, z: global::Indexable(Obj, Never), last_iteration_failed: Obj, optimality: Type_181307, constr_violation: Structural({.__lt__ = (self: Never, R) -> Bool}), trust_radius: Structural({.__lt__ = (self: Never, R) -> Bool}), penalty: Obj, cg_info: Obj) -> Never

.tr_interior_point: |Type_181116: Type, Type_181116 <: Structural({.__mul__ = (self: Never, ?R) -> ?Type_181116}), Type_177798: Type, R: Type, R :> {0.2}|(fun: Obj, grad: Obj, lagr_hess: Obj, n_vars: Obj, n_ineq: Obj, n_eq: Obj, constr: Obj, jac: Obj, x0: Obj, fun0: Obj, grad0: Obj, constr_ineq0: Float, jac_ineq0: Obj, constr_eq0: Obj, jac_eq0: Obj, stop_criteria: Obj, enforce_feasibility: Obj, xtol: Obj, state: Type_177798, initial_barrier_parameter: Type_181116, initial_tolerance: Structural({.__mul__ = (self: Never, R) -> Never}), initial_penalty: Structural({.__mul__ = (self: Never, R) -> R and (self: Never, R) -> R}), initial_trust_radius: Never, factorization_method: {"NormalEquation", "AugmentedSystem"}) -> global::Tuple([Never, Type_177798])
