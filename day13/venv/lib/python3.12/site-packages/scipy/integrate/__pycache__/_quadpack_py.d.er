##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/integrate/_quadpack_py.py 1734628983 53252
.sys = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.warnings = pyimport "<failure>"


.___v_desugar_1 = pyimport "<failure>"

.partial: Never
.___v_desugar_2 = pyimport "__init__"
.__init__ = pyimport "__init__"
._quadpack: Never
.np = pyimport "__init__"


.__all__: global::List!({"IntegrationWarning", "tplquad", "dblquad", "nquad", "quad"}, 5)
.IntegrationWarning: ClassType
.IntegrationWarning <: global::UserWarning

.quad: |K: Type, Type_306607 <: Structural({.__lt__ = (self: Never, ?O) -> Bool}), O <: global::Ord and global::Iterable(?O), R :> {1}, V: Type, R :> {0}, Self <: global::Indexable(?K, ?V), O <: global::Ord, Self <: global::Indexable(?K, ?V), R: Type|(func: (Obj) -> Never, a: O, b: Type_306607, args: global::Tuple([Never]) := global::Tuple([Never]), full_output: Bool := {0} and Bool, epsabs: Structural({.__le__ = (self: Never, R) -> Bool}) := {0.0000000149} and Structural({.__le__ = (self: Never, R) -> Bool}), epsrel: Structural({.__lt__ = (self: Never, R) -> Bool}) := {0.0000000149} and Structural({.__lt__ = (self: Never, R) -> Bool}), limit: Float := {50} and Float, points: Never := Never, weight: {"cauchy"} := {None} and {"cauchy"}, wvar: global::Iterable(Never) := {None} and global::Iterable(Never), wopts: Self := {None} and Self, maxp1: Structural({.__lt__ = (self: Never, R) -> Bool}) := {50} and Structural({.__lt__ = (self: Never, R) -> Bool}), limlst: Obj := {50}, complex_func: {False} := {False} and {False}) -> Self
._quad: |Type_307681 <: Structural({.__le__ = (self: Never, ?R) -> Bool}), R: Type|(func: Obj, a: {0}, b: {0}, args: global::Tuple([Never]), full_output: Bool, epsabs: Type_307681, epsrel: Structural({.__lt__ = (self: Never, R) -> Bool}), limit: Float, points: Never) -> global::Tuple([Structural({.__neg__ = (self: Never) -> R}), Never])
._quad_weight: |T: Type, R :> {1}, O: Type, R :> {0}, T :> ?U or ?T, T <: global::Tuple([?O, ?O]), U: Type, T <: Structural({.__neg__ = (self: Never) -> ?R}), R: Type, R :> global::Tuple([?R])|(func: Obj, a: T, b: T, args: R, full_output: Bool, epsabs: Structural({.__le__ = (self: Never, R) -> Bool}), epsrel: Structural({.__lt__ = (self: Never, R) -> Bool}), limlst: Obj, limit: Float, maxp1: Structural({.__lt__ = (self: Never, R) -> Bool}), weight: {"cauchy"}, wvar: global::Iterable(Never), wopts: global::Indexable(Obj, Never)) -> T or global::Tuple([Structural({.__neg__ = (self: Never) -> R}), Never])
.dblquad: |T: Type|(func: Obj, a: Obj, b: Obj, gfun: (T) -> T, hfun: (T) -> T, args: Obj := Obj, epsabs: Obj := {0.0000000149}, epsrel: Obj := {0.0000000149}) -> Never
.tplquad: |T: Type|(func: Obj, a: Obj, b: Obj, gfun: (Never) -> T, hfun: (Never) -> Never, qfun: (Never, Never) -> T, rfun: (Never, Never) -> Never, args: Obj := Obj, epsabs: Obj := {0.0000000149}, epsrel: Obj := {0.0000000149}) -> Never
.nquad: |Type_306689 :> {False}|(func: Obj, ranges: global::List!(global::List!(Never, 2) or (*args: Never) -> global::List!((Never) -> Never, 2), 2) or global::List!(global::List!(Never, 2) or (*args: Never) -> global::List!((Never) -> Never, 2) or (*args: Never) -> global::List!((Never, Never) -> Never, 2), 3), args: Obj := {None}, opts: global::Dict!({{"epsrel"}: Never, {"epsabs"}: Never}) := {None} and global::Dict!({{"epsrel"}: Never, {"epsabs"}: Never}), full_output: Type_306689 := Type_306689 and Type_306689) -> Never
._RangeFunc: ClassType

._OptFunc: ClassType

._NQuad: ClassType

