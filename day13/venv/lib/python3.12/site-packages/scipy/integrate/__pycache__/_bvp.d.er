##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/integrate/_bvp.py 1734628983 40927

.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.warn: Never
.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_2 = pyimport "__init__"

.pinv: Never
.___v_desugar_3 = pyimport "__init__"

.coo_matrix: Never
.csc_matrix: Never
.___v_desugar_4 = pyimport "__init__"

.splu: Never
.___v_desugar_5 = pyimport "__init__"

.OptimizeResult: Never
.EPS: Never
.estimate_fun_jac: |K: Type, Type_312740: Type, Type_312909: Type, Self <: global::Indexable(?K, ?V), V: Type, Type_312742 <: Structural({.shape = ?Self; .copy = (self: Obj) -> Never; .__getitem__ = (self: Obj, ?K) -> ?R}), Type_312741 <: Structural({.shape = ?Self; .dtype = ?312909; .copy = (self: Obj) -> Never; .__getitem__ = (self: Obj, ?K) -> ?R}), R: Type, Self <: global::Indexable(?K, ?V)|(fun: (Type_312740, Type_312741, Type_312742) -> {_: R and NoneType | _ == None}, x: Type_312740, y: Type_312741, p: Type_312742, f0: R := {None} and R) -> global::Tuple([Never, {None}])
.estimate_bc_jac: |Self <: global::Indexable(?K, ?V), K: Type, Type_313070: Type, V: Type, O: Type, Self <: global::Indexable(?K, ?V), R <: Structural({.__sub__ = (self: Never, ?R) -> ?O}), Type_312749 <: Structural({.shape = ?Self; .copy = (self: Obj) -> Never; .__getitem__ = (self: Obj, ?K) -> ?R}), Type_312747 <: Structural({.copy = (self: Obj) -> Never; .shape = ?Self; .dtype = ?313070; .__getitem__ = (self: Obj, ?K) -> ?R}), R: Type, Self <: global::Copy and global::Indexable(?K, R)|(bc: (Type_312747, Self, Type_312749) -> {_: R and NoneType | _ == None}, ya: Type_312747, yb: Self, p: Type_312749, bc0: R := {None} and R) -> global::Tuple([Never, Never, {None}])
.compute_jac_indices: |O <: Structural({.__mul__ = (self: Never, ?R) -> ?O}), R <: Structural({.__pow__ = (self: Never, ?R) -> ?O; .__mul__ = (self: Never, ?R) -> ?O; .__add__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), R :> {1}, R: Type, O: Type, O <: Structural({.__add__ = (self: Never, ?R) -> ?O})|(n: R, m: Structural({.__sub__ = (self: Never, R) -> O and (self: Never, R) -> R; .__mul__ = (self: Never, R) -> O and (self: Never, R) -> O}), k: R) -> global::Tuple([Never, Never])
.stacked_matmul: |K: Type, Type_313395: Type, T: Type, T :> {Type_v_global_4: Int | (Type_v_global_4 >= 0) and (Type_v_global_4 <= pred(?MAX))}, V: Type, MAX: Int, Self <: global::Indexable(?K, ?V), Type_312757 <: Structural({.shape = ?Self and ?Self; .__getitem__ = (self: Obj, ?T) -> ?313395}), Self <: global::Indexable(?K, ?V), Self <: global::Indexable(?K, ?V)|(a: Type_312757, b: Structural({.shape = Self; .__getitem__ = (self: Obj, T) -> Never})) -> T
.construct_global_jac: |R :> {0}, R <: Structural({.__sub__ = (self: Never, Obj) -> Never; .__add__ = (self: Never, Obj) -> ?O}), R: Type, Type_312761 <: Structural({.__sub__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), O: Type|(n: Obj, m: Type_312761, k: Structural({.__gt__ = (self: Never, R) -> Bool}), i_jac: Obj, j_jac: Obj, h: Never, df_dy: Obj, df_dy_middle: Obj, df_dp: global::Indexable(Obj, R), df_dp_middle: Never, dbc_dya: Obj, dbc_dyb: Obj, dbc_dp: Obj) -> Never
.collocation_fun: |K: Type, Self <: global::Indexable(?K, R), O: Type, V: Type, R <: Structural({.__sub__ = (self: Never, ?R) -> ?O; .__add__ = (self: Never, ?R) -> ?O}), Type_312776: Type, Self <: global::Indexable(?K, ?V), R: Type|(fun: (Self, Self, Type_312776) -> Never, y: Self, p: Type_312776, x: Self, h: Obj) -> global::Tuple([O, Float, Never, Never])
.prepare_sys: |V <: Structural({.__add__ = (self: Never, ?R) -> ?O}), Self <: global::Indexable(?K, ?V), V <: {?MAX}, Self <: global::Indexable(?K, ?Type_312772), R :> {0}, R <: {0}, Type_312772: Type, K: Type, MAX: Int, O: Type, V: Type, K :> {1, 0}, Self <: global::Indexable(?K, ?V), Self <: global::Indexable(?K, Never), K :> {0}, R: Type|(n: Never, m: Never, k: Never, fun: (Never, Structural({.shape = Self; .copy = (self: Obj) -> Never; .dtype = Obj; .__getitem__ = (self: Obj, K) -> R}), Structural({.copy = (self: Obj) -> Never; .shape = Self; .__getitem__ = (self: Obj, K) -> R})) -> {_: R and NoneType | _ == None}, bc: (Structural({.shape = Self; .dtype = Obj; .copy = (self: Obj) -> Never; .__getitem__ = (self: Obj, K) -> R}), Self, Structural({.copy = (self: Obj) -> Never; .shape = Self; .__getitem__ = (self: Obj, K) -> R})) -> {_: R and NoneType | _ == None}, fun_jac: (Never, Never, Never) -> Self, bc_jac: (V, V, Never) -> Self, x: Never, h: Never) -> global::Tuple([(y: Never, p: Obj) -> global::Tuple([Never, Float, Never, Never]), |R: Type, R :> {0}, R <: {0}|(y: Never, p: Never, y_middle: Never, f: R, f_middle: R, bc0: R) -> Never])
.solve_newton: ||Never
.print_iteration_header: () -> NoneType
.print_iteration_progress: (iteration: Obj, residual: Obj, bc_residual: Obj, total_nodes: Obj, nodes_added: Obj) -> NoneType
.BVPResult: ClassType
.BVPResult <: Never

.TERMINATION_MESSAGES: Never
.estimate_rms_residuals: |Type_312814: Type, R <: Float, O: Type, O <: Structural({.__div__ = (self: Never, ?R) -> ?O; .__mul__ = (self: Never, ?R) -> ?O}), R :> Float, Type_314503 <: Structural({.__sub__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), O <: Structural({.__sub__ = (self: Never, ?R) -> ?O; .__add__ = (self: Never, ?R) -> ?O}), R: Type|(fun: (O, Type_314503, Type_312814) -> R, sol: (O) -> Type_314503, x: global::Indexable(Obj, Structural({.__add__ = (self: Never, R) -> O})), h: R, p: Type_312814, r_middle: O, f_middle: Obj) -> Never
.create_spline: |Type_314598: Type, K: Type, Type_312818 <: Structural({.__getitem__ = (self: Obj, ?314598) -> ?314599 and (self: Obj, ?314601) -> ?R; .shape = ?Self; .dtype = ?314597}), Type_314597: Type, V: Type, R <: Int, Self <: global::Indexable(?K, ?V), Type_314601: Type, Self <: global::Indexable(?K, ?V), R: Type, Type_314599: Type|(y: Type_312818, yp: Self, x: Obj, h: R) -> Never
.modify_mesh: |K <: Structural({.__add__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), K <: Structural({.__add__ = (self: Never, ?R) -> Obj and (self: Never, ?R) -> Obj}), R: Type, O: Type|(x: global::Indexable(K, Obj), insert_1: K, insert_2: K) -> Never
.wrap_functions: ||Never
.solve_bvp: ||Never
