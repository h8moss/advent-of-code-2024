##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/integrate/_quadrature.py 1734628983 59097
.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.annotations: Never
.___v_desugar_2 = pyimport "<failure>"

.TYPE_CHECKING: Never
.Callable: Never
.Any: Never
.cast: Never
.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.npt = pyimport "__init__"


.math = pyimport "<failure>"


.warnings = pyimport "<failure>"


.___v_desugar_3 = pyimport "<failure>"

.namedtuple: Never
.___v_desugar_4 = pyimport "__init__"

.roots_legendre: Never
.___v_desugar_5 = pyimport "__init__"

.gammaln: Never
.logsumexp: Never
.___v_desugar_6 = pyimport "_util"
._util = pyimport "_util"
._rng_spawn: |Type_85599 <: Structural({._bit_generator = ?87838}), Type_87838: Type|(rng: Type_85599, n_children: Obj) -> global::List!(Never, _: Nat)
.___v_desugar_7 = pyimport "deprecation"
.deprecation = pyimport "deprecation"
._deprecated: (msg: Obj, stacklevel: Obj := Obj) -> (fun: () -> Never) -> (*args: Obj, **kwargs := ?99746) -> Never
.__all__: global::List!({"cumulative_simpson", "fixed_quad", "quadrature", "AccuracyWarning", "simpson", "romberg", "romb", "newton_cotes", "trapezoid", "cumulative_trapezoid", "qmc_quad"}, 11)
.trapezoid: |T: Type|(y: Obj, x: Structural({.ndim = Obj}) := Structural({.ndim = Obj}), dx: global::List(T, _: Nat) := global::List(T, _: Nat), axis: T := T) -> T
.AccuracyWarning: ClassType
.AccuracyWarning <: global::Warning


.cache_decorator: (func: Obj) -> _quadrature.CacheAttributes
._cached_roots_legendre: (n: Obj) -> Never

.fixed_quad: |O: Type, R: Type, Type_303203 <: Structural({.__sub__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O})|(func: (O) -> R, a: R, b: Type_303203, args: Obj := Obj, n: R := {5} and R) -> global::Tuple([O, {None}])
.vectorize1: |Type_303541: Type, Type_303548: Type|(func: (Type_303541) -> Type_303548, args: Obj := Obj, vec_func: Bool := {False} and Bool) -> (x: Obj) -> Never
.quadrature: |MIN: Int, MAX: Int, Type_303541 <: Structural({.__sub__ = (self: Never, ?R) -> ?O}), R :> {Type_v_global_7: Int | (Type_v_global_7 >= ?MIN) and (Type_v_global_7 <= pred(?MAX))}, O: Type, Type_303541: Type, Type_303203 <: Structural({.__sub__ = (self: Never, ?R) -> ?Type_303541}), R :> Nat, R :> {1}, O <: global::Ord, R: Type, O <: global::Iterable(?O)|(func: (Type_303541) -> R, a: R, b: Type_303203, args: global::Tuple([global::Tuple([Obj])]) := global::Tuple([global::Tuple([Obj])]), tol: R := {0.0000000149} and R, rtol: Structural({.__mul__ = (self: Never, R) -> R}) := {0.0000000149} and Structural({.__mul__ = (self: Never, R) -> R}), maxiter: Never := Never, vec_func: Bool := {True} and Bool, miniter: Structural({.__add__ = (self: Never, R) -> O}) := {1} and Structural({.__add__ = (self: Never, R) -> O})) -> global::Tuple([Never, Never])
.tupleset: |T: Type|(t: global::Iterable(T), i: Obj, value: Obj) -> global::Tuple([T])
.cumulative_trapezoid: (y: Obj, x: Structural({.ndim = Obj; .shape = Structural({.__len__ = (self: Never) -> Nat})}) := Structural({.ndim = Obj; .shape = Structural({.__len__ = (self: Never) -> Nat})}), dx: Obj := Obj, axis: Obj := Obj, initial: Obj := Obj) -> Never
._basic_simpson: |Type_303843: Type, R :> {3.0}, O: Type, Type_303846: Type, Type_303844: Type, R: Type, Type_303245 <: Structural({.shape = ?303804; .__getitem__ = (self: Obj, ?303843) -> ?303844 and (self: Obj, ?303846) -> ?R}), Type_303804 <: Structural({.__len__ = (self: Never) -> Nat})|(y: Type_303245, start: Obj, stop: Obj, x: Obj, dx: Structural({.__div__ = (self: Never, R) -> R}), axis: Obj) -> O
.simpson: (y: Obj, x: Obj := Obj, dx: Float := Float, axis: Obj := Obj) -> Float or Structural({.__add__ = (self: Never, Float) -> Never})
._cumulatively_sum_simpson_integrals: (y: Obj, dx: Obj, integration_func: (Obj, Obj) -> Obj) -> Never
._cumulative_simpson_equal_intervals: (y: Obj, dx: Obj) -> Never
._cumulative_simpson_unequal_intervals: (y: Obj, dx: Obj) -> Never
._ensure_float_array: (arr: Obj) -> Never
.cumulative_simpson: |E :> global::Tuple([?T]), E :> {0}, T: Type, R :> Int, R :> {0}, E :> {1}|(y: Obj, x: Structural({.ndim = E and E; .shape = Structural({.__len__ = (self: Never) -> Nat})}) := Structural({.ndim = E and E; .shape = Structural({.__len__ = (self: Never) -> Nat})}), dx: Structural({.__le__ = (self: Never, R) -> Bool; .ndim = E; .shape = E}) := {1.0} and Structural({.__le__ = (self: Never, R) -> Bool; .ndim = E; .shape = E}), axis: Obj := R, initial: Obj := {None}) -> Never
.romb: (y: Obj, dx: Obj := Obj, axis: Obj := Obj, show: Never := Never) -> Never
._difftrap: |R: Type, V <: Structural({.__sub__ = (self: Never, ?V) -> ?O; .__add__ = (self: Never, ?R) -> ?O}), V <: Structural({.__sub__ = (self: Never, Obj) -> ?O; .__add__ = (self: Never, ?R) -> ?O}), R <: Structural({.__add__ = (self: Never, ?R) -> ?R}), V: Type, O: Type|(function: (V) -> R, interval: global::Indexable(Obj, V), numtraps: {1}) -> Never
._romberg_diff: |R: Type|(b: R, c: R, k: R) -> Never
._printresmat: |Type_304898: Type, K: Type, Self <: global::Indexable(?K, R), R <: Structural({.__sub__ = (self: Never, ?R) -> ?O}), O: Type, V: Type, Self <: global::Indexable(?K, ?V), Type_303288 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, ?304898) -> ?Self and (self: Obj, ?304915) -> ?Self}), R: Type, Self <: global::Indexable(?K, ?V), Type_304915: Type|(function: Obj, interval: Self, resmat: Type_303288) -> NoneType
.romberg: |R :> {1}, R: Type, R :> Nat|(function: (Never) -> Float, a: Never, b: Never, args: Obj := Obj, tol: R := {0.0000000148} and R, rtol: Structural({.__mul__ = (self: Never, R) -> R}) := {0.0000000148} and Structural({.__mul__ = (self: Never, R) -> R}), show: Bool := {False} and Bool, divmax: Structural({.__add__ = (self: Never, R) -> {_: Int}}) := {10} and Structural({.__add__ = (self: Never, R) -> {_: Int}}), vec_func: Bool := {False} and Bool) -> Int
._builtincoeffs: global::Dict!({{12}: global::Tuple([{1}, {5255250}, global::List!(Int, 13), Int, {875875}]), {1}: global::Tuple([{1}, {2}, global::List!({1}, 2), Int, {12}]), {6}: global::Tuple([{1}, {140}, global::List!({41, 27, 216, 272}, 7), Int, {1400}]), {11}: global::Tuple([{11}, {87091200}, global::List!(Int, 12), Int, {237758976000}]), {8}: global::Tuple([{4}, {14175}, global::List!(Int, 9), Int, {467775}]), {13}: global::Tuple([{13}, {402361344000}, global::List!(Int, 14), Int, {344881152000}]), {2}: global::Tuple([{1}, {3}, global::List!({4, 1}, 3), Int, {90}]), {7}: global::Tuple([{7}, {17280}, global::List!({751, 2989, 1323, 3577}, 8), Int, {518400}]), {4}: global::Tuple([{2}, {45}, global::List!({32, 12, 7}, 5), Int, {945}]), {9}: global::Tuple([{9}, {89600}, global::List!({1080, 2857, 5778, 15741, 19344}, 10), Int, {394240}]), {14}: global::Tuple([{7}, {2501928000}, global::List!(Int, 15), Int, {1275983280000}]), {3}: global::Tuple([{3}, {8}, global::List!({1, 3}, 4), Int, {80}]), {5}: global::Tuple([{5}, {288}, global::List!({50, 19, 75}, 6), Int, {12096}]), {10}: global::Tuple([{5}, {299376}, global::List!(Int, 11), Int, {163459296}])})
.newton_cotes: |E: Type, R: Type, O: Type, E <: Structural({.__div__ = (self: Never, ?R) -> ?R and (self: Never, ?R) -> ?R; .__len__ = (self: Never) -> Nat; .__add__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?R and (self: Never, ?R) -> Never; .__mod__ = (self: Never, ?R) -> ?E; .__getitem__ = (self: Obj, ?R) -> ?E and (self: Obj, ?R) -> ?E})|(rn: E, equal: Obj := {0}) -> global::Tuple([O, O])
._qmc_quad_iv: |E: Type, Type_303316 <: Structural({.d = ?E}), T: Type, O: Type, Type_305791: Type|(func: (O) -> Type_305791, a: Obj, b: Obj, n_points: E, n_estimates: E, qrng: Type_303316, log: T) -> global::Tuple([(O) -> Type_305791, Never, Never, Never, Never, Type_303316, Never, T, global::PyModule("__init__.py")])
.QMCQuadResult: Never
.qmc_quad: |E: Type|(func: (Never) -> Never, a: Obj, b: Obj, n_estimates: E := {8} and E, n_points: E := {1024} and E, qrng: Structural({.d = E}) := {None} and Structural({.d = E}), log: Obj := {False}) -> Never
