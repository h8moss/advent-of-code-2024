##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/integrate/_ivp/bdf.py 1734628983 17587
.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_1 = pyimport "__init__"

.lu_factor: Never
.lu_solve: Never
.___v_desugar_2 = pyimport "__init__"

.issparse: Never
.csc_matrix: Never
.eye: Never
.___v_desugar_3 = pyimport "__init__"

.splu: Never
.___v_desugar_4 = pyimport "_numdiff"
._numdiff = pyimport "_numdiff"
.group_columns: (A: Obj, order: Structural({.shape = Obj}) := Structural({.shape = Obj})) -> Never
.___v_desugar_5 = pyimport "common"
.common = pyimport "common"
.validate_max_step: |R: Type, Type_129900 <: Structural({.__le__ = (self: Never, ?R) -> Bool})|(max_step: Type_129900) -> Type_129900
.validate_tol: |Type_129920 <: Structural({.__lt__ = (self: Never, ?R) -> Bool}), R: Type|(rtol: Type_129920, atol: Obj, n: Obj) -> global::Tuple([Type_129920, Never])
.select_initial_step: |R :> {1}, R <: Structural({.__div__ = (self: Never, ?R) -> Never}), O: Type, R <: Nat, O :> Nat, O <: global::Ord, O <: global::Num, R: Type, R <: Structural({.__add__ = (self: Never, ?R) -> ?O}), O <: Structural({.__div__ = (self: Never, ?R) -> ?O})|(fun: (O, O) -> Structural({.__sub__ = (self: Never, R) -> O}), t0: R, y0: Structural({.size = Obj; .__div__ = (self: Never, R) -> Never; .__add__ = (self: Never, R) -> O}), t_bound: Structural({.__sub__ = (self: Never, R) -> O}), max_step: Nat, f0: R, direction: R, order: Structural({.__add__ = (self: Never, R) -> R}), rtol: R, atol: Structural({.__add__ = (self: Never, R) -> R})) -> O
.norm: |Type_129937 <: Structural({.size = ?131722}), Type_131722: Type|(x: Type_129937) -> Never
.EPS: Never
.num_jac: |Self <: global::Indexable(?K, ?V), K: Type, K :> {0, 1}, V: Type, Self <: global::Indexable(?K, ?V)|(fun: Obj, t: Obj, y: Obj, f: Self, threshold: Obj, factor: Never, sparsity: global::Indexable(K, Self) := global::Indexable(K, Self)) -> Never
.validate_first_step: |R: Type, Type_129878 <: Structural({.__le__ = (self: Never, ?R) -> Bool; .__gt__ = (self: Never, ?R) -> Bool})|(first_step: Type_129878, t0: R, t_bound: Structural({.__sub__ = (self: Never, R) -> Never})) -> Type_129878
.warn_extraneous: (extraneous: Bool) -> NoneType
.___v_desugar_6 = pyimport "base"
.base = pyimport "base"
.OdeSolver: {base.OdeSolver}
.DenseOutput: {base.DenseOutput}
.MAX_ORDER: {5}
.NEWTON_MAXITER: {4}
.MIN_FACTOR: {0.2}
.MAX_FACTOR: {10}
.compute_R: |Type_141770 <: Structural({.__add__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), R :> {<failure>}, R: Type, O: Type|(order: Type_141770, factor: Structural({.__mul__ = (self: Never, R) -> R})) -> Never
.change_D: (D: global::Dict!(_: global::GenericDict), order: Never, factor: Never) -> NoneType
.solve_bdf_system: |Type_141810: Type, Type_141794: Type, O :> Nat, R: Type, Type_141802 <: Structural({.__mul__ = (self: Never, ?R) -> ?O}), O: Type|(fun: (Type_141794, Never) -> R, t_new: Type_141794, y_predict: Never, c: Type_141802, psi: R, LU: Type_141810, solve_lu: (Type_141810, O) -> Never, scale: R, tol: R) -> global::Tuple([Bool, O, Never, Nat])
.BDF: ClassType
.BDF <: base.OdeSolver
.BDF.alpha: Never
.BDF.D: Never
.BDF.h_abs_old: Never
.BDF.max_step: Never
.BDF.lu: Never
.BDF.solve_lu: Never
.BDF.newton_tol: Never
.BDF.error_norm_old: Never
.BDF.jac_factor: Never
.BDF.gamma: Never
.BDF.error_const: Never
.BDF.I: Never
.BDF.order: Never
.BDF.LU: Never
.BDF.n_equal_steps: Never
.BDF.__call__: (fun: Obj, t0: Obj, y0: Obj, t_bound: Obj, max_step: Obj := Obj, rtol: Obj := Obj, atol: Obj := Obj, jac: Obj := Obj, jac_sparsity: Obj := Obj, vectorized: Obj := Obj, first_step: Obj := Obj, **extraneous := ?141901) -> bdf.BDF
.BDF._validate_jac: Never
.BDF._step_impl: (self: bdf.BDF) -> global::Tuple([{True}, {None}])
.BDF._dense_output_impl: (self: bdf.BDF) -> bdf.BdfDenseOutput

.BdfDenseOutput: ClassType
.BdfDenseOutput <: base.DenseOutput
.BdfDenseOutput.denom: Never
.BdfDenseOutput.order: Never
.BdfDenseOutput.t_shift: Never
.BdfDenseOutput.D: Never
.BdfDenseOutput.__call__: (t_old: Obj, t: Obj, h: Obj, order: Obj, D: global::Copy) -> bdf.BdfDenseOutput
.BdfDenseOutput._call_impl: |E: Type, Type_141965 <: Structural({.__sub__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O; .ndim = ?E}), R: Type, O: Type|(self: bdf.BdfDenseOutput, t: Type_141965) -> Never

