##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/interpolate/_fitpack_impl.py 1734628983 28682

.__all__: global::List!({"splint", "spalde", "bisplev", "splev", "splrep", "splantider", "bisplrep", "splprep", "insert", "splder", "sproot"}, 11)
.warnings = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_1 = pyimport "__init__"

._fitpack: Never
.___v_desugar_2 = pyimport "__init__"

.atleast_1d: Never
.array: Never
.ones: Never
.zeros: Never
.sqrt: Never
.ravel: Never
.transpose: Never
.empty: Never
.iinfo: Never
.asarray: Never
.___v_desugar_3 = pyimport "__init__"

.dfitpack: Never
.dfitpack_int: Never
._int_overflow: |R: Type, Type_293977 <: Structural({.__gt__ = (self: Never, ?R) -> Bool})|(x: Type_293977, exception: Obj, msg: Obj := {None}) -> Never
._iermess: global::Dict!({{"unknown"}: global::List!({Type_v_global_161249: Str or ClassType | (Type_v_global_161249 == TypeError or Type_v_global_161249 == "(...)")}, 2), {1}: global::List!({Type_v_global_161237: Str or ClassType | (Type_v_global_161237 == "(...)" or Type_v_global_161237 == ValueError)}, 2), Int: global::List!({Type_v_global_161229: NoneType or Str | (Type_v_global_161229 == "(...)" or Type_v_global_161229 == None)}, 2), {3}: global::List!({Type_v_global_161243: Str or ClassType | (Type_v_global_161243 == ValueError or Type_v_global_161243 == "(...)")}, 2), {0}: global::List!({Type_v_global_161225: NoneType or Str | (Type_v_global_161225 == "(...)" or Type_v_global_161225 == None)}, 2), {2}: global::List!({Type_v_global_161240: Str or ClassType | (Type_v_global_161240 == ValueError or Type_v_global_161240 == "(...)")}, 2), {10}: global::List!({Type_v_global_161246: Str or ClassType | (Type_v_global_161246 == "(...)" or Type_v_global_161246 == ValueError)}, 2)})
._iermess2: global::Dict!({{1}: global::List!({Type_v_global_161268: Str or ClassType | (Type_v_global_161268 == "(...)" or Type_v_global_161268 == ValueError)}, 2), {11}: global::List!({Type_v_global_161286: Str or ClassType | (Type_v_global_161286 == ValueError or Type_v_global_161286 == "(...)")}, 2), {2}: global::List!({Type_v_global_161271: Str or ClassType | (Type_v_global_161271 == "(...)" or Type_v_global_161271 == ValueError)}, 2), {"unknown"}: global::List!({Type_v_global_161289: Str or ClassType | (Type_v_global_161289 == TypeError or Type_v_global_161289 == "(...)")}, 2), {4}: global::List!({Type_v_global_161277: Str or ClassType | (Type_v_global_161277 == ValueError or Type_v_global_161277 == "(...)")}, 2), {3}: global::List!({Type_v_global_161274: Str or ClassType | (Type_v_global_161274 == ValueError or Type_v_global_161274 == "(...)")}, 2), Int: global::List!({Type_v_global_161256: NoneType or Str | (Type_v_global_161256 == None or Type_v_global_161256 == "(...)")}, 2), {0}: global::List!({Type_v_global_161252: NoneType or Str | (Type_v_global_161252 == "(...)" or Type_v_global_161252 == None)}, 2), {5}: global::List!({Type_v_global_161280: Str or ClassType | (Type_v_global_161280 == "(...)" or Type_v_global_161280 == ValueError)}, 2), {10}: global::List!({Type_v_global_161283: Str or ClassType | (Type_v_global_161283 == "(...)" or Type_v_global_161283 == ValueError)}, 2)})
._parcur_cache: global::Dict!({{"ub"}: {0}, {"u"}: Never, {"ue"}: {1}, {"t"}: Never, {"wrk"}: Never, {"iwrk"}: Never})
.splprep: |V :> {0, 1}, T: Type, V <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, ?R) -> ?V}), R: Type, V: Type, R <: Nat|(x: Obj, w: Structural({.__len__ = (self: Never) -> Nat}) := {None} and Structural({.__len__ = (self: Never) -> Nat}), u: V := {None} and V, ub: V := {None} and V, ue: V := {None} and V, k: R := {3} and R, task: Obj := {0}, s: {0} := {None} and {0}, t: Obj := {None}, full_output: Bool := {0} and Bool, nest: Nat := {None} and Nat, per: Bool := {0} and Bool, quiet: Bool := {1} and Bool) -> T
._curfit_cache: global::Dict!({{"iwrk"}: Never, {"wrk"}: Never, {"t"}: Never})
.splrep: (x: Obj, y: Obj, w: Structural({.__len__ = (self: Never) -> Nat}) := {None} and Structural({.__len__ = (self: Never) -> Nat}), xb: Obj := {None}, xe: Obj := {None}, k: Obj := {3}, task: Obj := {0}, s: Obj := {None}, t: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, Obj) -> Never}) := {None} and Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, Obj) -> Never}), full_output: Bool := {0} and Bool, per: Bool := {0} and Bool, quiet: Obj := {1}) -> Never
.splev: |Type_295967: Type, T :> ?T or ?U, U: Type, T: Type, Type_294035 <: Structural({.shape = ?295967})|(x: Type_294035, tck: global::Indexable(Obj, global::Indexable(Obj, global::Indexable(Obj, Never)) and global::Iterable(T)), der: Float := Float, ext: T := T) -> T
.splint: |T: Type, T :> ?U or ?T, Type_294045 :> {0}, Type_294045 <: Bool, U: Type|(a: Obj, b: Obj, tck: global::Indexable(Obj, global::Iterable(T) and global::Indexable(Obj, global::Indexable(Obj, Never))), full_output: Type_294045 := Type_294045 and Type_294045) -> T
.sproot: (tck: global::Indexable(Obj, {3}), mest: Obj := Obj) -> Never
.spalde: |U: Type, Type_294052 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, ?296281) -> ?296282}), T: Type, Type_296281: Type, Type_296282: Type, T :> ?T or ?U|(x: Type_294052, tck: global::List!(global::Indexable(Obj, global::Indexable(Obj, Never)) and global::Iterable(T) and Structural({.__add__ = (self: Never, Obj) -> Never}), 3)) -> T
._surfit_cache: global::Dict!({{"tx"}: Never, {"ty"}: Never, {"wrk"}: Never, {"iwrk"}: Never})
.bisplrep: (x: Obj, y: Obj, z: Obj, w: Structural({.__len__ = (self: Never) -> Nat}) := {None} and Structural({.__len__ = (self: Never) -> Nat}), xb: Obj := {None}, xe: Obj := {None}, yb: Obj := {None}, ye: Obj := {None}, kx: Obj := {3}, ky: Obj := {3}, task: Obj := {0}, s: {0} := {None} and {0}, eps: Obj := {0.0}, tx: Obj := {None}, ty: Obj := {None}, full_output: Bool := {0} and Bool, nxest: Never := Never, nyest: Never := Never, quiet: Obj := {1}) -> Never
.bisplev: |E :> {0}, E <: Float|(x: Obj, y: Obj, tck: global::Indexable(Obj, Never), dx: E := E, dy: E := E) -> Never
.dblint: (xa: Obj, xb: Obj, ya: Obj, yb: Obj, tck: global::Indexable(Obj, Never)) -> Never
.insert: |Type_294110 :> {0}, K: Type, Self :> ?T or ?U, Self <: global::Indexable(?K, ?T), T: Type, Self :> global::List!(Never, 3), Self <: global::Indexable(?K, Never), U: Type|(x: Obj, tck: Self, m: Obj := Obj, per: Type_294110 := Type_294110 and Type_294110) -> Self
.splder: (tck: global::Indexable(Obj, Never), n: Structural({.__lt__ = (self: Never, Obj) -> Bool; .__gt__ = (self: Never, Never) -> Bool}) := {1} and Structural({.__lt__ = (self: Never, Obj) -> Bool; .__gt__ = (self: Never, Never) -> Bool})) -> global::Tuple([Never, Never, Never])
.splantider: |Self <: global::Indexable(?K, Never), K: Type, Self <: global::Indexable(?K, ?V), V: Type|(tck: Self, n: Int := Int) -> global::Tuple([Self, global::List(Never, _: Nat), Structural({.__add__ = (self: Never, Obj) -> Never and (self: Never, Obj) -> Never; .__neg__ = (self: Never) -> Structural({.__sub__ = (self: Never, Obj) -> NoneType or Int})})])
