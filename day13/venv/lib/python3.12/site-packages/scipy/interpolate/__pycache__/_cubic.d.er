##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/interpolate/_cubic.py 1734628983 38621

.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.annotations: Never
.___v_desugar_2 = pyimport "<failure>"

.TYPE_CHECKING: Never
.warnings = pyimport "<failure>"


.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_3 = pyimport "__init__"

.solve: Never
.solve_banded: Never
.___v_desugar_4 = pyimport "__init__"

.PPoly: Never
.___v_desugar_5 = pyimport "_polyint"
._polyint = pyimport "_polyint"
._isscalar: |Type_96985 <: Structural({.shape = ?E}), E: Type|(x: Type_96985) -> Never

.__all__: global::List!({"CubicHermiteSpline", "CubicSpline", "pchip_interpolate", "PchipInterpolator", "Akima1DInterpolator"}, 5)
.prepare_input: |Type_285047: Type, O <: Structural({.__mod__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(x: Obj, y: Obj, axis: O, dydx: Type_285047 := {None} and Type_285047) -> global::Tuple([Never, Never, Never, O, Type_285047])
.CubicHermiteSpline: ClassType
.CubicHermiteSpline <: Never
.CubicHermiteSpline.axis: Never
.CubicHermiteSpline.__call__: (x: Obj, y: Obj, dydx: Obj, axis: Obj := Obj, extrapolate: Obj := Obj) -> _cubic.CubicHermiteSpline

.PchipInterpolator: ClassType
_cubic = pyimport "_cubic"
.PchipInterpolator <: .CubicHermiteSpline
.PchipInterpolator.axis: Never
.PchipInterpolator.__call__: (x: Obj, y: Obj, axis: Obj := Obj, extrapolate: Obj := Obj) -> _cubic.PchipInterpolator
.PchipInterpolator._edge_case: |R <: Nat|(h0: Obj, h1: R, m0: Never, m1: R) -> Float
.PchipInterpolator._find_derivatives: |E: Type, K: Type, Type_285333: Type, Type_285333 <: Structural({.__getitem__ = (self: Obj, ?285332) -> ?285333 and (self: Obj, ?285377) -> ?285378; .shape = ?285318 and ?Self; .ndim = ?E}), Type_285332: Type, V: Type, Self <: global::Indexable(?K, ?V), Self <: global::Indexable(?K, Self), Type_285377: Type, Type_285378: Type, Type_285318: Type, Self <: global::Indexable(?K, ?V)|(x: Self, y: Type_285333) -> Never

.pchip_interpolate: (xi: Obj, yi: Obj, x: Obj, der: {0} := {0}, axis: Obj := Obj) -> Never
.Akima1DInterpolator: ClassType
.Akima1DInterpolator <: .CubicHermiteSpline
.Akima1DInterpolator.axis: Never
.Akima1DInterpolator.__call__: (x: Obj, y: Obj, axis: Obj := Obj, method: {"makima", "akima"} := {"makima", "akima"}, extrapolate: NoneType or Bool := NoneType or Bool) -> _cubic.Akima1DInterpolator
.Akima1DInterpolator.extend: (self: _cubic.Akima1DInterpolator, c: Obj, x: Obj, right: Obj := Obj) -> Never
.Akima1DInterpolator.from_spline: (cls: Obj, tck: Obj, extrapolate: Obj := Obj) -> Never
.Akima1DInterpolator.from_bernstein_basis: (cls: Obj, bp: Obj, extrapolate: Obj := Obj) -> Never

.CubicSpline: ClassType
.CubicSpline <: .CubicHermiteSpline
.CubicSpline.axis: Never
.CubicSpline.__call__: (x: Obj, y: Obj, axis: Obj := Obj, bc_type: Obj := Obj, extrapolate: Obj := Obj) -> _cubic.CubicSpline
.CubicSpline._validate_bc: Never

