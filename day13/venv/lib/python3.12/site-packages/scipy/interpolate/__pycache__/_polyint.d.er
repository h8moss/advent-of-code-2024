##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/interpolate/_polyint.py 1734628983 34983
.warnings = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_1 = pyimport "__init__"

.factorial: Never
.___v_desugar_2 = pyimport "_util"
._util = pyimport "_util"
._asarray_validated: (a: Obj, check_finite: Bool := Bool, sparse_ok: Bool := Bool, objects_ok: Bool := Bool, mask_ok: Bool := Bool, as_inexact: Bool := Bool) -> Never
.float_factorial: (n: Int) -> Float
.check_random_state: (seed: Obj) -> Never
.__all__: global::List!({"KroghInterpolator", "barycentric_interpolate", "krogh_interpolate", "BarycentricInterpolator", "approximate_taylor_polynomial"}, 5)
._isscalar: |Type_96985 <: Structural({.shape = ?E}), E: Type|(x: Type_96985) -> Never
.Type__Interpolator1D: ClassType
.Type__Interpolator1D._y_axis: Never
.Type__Interpolator1D._y_extra_shape: Never
.Type__Interpolator1D.dtype: Never
.Type__Interpolator1D.__call__: (self: _polyint.Type__Interpolator1D, x: Obj) -> Never
.Type__Interpolator1D.__slots__: global::Tuple([{"_y_axis"}, {"_y_extra_shape"}, {"dtype"}])
.Type__Interpolator1D.__call__: (self: _polyint.Type__Interpolator1D, x: Obj) -> Never
.Type__Interpolator1D._evaluate: (self: _polyint.Type__Interpolator1D, x: Obj) -> Never
.Type__Interpolator1D._prepare_x: (self: _polyint.Type__Interpolator1D, x: Obj) -> global::Tuple([Never, {Type_v_global_133: (self: global::List(Type, _: Nat)) -> global::List!(Nat, _: Nat) | Type_v_global_133 == shape}])
.Type__Interpolator1D._finish_y: (self: _polyint.Type__Interpolator1D, y: Obj, x_shape: Obj) -> Never
.Type__Interpolator1D._reshape_yi: (self: _polyint.Type__Interpolator1D, yi: Obj, check: Structural({.__and__ = (self: Never, Obj) -> Bool}) := {False} and Structural({.__and__ = (self: Never, Obj) -> Bool})) -> Never
.Type__Interpolator1D._set_yi: (self: _polyint.Type__Interpolator1D, yi: Obj, xi: Structural({.__len__ = (self: Never) -> Nat}) := {None} and Structural({.__len__ = (self: Never) -> Nat}), axis: Structural({.__mod__ = (self: Never, Obj) -> Never}) := {None} and Structural({.__mod__ = (self: Never, Obj) -> Never})) -> NoneType
.Type__Interpolator1D._set_dtype: |Type_97117 :> {False}|(self: _polyint.Type__Interpolator1D, dtype: Obj, union: Type_97117 := Type_97117 and Type_97117) -> NoneType

.Type__Interpolator1DWithDerivatives: ClassType
_polyint = pyimport "_polyint"
.Type__Interpolator1DWithDerivatives <: .Type__Interpolator1D
.Type__Interpolator1DWithDerivatives.derivatives: (self: _polyint.Type__Interpolator1DWithDerivatives, x: Obj, der: Obj := Obj) -> Never
.Type__Interpolator1DWithDerivatives.derivative: (self: _polyint.Type__Interpolator1DWithDerivatives, x: Obj, der: Structural({.__add__ = (self: Never, Obj) -> Never}) := {1} and Structural({.__add__ = (self: Never, Obj) -> Never})) -> Never
.Type__Interpolator1DWithDerivatives._evaluate_derivatives: (self: _polyint.Type__Interpolator1DWithDerivatives, x: Obj, der: Obj := Obj) -> Never

.KroghInterpolator: ClassType
.KroghInterpolator <: .Type__Interpolator1DWithDerivatives
.KroghInterpolator.xi: Never
.KroghInterpolator.yi: Never
.KroghInterpolator.c: Never
.KroghInterpolator.__call__: (xi: Obj, yi: Obj, axis: Obj := Obj) -> _polyint.KroghInterpolator
.KroghInterpolator._evaluate: |Type_97242 <: Structural({.__len__ = (self: Never) -> Nat; .__sub__ = (self: Never, ?R) -> ?O}), R: Type, O: Type, O <: Structural({.__add__ = (self: Never, ?R) -> ?O})|(self: Never, x: Type_97242) -> O
.KroghInterpolator._evaluate_derivatives: |R: Type, O: Type, Type_97252 <: Structural({.__len__ = (self: Never) -> Nat; .__sub__ = (self: Never, ?R) -> ?O})|(self: Never, x: Type_97252, der: Never := Never) -> Never

.krogh_interpolate: (xi: Obj, yi: Obj, x: Obj, der: {0} := {0}, axis: Obj := Obj) -> Never
.approximate_taylor_polynomial: |O <: Structural({.__mod__ = (self: Never, ?R) -> ?O}), R :> {1}, O: Type, R: Type, Type_97222: Type, Type_97293 <: Structural({.__mul__ = (self: Never, ?R) -> ?O})|(f: (Type_97222) -> Never, x: R, degree: Never, scale: Type_97293, order: Structural({.__add__ = (self: Never, R) -> O}) := {None} and Structural({.__add__ = (self: Never, R) -> O})) -> Never
.BarycentricInterpolator: ClassType
.BarycentricInterpolator <: .Type__Interpolator1DWithDerivatives
.BarycentricInterpolator.xi: Never
.BarycentricInterpolator._diff_cij: Never
.BarycentricInterpolator.n: Never
.BarycentricInterpolator.__call__: (self: _polyint.BarycentricInterpolator, x: Obj) -> Never
.BarycentricInterpolator.set_yi: (self: Never, yi: Obj, axis: Never := Never) -> NoneType
.BarycentricInterpolator.add_xi: (self: Never, xi: Obj, yi: Obj := Obj) -> NoneType
.BarycentricInterpolator.__call__: (self: _polyint.BarycentricInterpolator, x: Obj) -> Never
.BarycentricInterpolator._evaluate: |E: Type, Type_97429 <: Structural({.size = ?E; .__getitem__ = (self: Obj, ?109154) -> ?109155}), Type_109154: Type, Type_109155: Type|(self: Never, x: Type_97429) -> Never
.BarycentricInterpolator.derivative: (self: _polyint.BarycentricInterpolator, x: Obj, der: Structural({.__add__ = (self: Never, Obj) -> {1}}) := {1} and Structural({.__add__ = (self: Never, Obj) -> {1}})) -> Never
.BarycentricInterpolator._evaluate_derivatives: |E: Type, Type_97464 <: Structural({.size = ?E and ?E; .__len__ = (self: Never) -> Nat})|(self: _polyint.BarycentricInterpolator, x: Type_97464, der: {1} := {None} and {1}, all_lower: {False} := {True} and {False}) -> Never

.barycentric_interpolate: (xi: Obj, yi: Obj, x: Obj, axis: Obj := Obj, der: {0} := {0}) -> Never
