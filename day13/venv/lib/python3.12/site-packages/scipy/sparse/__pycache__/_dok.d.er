##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/sparse/_dok.py 1734628983 22573

.__docformat__: {"restructuredtext en"}
.__all__: global::List!({"dok_matrix", "isspmatrix_dok", "dok_array"}, 3)
.itertools = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.___v_desugar_1 = pyimport "<failure>"

.warn: Never
.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_2 = pyimport "_matrix"
._matrix = pyimport "_matrix"
.spmatrix: Never
.___v_desugar_3 = pyimport "_base"
._base = pyimport "_base"
._spbase: Never
.sparray: Never
.issparse: (x: Never) -> Never
.___v_desugar_4 = pyimport "_index"
._index = pyimport "_index"
.IndexMixin: {_index.IndexMixin}
.___v_desugar_5 = pyimport "_sputils"
._sputils = pyimport "_sputils"
.isdense: |Type_532911 <: Structural({.ndim = ?E}), E: Type|(x: Type_532911) -> Bool
.getdtype: |E: Type|(dtype: Obj, a: Structural({.dtype = E}) := Structural({.dtype = E}), default: Obj := Obj) -> E
.isshape: |R :> {d in {Type_v_global_906399: Nat | ((Type_v_global_906399 <= 0) and (Type_v_global_906399 != 0) or Type_v_global_906399 == 0)}}, Type_532308 <: Structural({.__len__ = (self: Never) -> Nat}), O <: Bool, O: Type, R :> {ndim in {1}}|(x: Type_532308, nonneg: Structural({.__and__ = (self: Never, R) -> O}) := {False} and Structural({.__and__ = (self: Never, R) -> O}), allow_1d: Structural({.__and__ = (self: Never, R) -> O}) := {False} and Structural({.__and__ = (self: Never, R) -> O})) -> Bool
.isintlike: (x: Obj) -> Bool
.isscalarlike: |Type_532911 <: Structural({.ndim = ?E}), E: Type|(x: Type_532911) -> Bool
.upcast: (*args: Obj) -> Never
.upcast_scalar: (dtype: Obj, scalar: Obj) -> Never
.check_shape: |Type_532971: Type, Type_532317 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, ?532965) -> ?I and (self: Obj, ?532971) -> ?532972}), T: Type, Type_532965: Type, I <: global::Iterable(?T), Type_532972: Type|(args: Type_532317, current_shape: Obj := {None}, allow_1d: Obj := {False}) -> global::HomogenousTuple(Int)
.Type__dok_base: ClassType
.Type__dok_base <: Never
.Type__dok_base.__call__: (arg1: Obj, shape: Obj := Obj, dtype: Obj := Obj, copy: Obj := Obj) -> _dok.Type__dok_base
.Type__dok_base._format: {"dok"}
.Type__dok_base.update: (self: _dok.Type__dok_base, val: Obj) -> Never
.Type__dok_base._getnnz: (self: _dok.Type__dok_base, axis: Obj := Obj) -> Nat
.Type__dok_base.count_nonzero: (self: _dok.Type__dok_base) -> global::Add(Never)
.Type__dok_base.__len__: (self: _dok.Type__dok_base) -> Nat
.Type__dok_base.__contains__: (self: _dok.Type__dok_base, key: Obj) -> Bool
.Type__dok_base.setdefault: (self: _dok.Type__dok_base, key: Obj, default: Obj := Obj) -> Never
.Type__dok_base.__delitem__: (self: _dok.Type__dok_base, key: Obj) -> Never
.Type__dok_base.clear: (self: _dok.Type__dok_base) -> Never
.Type__dok_base.pop: (self: _dok.Type__dok_base, *args: Obj) -> Never
.Type__dok_base.__reversed__: (self: _dok.Type__dok_base) -> Never
.Type__dok_base.__or__: (self: _dok.Type__dok_base, other: Obj) -> Never
.Type__dok_base.__ror__: (self: _dok.Type__dok_base, other: Obj) -> Never
.Type__dok_base.__ior__: (self: _dok.Type__dok_base, other: Obj) -> Never
.Type__dok_base.popitem: (self: _dok.Type__dok_base) -> Never
.Type__dok_base.items: (self: _dok.Type__dok_base) -> Never
.Type__dok_base.keys: (self: _dok.Type__dok_base) -> Never
.Type__dok_base.values: (self: _dok.Type__dok_base) -> Never
.Type__dok_base.get: (self: _dok.Type__dok_base, key: global::Tuple([Never]), default: Obj := Obj) -> Never
.Type__dok_base.__getitem__: |Type_548521 <: Structural({.__len__ = (self: Never) -> Nat})|(self: Never, key: Type_548521) -> Never
.Type__dok_base._get_int: (self: _dok.Type__dok_base, idx: Obj) -> Never
.Type__dok_base._get_intXint: (self: _dok.Type__dok_base, row: Obj, col: Obj) -> Never
.Type__dok_base._get_intXslice: (self: _dok.Type__dok_base, row: Int, col: Obj) -> Never
.Type__dok_base._get_sliceXint: (self: _dok.Type__dok_base, row: Obj, col: Int) -> Never
.Type__dok_base._get_sliceXslice: (self: _dok.Type__dok_base, row: Obj, col: Obj) -> Never
.Type__dok_base._get_intXarray: (self: _dok.Type__dok_base, row: Obj, col: Obj) -> Never
.Type__dok_base._get_arrayXint: (self: _dok.Type__dok_base, row: Obj, col: Obj) -> Never
.Type__dok_base._get_sliceXarray: (self: Never, row: Obj, col: Obj) -> Never
.Type__dok_base._get_arrayXslice: (self: Never, row: Obj, col: Obj) -> Never
.Type__dok_base._get_columnXarray: (self: _dok.Type__dok_base, row: global::List!(Never, 1), col: global::List!(Never, 1)) -> Never
.Type__dok_base._get_arrayXarray: (self: _dok.Type__dok_base, row: Obj, col: Obj) -> Never
.Type__dok_base.__setitem__: |Type_548567 <: Structural({.__len__ = (self: Never) -> Nat})|(self: Never, key: Type_548567, value: Obj) -> Never
.Type__dok_base._set_int: (self: _dok.Type__dok_base, idx: Obj, x: Bool) -> NoneType
.Type__dok_base._set_intXint: (self: _dok.Type__dok_base, row: Obj, col: Obj, x: Bool) -> NoneType
.Type__dok_base._set_arrayXarray: (self: _dok.Type__dok_base, row: Obj, col: Obj, x: Obj) -> NoneType
.Type__dok_base.__add__: (self: _dok.Type__dok_base, other: Never) -> Never
.Type__dok_base.__radd__: (self: Obj, other: Never) -> Never
.Type__dok_base.__neg__: (self: _dok.Type__dok_base) -> Never
.Type__dok_base._mul_scalar: (self: _dok.Type__dok_base, other: Obj) -> Never
.Type__dok_base._matmul_vector: (self: Never, other: Never) -> Never
.Type__dok_base._matmul_multivector: |Self <: global::Indexable(?K, ?V), K: Type, Type_549881: Type, Type_548599 <: Structural({.dtype = ?549881; .shape = ?Self; .ndim = ?E}), E: Type, V: Type|(self: Never, other: Type_548599) -> Never
.Type__dok_base.__imul__: (self: _dok.Type__dok_base, other: Never) -> NotImplementedType
.Type__dok_base.__truediv__: (self: _dok.Type__dok_base, other: Never) -> Never
.Type__dok_base.__itruediv__: (self: _dok.Type__dok_base, other: Never) -> NotImplementedType
.Type__dok_base.__reduce__: (self: _dok.Type__dok_base) -> Never
.Type__dok_base.diagonal: (self: _dok.Type__dok_base, k: Obj := Obj) -> Never
.Type__dok_base.transpose: (self: Never, axes: Obj := Obj, copy: Obj := Obj) -> Never
.Type__dok_base.conjtransp: (self: Never) -> Never
.Type__dok_base.copy: (self: Never) -> Never
.Type__dok_base.fromkeys: |Type_550170: Type|(cls: (global::Tuple([Never])) -> Type_550170, iterable: Obj, value: Obj := {1}) -> Type_550170
.Type__dok_base.tocoo: ||Never
.Type__dok_base.todok: (self: Never, copy: Bool := Bool) -> Never
.Type__dok_base.tocsc: (self: Never, copy: Obj := Obj) -> Never
.Type__dok_base.resize: (self: Never, *shape: Structural({.__lt__ = (self: Never, Obj) -> Bool})) -> NoneType
.Type__dok_base.astype: (self: _dok.Type__dok_base, dtype: Obj, casting: Obj := Obj, copy: Bool := Bool) -> _dok.Type__dok_base

.isspmatrix_dok: (x: Obj) -> Bool
.Type_dok_array: ClassType
_dok = pyimport "_dok"
.Type_dok_array <: .Type__dok_base

.dok_matrix: ClassType

