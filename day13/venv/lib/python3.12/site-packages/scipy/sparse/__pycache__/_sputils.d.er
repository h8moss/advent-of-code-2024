##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/sparse/_sputils.py 1734628983 14545

.sys = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.___v_desugar_1 = pyimport "<failure>"

.Any: Never
.Literal: Never
.Optional: Never
.Union: Never
.operator = pyimport "<failure>"


.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_2 = pyimport "<failure>"

.prod: Never
.sp = pyimport "__init__"


.___v_desugar_3 = pyimport "_util"
._util = pyimport "_util"
.np_long: Never
.np_ulong: Never
.__all__: global::List!({"isshape", "isdense", "issequence", "ismatrix", "upcast", "get_sum_dtype", "isscalarlike", "getdata", "getdtype", "isintlike"}, 10)
.supported_dtypes: Never
._upcast_memo: global::Dict!({Int: Never})
.upcast: (*args: Obj) -> Never
.upcast_char: (*args: Never) -> Never
.upcast_scalar: (dtype: Obj, scalar: Obj) -> Never
.downcast_intp_index: |Type_532274 <: Structural({.astype = (self: Obj, ?532579) -> ?532580 and (self: Obj, ?532593) -> ?532594; .min = (self: Obj) -> ?532584; .dtype = ?532570; .size = ?E; .max = (self: Obj) -> ?532583}), E: Type, Type_532579: Type, Type_532580: Type, Type_532570: Type, Type_532274 <: Structural({.astype = (self: Never, ?532579) -> ?532580 and (self: Never, ?532593) -> ?532594; .min = (self: Never) -> ?532584; .dtype = ?532570; .size = ?E; .max = (self: Never) -> ?532583}), Type_532593: Type, Type_532584: Type, Type_532583: Type, Type_532594: Type|(arr: Type_532274) -> Type_532274
.to_native: |Type_532276 <: Structural({.dtype = Never})|(A: Type_532276) -> Never
.getdtype: |E: Type|(dtype: Obj, a: Structural({.dtype = E}) := Structural({.dtype = E}), default: Obj := Obj) -> E
.getdata: (obj: Obj, dtype: Obj := Obj, copy: Obj := Obj) -> Never
.get_index_dtype: |Type_532749: Type, E: Type, Type_532764 <: Structural({.__le__ = (self: Never, ?R) -> Bool}), T: Type, Type_532764: Type, Type_532762: Type, Type_532765: Type, R: Type, T <: Structural({.min = (self: Obj) -> ?532765; .dtype = ?532749 and ?532762; .size = ?E; .max = (self: Obj) -> ?532764})|(arrays: global::Iterable(T) := global::Iterable(T), maxval: Type_532764 := Type_532764, check_contents: Bool := Bool) -> T
.get_sum_dtype: (dtype: Obj) -> Never
.isscalarlike: |Type_532911 <: Structural({.ndim = ?E}), E: Type|(x: Type_532911) -> Bool
.isintlike: (x: Obj) -> Bool
.isshape: |R :> {d in {Type_v_global_906399: Nat | ((Type_v_global_906399 <= 0) and (Type_v_global_906399 != 0) or Type_v_global_906399 == 0)}}, Type_532308 <: Structural({.__len__ = (self: Never) -> Nat}), O <: Bool, O: Type, R :> {ndim in {1}}|(x: Type_532308, nonneg: Structural({.__and__ = (self: Never, R) -> O}) := {False} and Structural({.__and__ = (self: Never, R) -> O}), allow_1d: Structural({.__and__ = (self: Never, R) -> O}) := {False} and Structural({.__and__ = (self: Never, R) -> O})) -> Bool
.issequence: |E: Type, Type_532313 <: Structural({.__len__ = (self: Never) -> Nat; .ndim = ?E; .__getitem__ = (self: Obj, ?532875) -> ?532876}), Type_532875: Type, Type_532876: Type|(t: Type_532313) -> Bool
.ismatrix: |E: Type, Type_532314 <: Structural({.__len__ = (self: Never) -> Nat; .ndim = ?E})|(t: Type_532314) -> Bool
.isdense: |Type_532911 <: Structural({.ndim = ?E}), E: Type|(x: Type_532911) -> Bool
.validateaxis: (axis: Float) -> NoneType
.check_shape: |Type_532971: Type, Type_532317 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, ?532965) -> ?I and (self: Obj, ?532971) -> ?532972}), T: Type, Type_532965: Type, I <: global::Iterable(?T), Type_532972: Type|(args: Type_532317, current_shape: Obj := {None}, allow_1d: Obj := {False}) -> global::HomogenousTuple(Int)
.check_reshape_kwargs: (kwargs: Never) -> global::Tuple([{Type_v_global_179: Int | (Type_v_global_179 >= 0) and (Type_v_global_179 <= 255)}, {Type_v_global_179: Int | (Type_v_global_179 >= 0) and (Type_v_global_179 <= 255)}])
.is_pydata_spmatrix: (m: Obj) -> Bool
.convert_pydata_sparse_to_scipy: (arg: Obj, target_format: {"csr", "csc"} or NoneType := {"csr", "csc"} or NoneType) -> Never
.matrix: (*args: Obj, **kwargs := ?532331) -> Never
.asmatrix: |E: Type, Type_532333 <: Structural({.dtype = ?E})|(data: Type_532333, dtype: E := E) -> Never
._todata: (s: Obj) -> Never
