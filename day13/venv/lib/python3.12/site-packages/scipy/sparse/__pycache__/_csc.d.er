##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/sparse/_csc.py 1734628983 11057

.__docformat__: {"restructuredtext en"}
.__all__: global::List!({"csc_matrix", "isspmatrix_csc", "csc_array"}, 3)
.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_1 = pyimport "_matrix"
._matrix = pyimport "_matrix"
.spmatrix: Never
.___v_desugar_2 = pyimport "_base"
._base = pyimport "_base"
._spbase: Never
.sparray: Never
.___v_desugar_3 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.csc_tocsr: Never
.expandptr: Never
.___v_desugar_4 = pyimport "_sputils"
._sputils = pyimport "_sputils"
.upcast: (*args: Obj) -> Never
.___v_desugar_5 = pyimport "_compressed"
._compressed = pyimport "_compressed"
._cs_matrix: Never
.Type__csc_base: ClassType
.Type__csc_base <: Never
.Type__csc_base._format: {"csc"}
.Type__csc_base.transpose: (self: Never, axes: Obj := Obj, copy: Obj := Obj) -> Never
.Type__csc_base.__iter__: (self: _csc.Type__csc_base) -> Never
.Type__csc_base.tocsc: (self: Never, copy: Bool := Bool) -> Never
.Type__csc_base.tocsr: Never
.Type__csc_base.nonzero: (self: Never) -> global::Tuple([Never, Never])
.Type__csc_base._getrow: (self: Never, i: Obj) -> Never
.Type__csc_base._getcol: (self: Never, i: Obj) -> Never
.Type__csc_base._get_intXarray: (self: _csc.Type__csc_base, row: Obj, col: Obj) -> Never
.Type__csc_base._get_intXslice: |Type_546180 <: Structural({.step = ?T}), T: Type|(self: _csc.Type__csc_base, row: Obj, col: Type_546180) -> Never
.Type__csc_base._get_sliceXint: |Type_546183 <: Structural({.step = ?T}), T: Type|(self: _csc.Type__csc_base, row: Type_546183, col: Obj) -> Never
.Type__csc_base._get_sliceXarray: (self: _csc.Type__csc_base, row: Obj, col: Obj) -> Never
.Type__csc_base._get_arrayXint: (self: _csc.Type__csc_base, row: Obj, col: Obj) -> Never
.Type__csc_base._get_arrayXslice: (self: _csc.Type__csc_base, row: Obj, col: Obj) -> Never
.Type__csc_base._swap: |Type_546408: Type, Type_546410: Type, Type_546198 <: Structural({.__getitem__ = (self: Obj, ?546408) -> ?546409 and (self: Obj, ?546410) -> ?546411}), Type_546409: Type, Type_546411: Type|(x: Type_546198) -> global::Tuple([Type_546409, Type_546411])

.isspmatrix_csc: (x: Obj) -> Bool
.Type_csc_array: ClassType
_csc = pyimport "_csc"
.Type_csc_array <: .Type__csc_base

.csc_matrix: ClassType

