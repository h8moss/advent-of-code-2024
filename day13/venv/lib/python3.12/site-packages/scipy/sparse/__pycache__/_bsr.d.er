##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/sparse/_bsr.py 1734628983 30257

.__docformat__: {"restructuredtext en"}
.__all__: global::List!({"isspmatrix_bsr", "bsr_array", "bsr_matrix"}, 3)
.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.warn: Never
.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_2 = pyimport "_util"
._util = pyimport "_util"
.copy_if_needed: Never
.___v_desugar_3 = pyimport "_matrix"
._matrix = pyimport "_matrix"
.spmatrix: Never
.___v_desugar_4 = pyimport "_data"
._data = pyimport "_data"
._data_matrix: Never
._minmax_mixin: Never
.___v_desugar_5 = pyimport "_compressed"
._compressed = pyimport "_compressed"
._cs_matrix: Never
.___v_desugar_6 = pyimport "_base"
._base = pyimport "_base"
.issparse: (x: Never) -> Never
._formats: Never
._spbase: Never
.sparray: Never
.___v_desugar_7 = pyimport "_sputils"
._sputils = pyimport "_sputils"
.isshape: |R :> {d in {Type_v_global_906399: Nat | ((Type_v_global_906399 <= 0) and (Type_v_global_906399 != 0) or Type_v_global_906399 == 0)}}, Type_532308 <: Structural({.__len__ = (self: Never) -> Nat}), O <: Bool, O: Type, R :> {ndim in {1}}|(x: Type_532308, nonneg: Structural({.__and__ = (self: Never, R) -> O}) := {False} and Structural({.__and__ = (self: Never, R) -> O}), allow_1d: Structural({.__and__ = (self: Never, R) -> O}) := {False} and Structural({.__and__ = (self: Never, R) -> O})) -> Bool
.getdtype: |E: Type|(dtype: Obj, a: Structural({.dtype = E}) := Structural({.dtype = E}), default: Obj := Obj) -> E
.getdata: (obj: Obj, dtype: Obj := Obj, copy: Obj := Obj) -> Never
.to_native: |Type_532276 <: Structural({.dtype = Never})|(A: Type_532276) -> Never
.upcast: (*args: Obj) -> Never
.check_shape: |Type_532971: Type, Type_532317 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, ?532965) -> ?I and (self: Obj, ?532971) -> ?532972}), T: Type, Type_532965: Type, I <: global::Iterable(?T), Type_532972: Type|(args: Type_532317, current_shape: Obj := {None}, allow_1d: Obj := {False}) -> global::HomogenousTuple(Int)
.___v_desugar_8 = pyimport "__init__"

._sparsetools: Never
.___v_desugar_9 = pyimport "<failure>"

.bsr_matvec: Never
.bsr_matvecs: Never
.csr_matmat_maxnnz: Never
.bsr_matmat: Never
.bsr_transpose: Never
.bsr_sort_indices: Never
.bsr_tocsr: Never
.Type__bsr_base: ClassType
.Type__bsr_base <: Never
.Type__bsr_base.__call__: (arg1: Obj, shape: Obj := Obj, dtype: Obj := Obj, copy: Obj := Obj, blocksize: Obj := Obj) -> _bsr.Type__bsr_base
.Type__bsr_base._format: {"bsr"}
.Type__bsr_base.check_format: (self: Never, full_check: Bool := Bool) -> NoneType
.Type__bsr_base.blocksize: (self: _bsr.Type__bsr_base) -> global::GenericTuple
.Type__bsr_base._getnnz: (self: _bsr.Type__bsr_base, axis: Obj := Obj) -> Int
.Type__bsr_base.__repr__: (self: Never) -> Str
.Type__bsr_base.diagonal: (self: Never, k: Structural({.__le__ = (self: Never, Obj) -> Bool; .__ge__ = (self: Never, Obj) -> Bool}) := {0} and Structural({.__le__ = (self: Never, Obj) -> Bool; .__ge__ = (self: Never, Obj) -> Bool})) -> Never
.Type__bsr_base.__getitem__: (self: _bsr.Type__bsr_base, key: Obj) -> Never
.Type__bsr_base.__setitem__: (self: _bsr.Type__bsr_base, key: Obj, val: Obj) -> Never
.Type__bsr_base._add_dense: (self: _bsr.Type__bsr_base, other: Obj) -> Never
.Type__bsr_base._matmul_vector: |Type_533731 <: Structural({.dtype = ?544507}), Type_544507: Type|(self: Never, other: Type_533731) -> Never
.Type__bsr_base._matmul_multivector: |Type_544545: Type, Type_544550: Type, K: Type, Self <: global::Indexable(?K, ?V), Type_533734 <: Structural({.dtype = ?544545; .ravel = (self: Obj) -> ?544550; .shape = ?Self}), V: Type|(self: Never, other: Type_533734) -> Never
.Type__bsr_base._matmul_sparse: |E: Type, K: Type, Type_544641: Type, Self <: global::Indexable(?K, ?V), Type_544621: Type, Type_544623: Type, V: Type, Type_544648: Type, Self <: global::Indexable(?K, ?V), Type_544624 <: Structural({.shape = ?Self; .tobsr = (self: Obj, blocksize := ?544620, copy := ?544621) -> ?544624 and (self: Obj, blocksize := ?544623) -> ?544624; .indptr = Never; .indices = Never; .format = ?E and ?544615; .dtype = ?544641; .data = ?544648; .blocksize = ?Self}), Type_544620: Type, Type_544624: Type, Type_544615: Type|(self: Never, other: Type_544624) -> Never
.Type__bsr_base.tobsr: |T: Type|(self: Never, blocksize: T := T, copy: Bool := Bool) -> T
.Type__bsr_base.tocsr: |Type_533746 :> {False}|(self: Never, copy: Type_533746 := Type_533746 and Type_533746) -> Never
.Type__bsr_base.tocsc: (self: Never, copy: Obj := Obj) -> Never
.Type__bsr_base.tocoo: (self: _bsr.Type__bsr_base, copy: Bool := Bool) -> Never
.Type__bsr_base.toarray: (self: _bsr.Type__bsr_base, order: Obj := Obj, out: Obj := Obj) -> Never
.Type__bsr_base.transpose: (self: Never, axes: Obj := Obj, copy: Obj := Obj) -> Never
.Type__bsr_base.eliminate_zeros: (self: Never) -> Never
.Type__bsr_base.sum_duplicates: (self: Never) -> NoneType
.Type__bsr_base.sort_indices: (self: Never) -> NoneType
.Type__bsr_base.prune: (self: Never) -> NoneType
.Type__bsr_base._binopt: (self: Never, other: Obj, op: Obj, in_shape: Obj := Obj, out_shape: Obj := Obj) -> Never
.Type__bsr_base._with_data: |Type_533786 <: Structural({.dtype = ?545119 and ?545120}), Type_545119: Type, Type_545120: Type|(self: Never, data: Type_533786, copy: Bool := Bool) -> Never

.isspmatrix_bsr: (x: Obj) -> Bool
.Type_bsr_array: ClassType
_bsr = pyimport "_bsr"
.Type_bsr_array <: .Type__bsr_base

.bsr_matrix: ClassType

