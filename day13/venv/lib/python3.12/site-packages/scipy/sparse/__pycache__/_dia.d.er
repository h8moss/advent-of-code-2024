##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/sparse/_dia.py 1734628983 19790

.__docformat__: {"restructuredtext en"}
.__all__: global::List!({"dia_matrix", "dia_array", "isspmatrix_dia"}, 3)
.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.copy_if_needed: Never
.___v_desugar_2 = pyimport "_matrix"
._matrix = pyimport "_matrix"
.spmatrix: Never
.___v_desugar_3 = pyimport "_base"
._base = pyimport "_base"
.issparse: (x: Never) -> Never
._formats: Never
._spbase: Never
.sparray: Never
.___v_desugar_4 = pyimport "_data"
._data = pyimport "_data"
._data_matrix: Never
.___v_desugar_5 = pyimport "_sputils"
._sputils = pyimport "_sputils"
.isshape: |R :> {d in {Type_v_global_906399: Nat | ((Type_v_global_906399 <= 0) and (Type_v_global_906399 != 0) or Type_v_global_906399 == 0)}}, Type_532308 <: Structural({.__len__ = (self: Never) -> Nat}), O <: Bool, O: Type, R :> {ndim in {1}}|(x: Type_532308, nonneg: Structural({.__and__ = (self: Never, R) -> O}) := {False} and Structural({.__and__ = (self: Never, R) -> O}), allow_1d: Structural({.__and__ = (self: Never, R) -> O}) := {False} and Structural({.__and__ = (self: Never, R) -> O})) -> Bool
.upcast_char: (*args: Never) -> Never
.getdtype: |E: Type|(dtype: Obj, a: Structural({.dtype = E}) := Structural({.dtype = E}), default: Obj := Obj) -> E
.get_sum_dtype: (dtype: Obj) -> Never
.validateaxis: (axis: Float) -> NoneType
.check_shape: |Type_532971: Type, Type_532317 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, ?532965) -> ?I and (self: Obj, ?532971) -> ?532972}), T: Type, Type_532965: Type, I <: global::Iterable(?T), Type_532972: Type|(args: Type_532317, current_shape: Obj := {None}, allow_1d: Obj := {False}) -> global::HomogenousTuple(Int)
.___v_desugar_6 = pyimport "<failure>"

.dia_matvec: Never
.Type__dia_base: ClassType
.Type__dia_base <: Never
.Type__dia_base.__call__: (arg1: Obj, shape: Obj := Obj, dtype: Obj := Obj, copy: Obj := Obj) -> _dia.Type__dia_base
.Type__dia_base._format: {"dia"}
.Type__dia_base.__repr__: (self: Never) -> Str
.Type__dia_base._data_mask: (self: Never) -> Bool
.Type__dia_base.count_nonzero: (self: Never) -> Never
.Type__dia_base._getnnz: (self: Never, axis: Obj := Obj) -> Int
.Type__dia_base.sum: (self: Never, axis: Obj := Obj, dtype: Obj := Obj, out: Structural({.shape = Obj}) := Structural({.shape = Obj})) -> Never
.Type__dia_base._add_sparse: (self: Never, other: Obj) -> Never
.Type__dia_base._mul_scalar: (self: Never, other: Obj) -> Never
.Type__dia_base._matmul_vector: (self: Never, other: Obj) -> Never
.Type__dia_base._setdiag: |E: Type, Type_547836 <: Structural({.__len__ = (self: Never) -> Nat; .ndim = ?E and ?547833; .__getitem__ = (self: Obj, ?547835) -> ?547836}), Type_547835: Type, E <: Structural({.__lt__ = (self: Never, ?R) -> Bool; .__add__ = (self: Never, ?R) -> {<failure>}}), Type_547833: Type, Type_547836: Type, R: Type|(self: Never, values: Type_547836, k: E := {0} and E) -> NoneType
.Type__dia_base.todia: (self: Never, copy: Bool := Bool) -> Never
.Type__dia_base.transpose: (self: Never, axes: Obj := Obj, copy: Obj := Obj) -> Never
.Type__dia_base.diagonal: (self: Never, k: Structural({.__le__ = (self: Never, Obj) -> Bool; .__ge__ = (self: Never, Obj) -> Bool}) := {0} and Structural({.__le__ = (self: Never, Obj) -> Bool; .__ge__ = (self: Never, Obj) -> Bool})) -> Never
.Type__dia_base.tocsc: (self: _dia.Type__dia_base, copy: Obj := Obj) -> Never
.Type__dia_base.tocoo: (self: Never, copy: Obj := Obj) -> Never
.Type__dia_base._with_data: |Type_547479 :> {True}, Type_547479 <: Bool|(self: Never, data: Obj, copy: Type_547479 := Type_547479 and Type_547479) -> Never
.Type__dia_base.resize: Never

._invert_index: |Type_547485 <: Structural({.__len__ = (self: Never) -> Nat})|(idx: Type_547485) -> Never
.isspmatrix_dia: (x: Obj) -> Bool
.Type_dia_array: ClassType
_dia = pyimport "_dia"
.Type_dia_array <: .Type__dia_base

.dia_matrix: ClassType

