##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/stats/_odds_ratio.py 1734628983 17861
.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_1 = pyimport "__init__"

.ndtri: Never
.___v_desugar_2 = pyimport "__init__"

.brentq: |R: Type, R :> {0}|(f: (x: Obj, *args: Obj) -> Never, a: Obj, b: Obj, args: global::Tuple([global::Tuple([Obj])]) := global::Tuple([global::Tuple([Obj])]), xtol: Structural({.__le__ = (self: Never, R) -> Bool}) := {0.0} and Structural({.__le__ = (self: Never, R) -> Bool}), rtol: Structural({.__lt__ = (self: Never, R) -> Bool}) := Structural({.__lt__ = (self: Never, R) -> Bool}), maxiter: Obj := {100}, full_output: Bool := {False} and Bool, disp: Obj := {True}) -> Never
.___v_desugar_3 = pyimport "_discrete_distns"
._discrete_distns = pyimport "_discrete_distns"
.nchypergeom_fisher: Never
.___v_desugar_4 = pyimport "_common"
._common = pyimport "_common"
.ConfidenceInterval: Never
._sample_odds_ratio: (table: global::Indexable(Obj, Never)) -> Never
._solve: (func: ({1.0}) -> {0}) -> Never
._nc_hypergeom_mean_inverse: (x: Obj, M: Obj, n: Obj, N: Obj) -> Never
._hypergeom_params_from_table: Never
._ci_upper: (table: Never, alpha: Obj) -> Never
._ci_lower: (table: Never, alpha: Obj) -> Never
._conditional_oddsratio: (table: Never) -> Never
._conditional_oddsratio_ci: (table: Never, confidence_level: Nat := Nat, alternative: {"two-sided"} := {"two-sided"}) -> global::Tuple([{0.0}, Never])
._sample_odds_ratio_ci: (table: Never, confidence_level: Float := Float, alternative: {"less"} := {"less"}) -> global::Tuple([Never, Never])
.OddsRatioResult: ClassType
.OddsRatioResult._table: Never
.OddsRatioResult._kind: Never
.OddsRatioResult.statistic: Never
.OddsRatioResult.__call__: (_table: Obj, _kind: Obj, statistic: Obj) -> _odds_ratio.OddsRatioResult
.OddsRatioResult.__repr__: (self: _odds_ratio.OddsRatioResult) -> Str
.OddsRatioResult.confidence_interval: (self: _odds_ratio.OddsRatioResult, confidence_level: Structural({.__lt__ = (self: Never, Float) -> Bool; .__gt__ = (self: Never, Float) -> Bool}) := {0.95} and Structural({.__lt__ = (self: Never, Float) -> Bool; .__gt__ = (self: Never, Float) -> Bool}), alternative: {"two-sided"} := {"two-sided"} and {"two-sided"}) -> Never
.OddsRatioResult._conditional_odds_ratio_ci: (self: _odds_ratio.OddsRatioResult, confidence_level: Nat := Nat, alternative: {"two-sided"} := {"two-sided"}) -> Never
.OddsRatioResult._sample_odds_ratio_ci: (self: _odds_ratio.OddsRatioResult, confidence_level: Nat := Nat, alternative: {"two-sided"} := {"two-sided"}) -> Never

.odds_ratio: (table: Obj, kind: Obj := Obj) -> _odds_ratio.OddsRatioResult
