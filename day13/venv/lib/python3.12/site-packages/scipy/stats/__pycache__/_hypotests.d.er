##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/stats/_hypotests.py 1734628983 79159
.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.namedtuple: Never
.___v_desugar_2 = pyimport "<failure>"

.dataclass: Never
.___v_desugar_3 = pyimport "<failure>"

.comb: Never
.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.warnings = pyimport "<failure>"


.___v_desugar_4 = pyimport "<failure>"

.combinations: Never
.scipy = pyimport "__init__"


.___v_desugar_5 = pyimport "__init__"

.shgo: Never
.___v_desugar_6 = pyimport "__init__"

.distributions: Never
.___v_desugar_7 = pyimport "_common"
._common = pyimport "_common"
.ConfidenceInterval: Never
.___v_desugar_8 = pyimport "_continuous_distns"
._continuous_distns = pyimport "_continuous_distns"
.norm: Never
.___v_desugar_9 = pyimport "__init__"

.gamma: Never
.kv: Never
.gammaln: Never
.___v_desugar_10 = pyimport "__init__"

.ifft: (x: Obj, n: Obj := Obj, axis: Obj := Obj, norm: Obj := Obj, overwrite_x: Obj := Obj, workers: Obj := Obj, plan: Obj := Obj) -> global::Tuple([Never])
.___v_desugar_11 = pyimport "<failure>"

._a_ij_Aij_Dij2: Never
.___v_desugar_12 = pyimport "<failure>"

._P: Never
._Q: Never
.___v_desugar_13 = pyimport "_axis_nan_policy"
._axis_nan_policy = pyimport "_axis_nan_policy"
._axis_nan_policy_factory: |Type_163001: Type, T: Type, V: Type, Type_163002: Type, R :> global::Dict!({?163001: ?163002}), R <: Bool, R: Type|(tuple_to_result: () -> Never, default_axis: Obj := {0}, n_samples: (global::Dict({Str: V})) -> Never := {1} and (global::Dict({Str: V})) -> Never, paired: Bool := {False} and Bool, result_to_tuple: (Never) -> Never := {None} and (Never) -> Never, too_small: R := {0} and R, n_outputs: (global::Dict({Str: V})) -> Never := {2} and (global::Dict({Str: V})) -> Never, kwd_samples: global::Iterable(T) := global::List!(Never, 0) and global::Iterable(T), override: Structural({.__or__ = (self: Never, R) -> global::List!(Never, _: Nat); .update = (self: Obj, Obj) -> Never; .__getitem__ = (self: Obj, Obj) -> Never and (self: Obj, Obj) -> R}) := {None} and Structural({.__or__ = (self: Never, R) -> global::List!(Never, _: Nat); .update = (self: Obj, Obj) -> Never; .__getitem__ = (self: Obj, Obj) -> Never and (self: Obj, Obj) -> R})) -> (hypotest_fun_in: () -> Never) -> (*args: Obj, _no_deco: Bool := Obj, **kwds := ?V) -> Never
._stats_py = pyimport "_stats_py"

.__all__: global::List!({"boschloo_exact", "epps_singleton_2samp", "cramervonmises", "somersd", "cramervonmises_2samp", "tukey_hsd", "barnard_exact", "poisson_means_test"}, 8)
.Epps_Singleton_2sampResult: Never
.epps_singleton_2samp: |R <: Structural({.__len__ = (self: Never) -> Nat})|(x: R, y: R, t: Obj := Obj) -> Never
.poisson_means_test: |R <: Structural({.__pow__ = (self: Never, ?R) -> ?R; .__add__ = (self: Never, ?R) -> ?R and (self: Never, ?R) -> ?R; .__mul__ = (self: Never, ?R) -> ?O}), R <: Structural({.__pow__ = (self: Never, ?R) -> ?R; .__mul__ = (self: Never, ?R) -> ?O}), Type_279051 :> Int, Type_279051 <: Structural({.__div__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O; .__add__ = (self: Never, ?R) -> ?O}), O: Type, R :> Int, R <: Structural({.__div__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), R <: Structural({.__mul__ = (self: Never, ?R) -> ?O}), R: Type|(k1: Type_279051, n1: R, k2: R, n2: R, diff: R := {0} and R, alternative: {"two-sided"} := {"two-sided"} and {"two-sided"}) -> Never
._poisson_means_test_iv: |R <: Structural({.__pow__ = (self: Never, ?R) -> ?R; .__add__ = (self: Never, ?R) -> ?R and (self: Never, ?R) -> ?R; .__mul__ = (self: Never, ?R) -> ?O}), R <: Structural({.__pow__ = (self: Never, ?R) -> ?R; .__mul__ = (self: Never, ?R) -> ?O}), Type_279051 :> Int, Type_279051 <: Structural({.__div__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O; .__add__ = (self: Never, ?R) -> ?O}), O: Type, R :> Int, R <: Structural({.__div__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), R <: Structural({.__mul__ = (self: Never, ?R) -> ?O}), R: Type|(k1: Type_279051, n1: R, k2: R, n2: R, diff: R, alternative: {"two-sided"}) -> NoneType
.CramerVonMisesResult: ClassType
.CramerVonMisesResult.pvalue: Never
.CramerVonMisesResult.statistic: Never
.CramerVonMisesResult.__call__: (statistic: Obj, pvalue: Obj) -> _hypotests.CramerVonMisesResult
.CramerVonMisesResult.__repr__: (self: _hypotests.CramerVonMisesResult) -> Str

._psi1_mod: (x: Obj) -> Never
._cdf_cvm_inf: (x: Obj) -> Never
._cdf_cvm: (x: Obj, n: Never := Never) -> global::Dict!(_: global::GenericDict)
._cvm_result_to_tuple: |Type_353351: Type, Type_279079 <: Structural({.pvalue = ?353352; .statistic = ?353351}), Type_353352: Type|(res: Type_279079) -> global::Tuple([Type_353351, Type_353352])
.cramervonmises: (rvs: Obj, cdf: (Obj) -> Float, args: Obj := Obj) -> _hypotests.CramerVonMisesResult
._get_wilcoxon_distr: |R: Type, Type_279086 <: Structural({.__add__ = (self: Never, ?R) -> ?O}), O: Type|(n: Type_279086) -> Never
._get_wilcoxon_distr2: |R: Type, O: Type, Type_279088 <: Structural({.__add__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?R; .__mul__ = (self: Never, ?R) -> ?O})|(n: Type_279088) -> Never
._tau_b: |K: Type, Type_353583: Type, O <: Structural({.__div__ = (self: Never, ?R) -> ?O}), Type_353592: Type, Type_279090 <: Structural({.sum = (self: Obj, axis := ?353582) -> ?353583 and (self: Obj, axis := ?353591) -> ?353592; .shape = ?Self and ?Self}), V: Type, O :> Nat, Type_353591: Type, O: Type, Type_353582: Type, R: Type, Self <: global::Indexable(?K, ?V), Self <: global::Indexable(?K, ?V)|(A: Type_279090) -> global::Tuple([O, O])
._somers_d: |Self <: global::Indexable(?K, ?V), K: Type, Type_353693: Type, V: Type, Self <: global::Indexable(?K, ?V), Type_353690: Type, O: Type, Type_279092 <: Structural({.sum = (self: Obj) -> ?353690 and (self: Obj, axis := ?353693) -> ?353694; .shape = ?Self and ?Self}), Type_353694: Type|(A: Type_279092, alternative: {"greater"} := {"two-sided"} and {"greater"}) -> global::Tuple([O, Never])
.SomersDResult: ClassType
.SomersDResult.pvalue: Float
.SomersDResult.statistic: Float
.SomersDResult.table: Never
.SomersDResult.__call__: () -> _hypotests.SomersDResult

.somersd: (x: Obj, y: Obj := Obj, alternative: {"greater"} := {"greater"}) -> Never
._all_partitions: |Type_279103 <: Structural({.__add__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), R: Type, O: Type|(nx: Type_279103, ny: R) -> NoneType
._compute_log_combinations: |Type_279106 <: Structural({.__add__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), R: Type, O: Type|(n: Type_279106) -> O
.BarnardExactResult: ClassType
.BarnardExactResult.pvalue: Float
.BarnardExactResult.statistic: Float
.BarnardExactResult.__call__: () -> _hypotests.BarnardExactResult

.barnard_exact: (table: Obj, alternative: {"two-sided"} := {"two-sided"}, pooled: Bool := Bool, n: Structural({.__le__ = (self: Never, Obj) -> Bool}) := {32} and Structural({.__le__ = (self: Never, Obj) -> Bool})) -> Never
.BoschlooExactResult: ClassType
.BoschlooExactResult.pvalue: Float
.BoschlooExactResult.statistic: Float
.BoschlooExactResult.__call__: () -> _hypotests.BoschlooExactResult

.boschloo_exact: (table: Obj, alternative: {"less"} := {"less"}, n: Structural({.__le__ = (self: Never, Obj) -> Bool}) := {32} and Structural({.__le__ = (self: Never, Obj) -> Bool})) -> Never
._get_binomial_log_p_value_with_nuisance_param: |K: Type, R <: global::Dict!(?D), V: Type, O <: Structural({.__add__ = (self: Never, ?R) -> ?O}), R <: Nat, O: Type, D: global::GenericDict, E :> {0}, E <: Structural({.shape = ?Self}), Self <: global::Indexable(?K, ?V), R: Type|(nuisance_param: R, x1_sum_x2: E, x1_sum_x2_log_comb: Structural({.__add__ = (self: Never, R) -> O}), index_arr: K) -> R
._pval_cvm_2samp_exact: |O: Type, R <: Structural({.__add__ = (self: Never, ?R) -> ?O}), K :> Int, K <: Structural({.__mul__ = (self: Never, ?R) -> Obj; .__add__ = (self: Never, ?R) -> ?R and (self: Never, ?R) -> ?R}), R: Type, R <: Nat|(s: R, m: K, n: R) -> Never
.cramervonmises_2samp: (x: Obj, y: Obj, method: Obj := Obj) -> _hypotests.CramerVonMisesResult
.TukeyHSDResult: ClassType
.TukeyHSDResult._ntreatments: Never
.TukeyHSDResult.pvalue: Never
.TukeyHSDResult._stand_err: Never
.TukeyHSDResult._ci: Never
.TukeyHSDResult._ci_cl: Never
.TukeyHSDResult._nobs: Never
.TukeyHSDResult.statistic: Never
.TukeyHSDResult.__call__: (statistic: Obj, pvalue: Obj, _nobs: Obj, _ntreatments: Obj, _stand_err: Obj) -> _hypotests.TukeyHSDResult
.TukeyHSDResult.__str__: (self: _hypotests.TukeyHSDResult) -> Str
.TukeyHSDResult.confidence_interval: (self: _hypotests.TukeyHSDResult, confidence_level: {0.95} := {0.95}) -> Never

._tukey_hsd_iv: |E: Type, T <: Structural({.size = ?355142; .ndim = ?E}), T: Type, Type_279147 :> global::List!(?T, _: Nat), Type_279147 <: Structural({.__len__ = (self: Never) -> Nat}), Type_355142: Type|(args: Type_279147) -> global::List!(T, _: Nat)
.tukey_hsd: (*args: Structural({.size = Structural({.__le__ = (self: Never, Obj) -> Bool}); .ndim = Obj})) -> _hypotests.TukeyHSDResult
