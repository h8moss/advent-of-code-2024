##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/stats/_morestats.py 1734628983 190120
.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.annotations: Never
.math = pyimport "<failure>"


.warnings = pyimport "<failure>"


.___v_desugar_2 = pyimport "<failure>"

.namedtuple: Never
.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_3 = pyimport "__init__"

.isscalar: Never
.r_: Never
.log: Never
.around: Never
.unique: Never
.asarray: Never
.zeros: Never
.arange: Never
.sort: Never
.amin: Never
.amax: Never
.sqrt: Never
.array: Never
.pi: Never
.exp: Never
.ravel: Never
.count_nonzero: Never
.optimize = pyimport "__init__"

.special = pyimport "__init__"

.interpolate = pyimport "__init__"

.stats = pyimport "__init__"


.___v_desugar_4 = pyimport "_bunch"
._bunch = pyimport "_bunch"
._make_tuple_bunch: |T <: Str, T: Type, Type_3067 :> global::Tuple([?T]), Type_3067 <: Structural({.__len__ = (self: Never) -> Nat})|(typename: Obj, field_names: Type_3067, extra_field_names: global::List(T, _: Nat) := {None} and global::List(T, _: Nat), module: Obj := {None}) -> ClassType
.___v_desugar_5 = pyimport "_util"
._util = pyimport "_util"
._rename_parameter: |R: Type|(old_name: R, new_name: R, dep_version: Never := Never) -> (fun: () -> Never) -> (*args: Obj, **kwargs := ?87617) -> Never
._contains_nan: |E :> {"raise"}|(a: Never, nan_policy: E := E, policies: Structural({.__contains__ = (self: Never, E) -> Bool}) := {None} and Structural({.__contains__ = (self: Never, E) -> Bool}), xp: Obj := {None}) -> global::Tuple([Bool, E])
._get_nan: (*data: Obj, xp: Never := Never) -> Never
.___v_desugar_6 = pyimport "_array_api"
._array_api = pyimport "_array_api"
.array_namespace: (*arrays: Obj) -> Never
.xp_minimum: (x1: Obj, x2: Obj) -> Never
.xp_size: |Type_37510: Type, Type_18633 <: Structural({.shape = ?37510 and ?37535}), Type_37535: Type|(x: Type_18633) -> Never
.xp_moveaxis_to_end: (x: Obj, source: Int, xp: Obj := Obj) -> Never
.___v_desugar_7 = pyimport "<failure>"

.gscale: Never
.swilk: Never
.___v_desugar_8 = pyimport "__init__"

._stats_py: Never
._wilcoxon: Never
.___v_desugar_9 = pyimport "_fit"
._fit = pyimport "_fit"
.FitResult: Never
.___v_desugar_10 = pyimport "_stats_py"
._stats_py = pyimport "_stats_py"
.find_repeats: (arr: Obj) -> global::Indexable(Obj, global::Iterable(Structural({.__mul__ = (self: Never, Never) -> Structural({.__sub__ = (self: Never, Obj) -> Never}) and (self: Never, Obj) -> Nat})))
._get_pvalue: |Type_277970 :> {True, False}, Type_277970 <: Bool|(statistic: Obj, distribution: Obj, alternative: Obj, symmetric: Type_277970 := Type_277970 and Type_277970, xp: global::PyModule("__init__.py") := global::PyModule("__init__.py")) -> Never
.SignificanceResult: Never
._SimpleNormal: ClassType
._SimpleChi2: ClassType
.___v_desugar_11 = pyimport "contingency"
.contingency = pyimport "contingency"
.chi2_contingency: (observed: Obj, correction: Bool := Bool, lambda_: {1} := {1}) -> Never
.___v_desugar_12 = pyimport "__init__"

.distributions: Never
.___v_desugar_13 = pyimport "_distn_infrastructure"
._distn_infrastructure = pyimport "_distn_infrastructure"
.rv_generic: Never
.___v_desugar_14 = pyimport "_axis_nan_policy"
._axis_nan_policy = pyimport "_axis_nan_policy"
._axis_nan_policy_factory: |Type_163001: Type, T: Type, V: Type, Type_163002: Type, R :> global::Dict!({?163001: ?163002}), R <: Bool, R: Type|(tuple_to_result: () -> Never, default_axis: Obj := {0}, n_samples: (global::Dict({Str: V})) -> Never := {1} and (global::Dict({Str: V})) -> Never, paired: Bool := {False} and Bool, result_to_tuple: (Never) -> Never := {None} and (Never) -> Never, too_small: R := {0} and R, n_outputs: (global::Dict({Str: V})) -> Never := {2} and (global::Dict({Str: V})) -> Never, kwd_samples: global::Iterable(T) := global::List!(Never, 0) and global::Iterable(T), override: Structural({.__or__ = (self: Never, R) -> global::List!(Never, _: Nat); .update = (self: Obj, Obj) -> Never; .__getitem__ = (self: Obj, Obj) -> Never and (self: Obj, Obj) -> R}) := {None} and Structural({.__or__ = (self: Never, R) -> global::List!(Never, _: Nat); .update = (self: Obj, Obj) -> Never; .__getitem__ = (self: Obj, Obj) -> Never and (self: Obj, Obj) -> R})) -> (hypotest_fun_in: () -> Never) -> (*args: Obj, _no_deco: Bool := Obj, **kwds := ?V) -> Never
._broadcast_arrays: (arrays: Never, axis: Obj := Obj, xp: Never := Never) -> Never
.__all__: global::List!({"shapiro", "kstatvar", "false_discovery_control", "directional_stats", "probplot", "ppcc_max", "mvsdist", "anderson_ksamp", "yeojohnson_normplot", "ansari", "levene", "anderson", "yeojohnson", "median_test", "bayes_mvs", "boxcox", "yeojohnson_normmax", "ppcc_plot", "yeojohnson_llf", "circvar", "boxcox_normplot", "boxcox_llf", "mood", "wilcoxon", "circmean", "bartlett", "circstd", "fligner", "boxcox_normmax", "kstat"}, 30)
.Mean: Never
.Variance: Never
.Std_dev: Never
.bayes_mvs: (data: Obj, alpha: Structural({.__le__ = (self: Never, Obj) -> Bool; .__ge__ = (self: Never, Obj) -> Bool}) := {0.9} and Structural({.__le__ = (self: Never, Obj) -> Bool; .__ge__ = (self: Never, Obj) -> Bool})) -> global::Tuple([Never, Never, Never])
.mvsdist: (data: Obj) -> global::Tuple([Never, Never, Never])
.kstat: (data: Obj, n: Structural({.__gt__ = (self: Never, Float) -> Bool; .__lt__ = (self: Never, Float) -> Bool}) := {2} and Structural({.__gt__ = (self: Never, Float) -> Bool; .__lt__ = (self: Never, Float) -> Bool}), axis: Obj := {None}) -> Never
.kstatvar: (data: Obj, n: {1} := {1}, axis: Obj := Obj) -> Never
._calc_uniform_order_statistic_medians: (n: Obj) -> Never
._parse_dist_kw: |Type_373398: Type|(dist: Type_373398, enforce_subclass: Bool := Bool) -> Type_373398
._add_axis_labels_title: (plot: Obj, xlabel: Obj, ylabel: Obj, title: Obj) -> Never
.probplot: |T: Type|(x: Obj, sparams: global::Iterable(T) := global::Iterable(T), dist: Never := Never, fit: Obj := Obj, plot: Obj := Obj, rvalue: Bool := Bool) -> T
.ppcc_max: |Type_373419 <: Structural({.__len__ = (self: Never) -> Nat})|(x: Type_373419, brack: Obj := Obj, dist: Obj := {"tukeylambda"}) -> Never
.ppcc_plot: |R: Type, Type_373427 <: Structural({.__le__ = (self: Never, ?R) -> Bool})|(x: Obj, a: R, b: Type_373427, dist: Never := Never, plot: Obj := {None}, N: Obj := {80}) -> global::Tuple([Never, Never])
._log_mean: |Type_373435 <: Structural({.__len__ = (self: Never) -> Nat})|(logx: Type_373435) -> Never
._log_var: |Type_373435 <: Structural({.__len__ = (self: Never) -> Nat})|(logx: Type_373435) -> Never
.boxcox_llf: (lmb: {0}, data: Obj) -> Int
._boxcox_conf_interval: (x: global::Tuple([Obj]), lmax: Never, alpha: Nat) -> global::Tuple([Never, Never])
.boxcox: |Type_379487 :> {None}|(x: Obj, lmbda: Never := Never, alpha: {None} := {None} and {None}, optimizer: Type_379487 := Type_379487 and Type_379487) -> Never
._boxcox_inv_lmbda: |Type_373454 <: Structural({.__pow__ = (self: Never, ?R) -> ?O}), R: Type, O: Type, R <: Nat|(x: Type_373454, y: R) -> Never
.Type__BigFloat: ClassType
.Type__BigFloat.__call__: () -> _morestats.Type__BigFloat
.Type__BigFloat.__repr__: (self: _morestats.Type__BigFloat) -> {"BIG_FLOAT"}

.boxcox_normmax: |Type_373460 :> {None}, Type_373466: Type|(x: Obj, brack: Type_373460 := Type_373460 and Type_373460, method: Obj := Obj, optimizer: Obj := Obj, ymax: Type_373466 := Type_373466 and Type_373466) -> Never
._normplot: |R: Type, Type_373472 <: Structural({.__le__ = (self: Never, ?R) -> Bool})|(method: Obj, x: Obj, la: R, lb: Type_373472, plot: Obj := {None}, N: Obj := {80}) -> global::Tuple([Never, global::Dict!(_: global::GenericDict)])
.boxcox_normplot: |D: global::GenericDict, R: Type, Type_373472 <: Structural({.__le__ = (self: Never, ?R) -> Bool})|(x: Obj, la: R, lb: Type_373472, plot: Obj := {None}, N: Obj := {80}) -> global::Tuple([Never, global::Dict!(?D)])
.yeojohnson: (x: Obj, lmbda: Never := Never) -> global::Tuple([Never, {Type_v_global_201416: Obj | Type_v_global_201416 != None}])
._yeojohnson_transform: |Type_380077: Type, T: Type, Type_380079: Type, Type_380078: Type, Type_373490 <: Structural({.__getitem__ = (self: Obj, ?380077) -> ?380078 and (self: Obj, ?380079) -> ?380080; .__ge__ = (self: Never, ?R) -> Bool; .dtype = ?380069 and ?T}), Type_380080: Type, R: Type, Type_380069: Type|(x: Type_373490, lmbda: {Type_v_global_201416: Obj | Type_v_global_201416 != None}) -> Never
.yeojohnson_llf: (lmb: {Type_v_global_201416: Obj | Type_v_global_201416 != None}, data: Obj) -> Never
.yeojohnson_normmax: |Type_373497 :> {None}, T: Type, R: Type, E <: Structural({.__lt__ = (self: Never, ?R) -> Bool and (self: Never, ?R) -> Bool; .dtype = ?380236 and ?T}), Type_380236: Type|(x: E, brack: Type_373497 := Type_373497 and Type_373497) -> {Type_v_global_201416: Obj | Type_v_global_201416 != None}
.yeojohnson_normplot: |D: global::GenericDict, R: Type, Type_373472 <: Structural({.__le__ = (self: Never, ?R) -> Bool})|(x: Obj, la: R, lb: Type_373472, plot: Obj := {None}, N: Obj := {80}) -> global::Tuple([Never, global::Dict!(?D)])
.ShapiroResult: Never
.shapiro: (x: Obj) -> Never
._Avals_norm: Never
._Avals_expon: Never
._Avals_gumbel: Never
._Avals_logistic: Never
._Avals_weibull: global::List!(global::List!({0.64, 0.765, 1.03, 0.728, 0.527, 0.902, 0.508, 0.32, 0.292, 0.615, 1.043, 0.298, 0.476, 0.751, 0.438, 0.869, 0.334, 0.57, 0.631, 0.85, 0.469, 0.563, 0.547, 0.49, 0.824, 0.885, 0.467, 0.395, 0.711, 0.522, 0.836, 0.559, 0.802, 0.954, 0.314, 0.448, 1.006, 0.483, 1.057, 0.498, 0.295, 0.342, 0.947, 0.931, 0.403, 0.301, 0.757, 1.167, 0.662, 0.845, 0.519, 1.125, 0.549, 1.089, 0.732, 0.856, 0.472, 0.309, 0.986, 0.623, 0.421, 0.471, 0.692, 0.941, 0.408, 1.007, 0.676, 0.414, 0.782, 0.429, 0.532, 0.65, 0.583, 0.738, 0.399, 0.719, 0.969, 0.923, 0.327, 0.636, 0.617, 0.541, 0.974, 0.879, 0.598, 0.534, 0.305}, 8), 11)
._Avals_weibull: Never
._cvals_weibull: Never
._get_As_weibull: Never
._weibull_fit_check: |Type_373520 <: Structural({.__len__ = (self: Never) -> Nat; .__sub__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), R :> {1}, R: Type, O: Type|(params: global::Indexable(Obj, Structural({.__lt__ = (self: Never, R) -> Bool})), x: Type_373520) -> global::Tuple([Never, Never, O])
.AndersonResult: Never
.anderson: (x: Obj, dist: {"norm"} := {"norm"}) -> Never
._anderson_ksamp_midrank: ||Never
._anderson_ksamp_right: |K: Type, V: Type, Self <: global::Indexable(?K, ?V), O: Type, Type_373539 <: Structural({.__sub__ = (self: Never, ?R) -> ?R; .__mul__ = (self: Never, ?R) -> ?O}), Self <: global::Indexable(?K, ?R), Self <: global::Indexable(?K, ?V), R: Type|(samples: Self, Z: Obj, Zstar: Self, k: Obj, n: Self, N: Type_373539) -> Float
.Anderson_ksampResult: Never
.anderson_ksamp: |V: Type, Type_373542 :> global::List!(?V, _: Nat), Type_373542 <: Structural({.__len__ = (self: Never) -> Nat})|(samples: Type_373542, midrank: Bool := {True} and Bool, method: Obj := {None}) -> Never
.AnsariResult: Never
.Type__ABW: ClassType
.Type__ABW.n: Never
.Type__ABW.astart: Never
.Type__ABW.m: Never
.Type__ABW.total: Never
.Type__ABW.freqs: Never
.Type__ABW.__call__: () -> _morestats.Type__ABW
.Type__ABW._recalc: |E: Type|(self: _morestats.Type__ABW, n: E, m: E) -> NoneType
.Type__ABW.pmf: |E: Type, Type_373554 <: Structural({.__sub__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(self: _morestats.Type__ABW, k: Type_373554, n: E, m: E) -> O
.Type__ABW.cdf: |E: Type, R: Type, O: Type, Type_373559 <: Structural({.__sub__ = (self: Never, ?R) -> ?O})|(self: _morestats.Type__ABW, k: Type_373559, n: E, m: E) -> O
.Type__ABW.sf: |E: Type, Type_373564 <: Structural({.__sub__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(self: _morestats.Type__ABW, k: Type_373564, n: E, m: E) -> O

_morestats = pyimport "_morestats"
._abw_state: .Type__ABW
.ansari: (x: Obj, y: Obj, alternative: {"two-sided"} := {"two-sided"}) -> Never
.BartlettResult: Never
.bartlett: (*samples: Never, axis: Int := Int) -> Never
.LeveneResult: Never
.levene: (*samples: Structural({.__len__ = (self: Never) -> Nat}), center: {"median"} := {"median"} and {"median"}, proportiontocut: Obj := {0.05}) -> Never
._apply_func: |Type_382876: Type, Type_373586 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, ?382876) -> ?382877}), Type_382877: Type|(x: Type_373586, g: Obj, func: (Type_382877) -> Never) -> Never
.FlignerResult: Never
.fligner: (*samples: Structural({.size = Obj; .__len__ = (self: Never) -> Nat}), center: {"median"} := {"median"} and {"median"}, proportiontocut: Obj := {0.05}) -> Never
._mood_inner_lc: |O <: Structural({.__div__ = (self: Never, ?R) -> ?O}), R <: Structural({.__mul__ = (self: Never, ?R) -> ?O}), R: Type, O: Type, O <: Structural({.__mul__ = (self: Never, ?R) -> ?O})|(xy: Obj, x: Obj, diffs: Obj, sorted_xy: global::Indexable(Obj, Structural({.__len__ = (self: Never) -> Nat})), n: R, m: Structural({.__mul__ = (self: Never, R) -> O and (self: Never, R) -> O}), N: Never) -> Float
._mood_too_small: (samples: global::Indexable(Obj, global::List(Type, _: Nat)), kwargs: Obj, axis: Obj := Obj) -> Never
.mood: (x: Obj, y: Obj, axis: Structural({.__lt__ = (self: Never, Float) -> Bool}) := {0} and Structural({.__lt__ = (self: Never, Float) -> Bool}), alternative: Obj := {"two-sided"}) -> Never
.WilcoxonResult: Never
.wilcoxon_result_unpacker: |Type_373617 <: Structural({.pvalue = ?383855; .statistic = ?383854}), Type_383855: Type, Type_383854: Type|(res: Type_373617) -> Never
.wilcoxon_result_object: (statistic: Obj, pvalue: Obj, zstatistic: Obj := Obj) -> Never
.wilcoxon_outputs: (kwds: global::List(Never, _: Nat) or global::GenericDict) -> {2}
.wilcoxon: (x: Obj, y: Obj := Obj, zero_method: Obj := Obj, correction: Obj := Obj, alternative: Obj := Obj, method: Obj := Obj, axis: Obj := Obj) -> Never
.MedianTestResult: Never
.median_test: (*samples: Obj, ties: {"below"} := {"below"}, correction: Bool := Bool, lambda_: {1} := {1}, nan_policy: {"raise"} := {"raise"}) -> Never
._circfuncs_common: |Type_373651 <: Structural({.__sub__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O; .dtype = ?384419}), Type_384419: Type, R: Type, O: Type|(samples: Type_373651, high: Structural({.__sub__ = (self: Never, R) -> R and (self: Never, R) -> R}), low: R, xp: Never := Never) -> global::Tuple([Type_373651, Never, Never])
.circmean: |O: Type|(samples: Never, high: Never := Never, low: Obj := Obj, axis: Obj := Obj, nan_policy: Obj := Obj) -> O
.circvar: |O :> Float|(samples: Never, high: Never := Never, low: Obj := Obj, axis: Obj := Obj, nan_policy: Obj := Obj) -> O
.circstd: (samples: Never, high: Never := Never, low: Obj := Obj, axis: Obj := Obj, nan_policy: Obj := Obj, normalize: Bool := Bool) -> Never
.DirectionalStats: ClassType
.DirectionalStats.mean_direction: Never
.DirectionalStats.mean_resultant_length: Never
.DirectionalStats.__call__: (mean_direction: Obj, mean_resultant_length: Obj) -> _morestats.DirectionalStats
.DirectionalStats.__repr__: (self: _morestats.DirectionalStats) -> Str

.directional_stats: (samples: Obj, axis: Obj := Obj, normalize: Bool := Bool) -> _morestats.DirectionalStats
.false_discovery_control: Never
