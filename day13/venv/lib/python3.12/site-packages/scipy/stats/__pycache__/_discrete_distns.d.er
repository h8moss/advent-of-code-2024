##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/stats/_discrete_distns.py 1734628983 57851
.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.partial: Never
.special = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_2 = pyimport "__init__"

.entr: Never
.logsumexp: Never
.betaln: Never
.gamln: Never
.zeta: Never
.___v_desugar_3 = pyimport "_util"
._util = pyimport "_util"
._lazywhere: (cond: Obj, arrays: Obj, f: () -> Never, fillvalue: Structural({.dtype = Ref(Obj)}) := {None} and Structural({.dtype = Ref(Obj)}), f2: () -> Never := {None} and () -> Never) -> Never
.rng_integers: |R: Type, O: Type, Type_85539 <: Structural({.__add__ = (self: Never, ?R) -> ?O})|(gen: Obj, low: Type_85539, high: Obj := {None}, size: Obj := {None}, dtype: Obj := {"int64"}, endpoint: Bool := {False} and Bool) -> Never
.___v_desugar_4 = pyimport "__init__"

.interp1d: Never
.___v_desugar_5 = pyimport "__init__"

.floor: Never
.ceil: Never
.log: Never
.exp: Never
.sqrt: Never
.log1p: Never
.expm1: Never
.tanh: Never
.cosh: Never
.sinh: Never
.np = pyimport "__init__"


.___v_desugar_6 = pyimport "_distn_infrastructure"
._distn_infrastructure = pyimport "_distn_infrastructure"
.rv_discrete: Never
.get_distribution_names: Never
._vectorize_rvs_over_shapes: Never
._ShapeInfo: Never
._isintegral: Never
.___v_desugar_7 = pyimport "<failure>"

._PyFishersNCHypergeometric: Never
._PyWalleniusNCHypergeometric: Never
._PyStochasticLib3: Never
.scu = pyimport "<failure>"


.Type_binom_gen: ClassType
.Type_binom_gen <: Never
.Type_binom_gen._shape_info: (self: _discrete_distns.Type_binom_gen) -> global::List!(Never, 2)
.Type_binom_gen._rvs: (self: _discrete_distns.Type_binom_gen, n: Obj, p: Obj, size: Obj := Obj, random_state: Obj := Obj) -> Never
.Type_binom_gen._argcheck: |Type_156391 <: Structural({.__ge__ = (self: Never, ?R) -> Bool}), R: Type, R :> {1}, R :> {0}|(self: _discrete_distns.Type_binom_gen, n: Type_156391, p: Structural({.__le__ = (self: Never, R) -> Bool; .__ge__ = (self: Never, R) -> Bool})) -> Bool
.Type_binom_gen._get_support: |Type_156408: Type|(self: _discrete_distns.Type_binom_gen, n: Type_156408, p: Obj) -> global::Tuple([Never, Type_156408])
.Type_binom_gen._logpmf: |R: Type, Type_156429 <: Structural({.__sub__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O; .__add__ = (self: Never, ?R) -> ?O}), O: Type|(self: _discrete_distns.Type_binom_gen, x: Obj, n: Type_156429, p: Structural({.__neg__ = (self: Never) -> R})) -> O
.Type_binom_gen._pmf: (self: _discrete_distns.Type_binom_gen, x: Obj, n: Obj, p: Obj) -> Never
.Type_binom_gen._cdf: (self: _discrete_distns.Type_binom_gen, x: Obj, n: Obj, p: Obj) -> Never
.Type_binom_gen._sf: (self: _discrete_distns.Type_binom_gen, x: Obj, n: Obj, p: Obj) -> Never
.Type_binom_gen._isf: (self: _discrete_distns.Type_binom_gen, x: Obj, n: Obj, p: Obj) -> Never
.Type_binom_gen._ppf: (self: _discrete_distns.Type_binom_gen, q: Obj, n: Obj, p: Obj) -> Never
.Type_binom_gen._stats: |R <: Float, R :> {"s"}, R: Type|(self: _discrete_distns.Type_binom_gen, n: R, p: Obj, moments: Structural({.__contains__ = (self: Never, R) -> Bool and (self: Never, R) -> Bool}) := {"mv"} and Structural({.__contains__ = (self: Never, R) -> Bool and (self: Never, R) -> Bool})) -> global::Tuple([Structural({.__sub__ = (self: Never, R) -> Never}), Never, {None}, {None}])
.Type_binom_gen._entropy: |R: Type, O: Type, Type_156452 <: Structural({.__add__ = (self: Never, ?R) -> ?O})|(self: _discrete_distns.Type_binom_gen, n: Type_156452, p: Obj) -> Never

.binom: Never
.Type_bernoulli_gen: ClassType
_discrete_distns = pyimport "_discrete_distns"
.Type_bernoulli_gen <: .Type_binom_gen
.Type_bernoulli_gen._shape_info: (self: _discrete_distns.Type_bernoulli_gen) -> global::List!(Never, 1)
.Type_bernoulli_gen._rvs: (self: _discrete_distns.Type_bernoulli_gen, p: Obj, size: Obj := Obj, random_state: Obj := Obj) -> Never
.Type_bernoulli_gen._argcheck: |Type_156591 <: Structural({.__le__ = (self: Never, ?R) -> Bool; .__ge__ = (self: Never, ?R) -> Bool}), R: Type|(self: _discrete_distns.Type_bernoulli_gen, p: Type_156591) -> Bool
.Type_bernoulli_gen._get_support: (self: _discrete_distns.Type_bernoulli_gen, p: Obj) -> global::Tuple([Never, Never])
.Type_bernoulli_gen._logpmf: (self: _discrete_distns.Type_bernoulli_gen, x: Obj, p: Obj) -> Never
.Type_bernoulli_gen._pmf: (self: _discrete_distns.Type_bernoulli_gen, x: Obj, p: Obj) -> Never
.Type_bernoulli_gen._cdf: (self: _discrete_distns.Type_bernoulli_gen, x: Obj, p: Obj) -> Never
.Type_bernoulli_gen._sf: (self: _discrete_distns.Type_bernoulli_gen, x: Obj, p: Obj) -> Never
.Type_bernoulli_gen._isf: (self: _discrete_distns.Type_bernoulli_gen, x: Obj, p: Obj) -> Never
.Type_bernoulli_gen._ppf: (self: _discrete_distns.Type_bernoulli_gen, q: Obj, p: Obj) -> Never
.Type_bernoulli_gen._stats: (self: _discrete_distns.Type_bernoulli_gen, p: Obj) -> Never
.Type_bernoulli_gen._entropy: (self: _discrete_distns.Type_bernoulli_gen, p: Nat) -> Never

.bernoulli: Never
.Type_betabinom_gen: ClassType
.Type_betabinom_gen <: Never
.Type_betabinom_gen._shape_info: (self: _discrete_distns.Type_betabinom_gen) -> global::List!(Never, 3)
.Type_betabinom_gen._rvs: (self: _discrete_distns.Type_betabinom_gen, n: Obj, a: Obj, b: Obj, size: Obj := Obj, random_state: Obj := Obj) -> Never
.Type_betabinom_gen._get_support: |Type_156794: Type|(self: _discrete_distns.Type_betabinom_gen, n: Type_156794, a: Obj, b: Obj) -> global::Tuple([{0}, Type_156794])
.Type_betabinom_gen._argcheck: |Type_156838 <: Structural({.__ge__ = (self: Never, ?R) -> Bool}), R: Type, R :> {0}|(self: _discrete_distns.Type_betabinom_gen, n: Type_156838, a: Structural({.__gt__ = (self: Never, R) -> Bool}), b: Structural({.__gt__ = (self: Never, R) -> Bool})) -> Bool
.Type_betabinom_gen._logpmf: |Type_156884 <: Structural({.__sub__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O; .__add__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(self: _discrete_distns.Type_betabinom_gen, x: Obj, n: Type_156884, a: R, b: R) -> O
.Type_betabinom_gen._pmf: |R: Type|(self: _discrete_distns.Type_betabinom_gen, x: Obj, n: Never, a: R, b: R) -> Never
.Type_betabinom_gen._stats: |R <: Structural({.__sub__ = (self: Never, Never) -> ?R}), R :> {"s"}, R: Type|(self: _discrete_distns.Type_betabinom_gen, n: Never, a: Never, b: R, moments: Structural({.__contains__ = (self: Never, R) -> Bool and (self: Never, R) -> Bool}) := {"mv"} and Structural({.__contains__ = (self: Never, R) -> Bool and (self: Never, R) -> Bool})) -> global::Tuple([Never, Never, {None}, {None}])

.betabinom: Never
.Type_nbinom_gen: ClassType
.Type_nbinom_gen <: Never
.Type_nbinom_gen._shape_info: (self: _discrete_distns.Type_nbinom_gen) -> global::List!(Never, 2)
.Type_nbinom_gen._rvs: (self: _discrete_distns.Type_nbinom_gen, n: Obj, p: Obj, size: Obj := Obj, random_state: Obj := Obj) -> Never
.Type_nbinom_gen._argcheck: |Type_157134 <: Structural({.__gt__ = (self: Never, ?R) -> Bool}), R :> {1}, R: Type, R :> {0}|(self: _discrete_distns.Type_nbinom_gen, n: Type_157134, p: Structural({.__le__ = (self: Never, R) -> Bool; .__gt__ = (self: Never, R) -> Bool})) -> Bool
.Type_nbinom_gen._pmf: (self: _discrete_distns.Type_nbinom_gen, x: Obj, n: Obj, p: Obj) -> Never
.Type_nbinom_gen._logpmf: |R <: Structural({.__add__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(self: _discrete_distns.Type_nbinom_gen, x: R, n: Structural({.__add__ = (self: Never, R) -> O; .__mul__ = (self: Never, R) -> R}), p: Structural({.__neg__ = (self: Never) -> R})) -> O
.Type_nbinom_gen._cdf: (self: _discrete_distns.Type_nbinom_gen, x: Obj, n: Obj, p: Obj) -> Never
.Type_nbinom_gen._logcdf: (self: _discrete_distns.Type_nbinom_gen, x: Obj, n: Obj, p: Obj) -> Structural({.__gt__ = (self: Never, Obj) -> Bool})
.Type_nbinom_gen._sf: (self: _discrete_distns.Type_nbinom_gen, x: Obj, n: Obj, p: Obj) -> Never
.Type_nbinom_gen._isf: (self: _discrete_distns.Type_nbinom_gen, x: Obj, n: Obj, p: Obj) -> NoneType
.Type_nbinom_gen._ppf: (self: _discrete_distns.Type_nbinom_gen, q: Obj, n: Obj, p: Obj) -> NoneType
.Type_nbinom_gen._stats: (self: _discrete_distns.Type_nbinom_gen, n: Obj, p: Obj) -> global::Tuple([Never, Never, Never, Never])

.nbinom: Never
.Type_betanbinom_gen: ClassType
.Type_betanbinom_gen <: Never
.Type_betanbinom_gen._shape_info: (self: _discrete_distns.Type_betanbinom_gen) -> global::List!(Never, 3)
.Type_betanbinom_gen._rvs: (self: _discrete_distns.Type_betanbinom_gen, n: Obj, a: Obj, b: Obj, size: Obj := Obj, random_state: Obj := Obj) -> Never
.Type_betanbinom_gen._argcheck: |Type_157430 <: Structural({.__ge__ = (self: Never, ?R) -> Bool}), R: Type, R :> {0}|(self: _discrete_distns.Type_betanbinom_gen, n: Type_157430, a: Structural({.__gt__ = (self: Never, R) -> Bool}), b: Structural({.__gt__ = (self: Never, R) -> Bool})) -> Bool
.Type_betanbinom_gen._logpmf: |R <: Structural({.__add__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(self: _discrete_distns.Type_betanbinom_gen, x: Obj, n: R, a: Structural({.__add__ = (self: Never, R) -> O}), b: Structural({.__add__ = (self: Never, R) -> O})) -> O
.Type_betanbinom_gen._pmf: (self: _discrete_distns.Type_betanbinom_gen, x: Obj, n: Never, a: Never, b: Never) -> Never
.Type_betanbinom_gen._stats: |R :> {"s"}, Type_157531 <: Structural({.__gt__ = (self: Never, ?R) -> Bool and (self: Never, ?R) -> Bool and (self: Never, ?R) -> Bool}), R: Type|(self: _discrete_distns.Type_betanbinom_gen, n: Obj, a: Type_157531, b: Obj, moments: Structural({.__contains__ = (self: Never, R) -> Bool and (self: Never, R) -> Bool}) := {"mv"} and Structural({.__contains__ = (self: Never, R) -> Bool and (self: Never, R) -> Bool})) -> global::Tuple([Never, Never, {None}, {None}])

.betanbinom: Never
.Type_geom_gen: ClassType
.Type_geom_gen <: Never
.Type_geom_gen._shape_info: (self: _discrete_distns.Type_geom_gen) -> global::List!(Never, 1)
.Type_geom_gen._rvs: (self: _discrete_distns.Type_geom_gen, p: Obj, size: Obj := Obj, random_state: Obj := Obj) -> Never
.Type_geom_gen._argcheck: |Type_157623 <: Structural({.__le__ = (self: Never, ?R) -> Bool; .__gt__ = (self: Never, ?R) -> Bool}), R: Type|(self: _discrete_distns.Type_geom_gen, p: Type_157623) -> Bool
.Type_geom_gen._pmf: |Type_157638 <: Structural({.__sub__ = (self: Never, ?R) -> ?O}), R: Type, O: Type, R <: Nat|(self: _discrete_distns.Type_geom_gen, k: Type_157638, p: R) -> O
.Type_geom_gen._logpmf: |Type_157654 <: Structural({.__sub__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(self: _discrete_distns.Type_geom_gen, k: Type_157654, p: Structural({.__neg__ = (self: Never) -> R})) -> O
.Type_geom_gen._cdf: |R: Type, Type_157683 <: Structural({.__neg__ = (self: Never) -> ?R})|(self: _discrete_distns.Type_geom_gen, x: Obj, p: Type_157683) -> R
.Type_geom_gen._sf: |Type_167805 <: Structural({.__neg__ = (self: Never) -> ?R}), R: Type|(self: _discrete_distns.Type_geom_gen, x: Obj, p: Type_167805) -> Never
.Type_geom_gen._logsf: |Type_167805 <: Structural({.__neg__ = (self: Never) -> ?R}), R: Type|(self: _discrete_distns.Type_geom_gen, x: Obj, p: Type_167805) -> Never
.Type_geom_gen._ppf: |R <: Structural({.__neg__ = (self: Never) -> ?R}), R: Type|(self: _discrete_distns.Type_geom_gen, q: R, p: Never) -> Never
.Type_geom_gen._stats: (self: _discrete_distns.Type_geom_gen, p: Float) -> global::Tuple([Float, Float, Float, Never])
.Type_geom_gen._entropy: (self: _discrete_distns.Type_geom_gen, p: Float) -> Never

.geom: Never
.Type_hypergeom_gen: ClassType
.Type_hypergeom_gen <: Never
.Type_hypergeom_gen._shape_info: (self: _discrete_distns.Type_hypergeom_gen) -> global::List!(Never, 3)
.Type_hypergeom_gen._rvs: |R: Type, O: Type, Type_157801 <: Structural({.__sub__ = (self: Never, ?R) -> ?O})|(self: _discrete_distns.Type_hypergeom_gen, M: Type_157801, n: R, N: Obj, size: Obj := {None}, random_state: Obj := {None}) -> Never
.Type_hypergeom_gen._get_support: |R: Type, Type_157842 <: Structural({.__sub__ = (self: Never, ?R) -> ?R})|(self: _discrete_distns.Type_hypergeom_gen, M: Type_157842, n: R, N: Structural({.__sub__ = (self: Never, R) -> Never})) -> global::Tuple([Never, Never])
.Type_hypergeom_gen._argcheck: |R: Type, R <: Structural({.__gt__ = (self: Never, ?R) -> Bool}), R :> {0}|(self: _discrete_distns.Type_hypergeom_gen, M: R, n: Structural({.__le__ = (self: Never, R) -> Bool; .__ge__ = (self: Never, R) -> Bool}), N: Structural({.__le__ = (self: Never, R) -> Bool; .__ge__ = (self: Never, R) -> Bool})) -> Bool
.Type_hypergeom_gen._logpmf: |R :> {1}, O: Type, O <: Structural({.__sub__ = (self: Never, ?R) -> ?O; .__add__ = (self: Never, ?R) -> ?O}), R <: Structural({.__sub__ = (self: Never, ?R) -> ?O; .__add__ = (self: Never, ?R) -> ?O}), R <: Structural({.__add__ = (self: Never, ?R) -> ?O}), O <: Structural({.__add__ = (self: Never, ?R) -> ?O}), R: Type, R <: Structural({.__sub__ = (self: Never, ?R) -> ?O; .__add__ = (self: Never, ?R) -> ?O})|(self: _discrete_distns.Type_hypergeom_gen, k: R, M: Structural({.__sub__ = (self: Never, R) -> O and (self: Never, R) -> O; .__add__ = (self: Never, R) -> O}), n: R, N: R) -> O
.Type_hypergeom_gen._pmf: (self: _discrete_distns.Type_hypergeom_gen, k: Obj, M: Obj, n: Obj, N: Obj) -> Never
.Type_hypergeom_gen._cdf: (self: _discrete_distns.Type_hypergeom_gen, k: Obj, M: Obj, n: Obj, N: Obj) -> Never
.Type_hypergeom_gen._stats: |O :> Float, O: Type|(self: _discrete_distns.Type_hypergeom_gen, M: O, n: Float, N: O) -> global::Tuple([Never, Never, Never, O])
.Type_hypergeom_gen._entropy: |O <: global::Ord, O <: NoneType or Int, Type_158007 <: Structural({.__sub__ = (self: Never, ?O) -> ?R}), R: Type, O <: global::Iterable(?O) and global::Ord|(self: _discrete_distns.Type_hypergeom_gen, M: Type_158007, n: O, N: Structural({.__sub__ = (self: Never, R) -> O})) -> Never
.Type_hypergeom_gen._sf: (self: _discrete_distns.Type_hypergeom_gen, k: Obj, M: Obj, n: Obj, N: Obj) -> Never
.Type_hypergeom_gen._logsf: (self: _discrete_distns.Type_hypergeom_gen, k: Obj, M: Obj, n: Obj, N: Obj) -> Never
.Type_hypergeom_gen._logcdf: (self: _discrete_distns.Type_hypergeom_gen, k: Obj, M: Obj, n: Obj, N: Obj) -> Never

.hypergeom: Never
.Type_nhypergeom_gen: ClassType
.Type_nhypergeom_gen <: Never
.Type_nhypergeom_gen._shape_info: (self: _discrete_distns.Type_nhypergeom_gen) -> global::List!(Never, 3)
.Type_nhypergeom_gen._get_support: |Type_158076: Type|(self: _discrete_distns.Type_nhypergeom_gen, M: Obj, n: Type_158076, r: Obj) -> global::Tuple([{0}, Type_158076])
.Type_nhypergeom_gen._argcheck: |R <: Structural({.__le__ = (self: Never, ?R) -> Bool; .__ge__ = (self: Never, ?R) -> Bool}), R: Type, R :> {0}, R <: Structural({.__sub__ = (self: Never, ?R) -> ?R})|(self: _discrete_distns.Type_nhypergeom_gen, M: R, n: R, r: Structural({.__le__ = (self: Never, R) -> Bool; .__ge__ = (self: Never, R) -> Bool})) -> Bool
.Type_nhypergeom_gen._rvs: (self: _discrete_distns.Type_nhypergeom_gen, M: Obj, n: Obj, r: Obj, size: Obj := Obj, random_state: Obj := Obj) -> Never
.Type_nhypergeom_gen._logpmf: |R <: Structural({.__sub__ = (self: Never, ?R) -> ?O; .__add__ = (self: Never, ?R) -> ?O}), R :> {0}, R <: Nat, Type_158123 <: Structural({.__sub__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O; .__add__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(self: _discrete_distns.Type_nhypergeom_gen, k: {0}, M: Type_158123, n: R, r: R) -> Never
.Type_nhypergeom_gen._pmf: |R :> {0}, R <: Nat|(self: _discrete_distns.Type_nhypergeom_gen, k: {0}, M: Never, n: R, r: R) -> Never
.Type_nhypergeom_gen._stats: |O :> Float|(self: _discrete_distns.Type_nhypergeom_gen, M: O, n: Float, r: Float) -> global::Tuple([O, O, {None}, {None}])

.nhypergeom: Never
.Type_logser_gen: ClassType
.Type_logser_gen <: Never
.Type_logser_gen._shape_info: (self: _discrete_distns.Type_logser_gen) -> global::List!(Never, 1)
.Type_logser_gen._rvs: (self: _discrete_distns.Type_logser_gen, p: Obj, size: Obj := Obj, random_state: Obj := Obj) -> Never
.Type_logser_gen._argcheck: |R: Type, Type_158205 <: Structural({.__gt__ = (self: Never, ?R) -> Bool; .__lt__ = (self: Never, ?R) -> Bool})|(self: _discrete_distns.Type_logser_gen, p: Type_158205) -> Bool
.Type_logser_gen._pmf: |R: Type, Type_158217 <: Structural({.__neg__ = (self: Never) -> ?R})|(self: _discrete_distns.Type_logser_gen, k: R, p: Type_158217) -> Never
.Type_logser_gen._stats: (self: _discrete_distns.Type_logser_gen, p: Never) -> global::Tuple([Never, Structural({.__pow__ = (self: Never, Obj) -> Never}), Never, Never])

.logser: Never
.Type_poisson_gen: ClassType
.Type_poisson_gen <: Never
.Type_poisson_gen._shape_info: (self: _discrete_distns.Type_poisson_gen) -> global::List!(Never, 1)
.Type_poisson_gen._argcheck: |R: Type, Type_158245 <: Structural({.__ge__ = (self: Never, ?R) -> Bool})|(self: _discrete_distns.Type_poisson_gen, mu: Type_158245) -> {mu in {Type_v_global_94574: Nat | Type_v_global_94574 >= 0}}
.Type_poisson_gen._rvs: (self: _discrete_distns.Type_poisson_gen, mu: Obj, size: Obj := Obj, random_state: Obj := Obj) -> Never
.Type_poisson_gen._logpmf: ||Never
.Type_poisson_gen._pmf: (self: _discrete_distns.Type_poisson_gen, k: Never, mu: Obj) -> Never
.Type_poisson_gen._cdf: (self: _discrete_distns.Type_poisson_gen, x: Obj, mu: Obj) -> Never
.Type_poisson_gen._sf: (self: _discrete_distns.Type_poisson_gen, x: Obj, mu: Obj) -> Never
.Type_poisson_gen._ppf: (self: _discrete_distns.Type_poisson_gen, q: Obj, mu: Obj) -> Never
.Type_poisson_gen._stats: |Type_158344: Type|(self: _discrete_distns.Type_poisson_gen, mu: Type_158344) -> global::Tuple([Type_158344, Type_158344, Never, Never])

.poisson: Never
.Type_planck_gen: ClassType
.Type_planck_gen <: Never
.Type_planck_gen._shape_info: (self: _discrete_distns.Type_planck_gen) -> global::List!(Never, 1)
.Type_planck_gen._argcheck: |R: Type, Type_158369 <: Structural({.__gt__ = (self: Never, ?R) -> Bool})|(self: _discrete_distns.Type_planck_gen, lambda_: Type_158369) -> {lambda_ in {Type_v_global_94659: Nat | (Type_v_global_94659 == 0 or (Type_v_global_94659 >= 0) and (Type_v_global_94659 != 0))}}
.Type_planck_gen._pmf: |R: Type, O: Type, Type_158374 <: Structural({.__neg__ = (self: Never) -> ?R and (self: Never) -> ?R})|(self: _discrete_distns.Type_planck_gen, k: R, lambda_: Type_158374) -> O
.Type_planck_gen._cdf: |Type_158390 <: Structural({.__neg__ = (self: Never) -> ?R}), R: Type|(self: _discrete_distns.Type_planck_gen, x: Obj, lambda_: Type_158390) -> R
.Type_planck_gen._sf: |Type_171493 <: Structural({.__neg__ = (self: Never) -> ?R}), R: Type|(self: _discrete_distns.Type_planck_gen, x: Obj, lambda_: Type_171493) -> Never
.Type_planck_gen._logsf: |Type_171493 <: Structural({.__neg__ = (self: Never) -> ?R}), R: Type, Type_158403: Type|(self: _discrete_distns.Type_planck_gen, x: Obj, lambda_: Type_171493) -> Type_158403
.Type_planck_gen._ppf: |R <: Structural({.__neg__ = (self: Never) -> ?R}), Type_156630: Type, Type_156476: Type, R: Type, R <: ?Type_156630 or ?Type_156476|(self: Never, q: R, lambda_: R) -> Never
.Type_planck_gen._rvs: |R: Type, Type_158421 <: Structural({.__neg__ = (self: Never) -> ?R})|(self: _discrete_distns.Type_planck_gen, lambda_: Type_158421, size: Obj := {None}, random_state: Obj := {None}) -> Never
.Type_planck_gen._stats: |O :> Nat, O :> Float, R: Type, Type_158454 <: Structural({.__div__ = (self: Never, ?R) -> ?O; .__neg__ = (self: Never) -> ?R and (self: Never) -> ?R}), O: Type|(self: _discrete_distns.Type_planck_gen, lambda_: Type_158454) -> global::Tuple([O, O, O, O])
.Type_planck_gen._entropy: |Type_158484 <: Structural({.__mul__ = (self: Never, ?R) -> ?O; .__neg__ = (self: Never) -> ?R and (self: Never) -> ?R}), R: Type, O: Type|(self: _discrete_distns.Type_planck_gen, lambda_: Type_158484) -> O

.planck: Never
.Type_boltzmann_gen: ClassType
.Type_boltzmann_gen <: Never
.Type_boltzmann_gen._shape_info: (self: _discrete_distns.Type_boltzmann_gen) -> global::List!(Never, 2)
.Type_boltzmann_gen._argcheck: |Type_158510 <: Structural({.__gt__ = (self: Never, ?R) -> Bool}), R: Type, R :> {0}|(self: _discrete_distns.Type_boltzmann_gen, lambda_: Type_158510, N: Structural({.__gt__ = (self: Never, R) -> Bool})) -> Bool
.Type_boltzmann_gen._get_support: |R: Type, O: Type, Type_158519 <: Structural({.__sub__ = (self: Never, ?R) -> ?O})|(self: _discrete_distns.Type_boltzmann_gen, lambda_: Obj, N: Type_158519) -> global::Tuple([Never, O])
.Type_boltzmann_gen._pmf: |O :> Float, R: Type, Type_158529 <: Structural({.__neg__ = (self: Never) -> ?R and (self: Never) -> ?R})|(self: _discrete_distns.Type_boltzmann_gen, k: R, lambda_: Type_158529, N: R) -> O
.Type_boltzmann_gen._cdf: |O :> Float, R: Type, Type_158543 <: Structural({.__neg__ = (self: Never) -> ?R and (self: Never) -> ?R})|(self: _discrete_distns.Type_boltzmann_gen, x: Obj, lambda_: Type_158543, N: R) -> O
.Type_boltzmann_gen._ppf: |R: Type, R <: Structural({.__mul__ = (self: Never, ?R) -> ?R})|(self: _discrete_distns.Type_boltzmann_gen, q: R, lambda_: Float, N: Float) -> Never
.Type_boltzmann_gen._stats: |Type_158586 <: Structural({.__neg__ = (self: Never) -> ?R and (self: Never) -> ?R}), R <: Structural({.__pow__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O; .__mul__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), R: Type, O: Type|(self: _discrete_distns.Type_boltzmann_gen, lambda_: Type_158586, N: R) -> global::Tuple([O, O, O, O])

.boltzmann: Never
.Type_randint_gen: ClassType
.Type_randint_gen <: Never
.Type_randint_gen._shape_info: (self: _discrete_distns.Type_randint_gen) -> global::List!(Never, 2)
.Type_randint_gen._argcheck: |R: Type, Type_158610 <: Structural({.__gt__ = (self: Never, ?R) -> Bool})|(self: _discrete_distns.Type_randint_gen, low: R, high: Type_158610) -> Bool
.Type_randint_gen._get_support: |Type_158618 <: Structural({.__sub__ = (self: Never, ?R) -> ?O}), Type_158613: Type, R: Type, O: Type|(self: _discrete_distns.Type_randint_gen, low: Type_158613, high: Type_158618) -> global::Tuple([Type_158613, O])
.Type_randint_gen._pmf: |Type_158623 <: Structural({.__ge__ = (self: Never, ?R) -> Bool; .__lt__ = (self: Never, ?R) -> Bool}), R <: Structural({.__sub__ = (self: Never, ?R) -> ?R}), R: Type|(self: _discrete_distns.Type_randint_gen, k: Type_158623, low: R, high: R) -> Never
.Type_randint_gen._cdf: |R: Type, Type_158640 <: Structural({.__sub__ = (self: Never, ?R) -> ?R})|(self: _discrete_distns.Type_randint_gen, x: Obj, low: R, high: Type_158640) -> Never
.Type_randint_gen._ppf: |R <: Structural({.__mul__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(self: _discrete_distns.Type_randint_gen, q: R, low: R, high: Never) -> Never
.Type_randint_gen._stats: (self: _discrete_distns.Type_randint_gen, low: Obj, high: Obj) -> global::Tuple([Never, Never, {0.0}, Float])
.Type_randint_gen._rvs: |R: Type, O: Type, Type_85539 <: Structural({.__add__ = (self: Never, ?R) -> ?O})|(self: _discrete_distns.Type_randint_gen, low: Type_85539, high: Obj, size: Obj := {None}, random_state: Obj := {None}) -> Never
.Type_randint_gen._entropy: |Type_158722 <: Structural({.__sub__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(self: _discrete_distns.Type_randint_gen, low: R, high: Type_158722) -> Never

.randint: Never
.Type_zipf_gen: ClassType
.Type_zipf_gen <: Never
.Type_zipf_gen._shape_info: (self: _discrete_distns.Type_zipf_gen) -> global::List!(Never, 1)
.Type_zipf_gen._rvs: (self: _discrete_distns.Type_zipf_gen, a: Obj, size: Obj := Obj, random_state: Obj := Obj) -> Never
.Type_zipf_gen._argcheck: |R: Type, Type_158756 <: Structural({.__gt__ = (self: Never, ?R) -> Bool})|(self: _discrete_distns.Type_zipf_gen, a: Type_158756) -> {a in {Type_v_global_95501: Nat | ((Type_v_global_95501 >= 1) and (Type_v_global_95501 != 1) or Type_v_global_95501 == 1)}}
.Type_zipf_gen._pmf: ||Never
.Type_zipf_gen._munp: |R <: Structural({.__add__ = (self: Never, ?R) -> ?R}), R: Type|(self: _discrete_distns.Type_zipf_gen, n: R, a: Structural({.__sub__ = (self: Never, R) -> Never; .__gt__ = (self: Never, R) -> Bool})) -> Never

.zipf: Never
._gen_harmonic_gt1: |Type_158790 <: Structural({.__add__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(n: Type_158790, a: Obj) -> O
._gen_harmonic_leq1: (n: Obj, a: Obj) -> Never
._gen_harmonic: (n: Obj, a: Obj) -> Never
.Type_zipfian_gen: ClassType
.Type_zipfian_gen <: Never
.Type_zipfian_gen._shape_info: (self: _discrete_distns.Type_zipfian_gen) -> global::List!(Never, 2)
.Type_zipfian_gen._argcheck: |Type_158822 <: Structural({.__ge__ = (self: Never, ?R) -> Bool}), R: Type, R :> {0}|(self: _discrete_distns.Type_zipfian_gen, a: Type_158822, n: Structural({.__gt__ = (self: Never, R) -> Bool})) -> Bool
.Type_zipfian_gen._get_support: |Type_158830: Type|(self: _discrete_distns.Type_zipfian_gen, a: Obj, n: Type_158830) -> global::Tuple([{1}, Type_158830])
.Type_zipfian_gen._pmf: |R: Type, Type_158801 <: Structural({.__neg__ = (self: Never) -> ?R})|(self: _discrete_distns.Type_zipfian_gen, k: Obj, a: Type_158801, n: Obj) -> Float
.Type_zipfian_gen._cdf: |Type_158800: Type|(self: _discrete_distns.Type_zipfian_gen, k: Type_158800, a: Obj, n: Type_158800) -> Never
.Type_zipfian_gen._sf: |Type_158801: Type, Type_158800 <: Structural({.__pow__ = (self: Never, ?Type_158801) -> ?O and (self: Never, ?Type_158801) -> ?O; .__add__ = (self: Never, ?R) -> ?Type_158800}), Type_158800: Type, O: Type, R: Type|(self: _discrete_distns.Type_zipfian_gen, k: Type_158800, a: Type_158801, n: Type_158800) -> O
.Type_zipfian_gen._stats: |Type_158801: Type, Type_158801 <: Structural({.__sub__ = (self: Never, ?R) -> ?Type_158801 and (self: Never, ?R) -> ?Type_158801 and (self: Never, ?R) -> ?Type_158801 and (self: Never, ?R) -> ?Type_158801}), R :> Float, R: Type|(self: _discrete_distns.Type_zipfian_gen, a: Type_158801, n: Obj) -> global::Tuple([Never, Structural({.__pow__ = (self: Never, R) -> R}), Never, Never])

.zipfian: Never
.Type_dlaplace_gen: ClassType
.Type_dlaplace_gen <: Never
.Type_dlaplace_gen._shape_info: (self: _discrete_distns.Type_dlaplace_gen) -> global::List!(Never, 1)
.Type_dlaplace_gen._pmf: |Type_158920 <: Structural({.__div__ = (self: Never, ?R) -> ?O; .__neg__ = (self: Never) -> ?R}), R: Type, O: Type|(self: _discrete_distns.Type_dlaplace_gen, k: global::Num, a: Type_158920) -> O
.Type_dlaplace_gen._cdf: (self: _discrete_distns.Type_dlaplace_gen, x: Obj, a: Obj) -> Never
.Type_dlaplace_gen._ppf: |Type_158934 <: Structural({.__neg__ = (self: Never) -> ?R}), R: Type, R <: Nat|(self: _discrete_distns.Type_dlaplace_gen, q: R, a: Type_158934) -> Never
.Type_dlaplace_gen._stats: (self: _discrete_distns.Type_dlaplace_gen, a: Obj) -> global::Tuple([{0.0}, Float, {0.0}, Float])
.Type_dlaplace_gen._entropy: |Type_158965 <: Structural({.__div__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O}), R: Type, O: Type|(self: _discrete_distns.Type_dlaplace_gen, a: Type_158965) -> O
.Type_dlaplace_gen._rvs: (self: _discrete_distns.Type_dlaplace_gen, a: Obj, size: Obj := Obj, random_state: Obj := Obj) -> Never

.dlaplace: Never
.Type_skellam_gen: ClassType
.Type_skellam_gen <: Never
.Type_skellam_gen._shape_info: (self: _discrete_distns.Type_skellam_gen) -> global::List!(Never, 2)
.Type_skellam_gen._rvs: (self: _discrete_distns.Type_skellam_gen, mu1: Obj, mu2: Obj, size: Obj := Obj, random_state: Obj := Obj) -> Never
.Type_skellam_gen._pmf: |R <: Nat|(self: _discrete_distns.Type_skellam_gen, x: R, mu1: R, mu2: R) -> Never
.Type_skellam_gen._cdf: |R <: Nat|(self: _discrete_distns.Type_skellam_gen, x: Obj, mu1: R, mu2: R) -> Never
.Type_skellam_gen._stats: |Type_159116 <: Structural({.__sub__ = (self: Never, ?R) -> ?O; .__add__ = (self: Never, ?R) -> Never}), O :> Float, R: Type, O: Type, O <: Structural({.__div__ = (self: Never, ?R) -> ?O})|(self: _discrete_distns.Type_skellam_gen, mu1: Type_159116, mu2: R) -> global::Tuple([O, Never, O, O])

.skellam: Never
.Type_yulesimon_gen: ClassType
.Type_yulesimon_gen <: Never
.Type_yulesimon_gen._shape_info: (self: _discrete_distns.Type_yulesimon_gen) -> global::List!(Never, 1)
.Type_yulesimon_gen._rvs: (self: _discrete_distns.Type_yulesimon_gen, alpha: Obj, size: Obj := Obj, random_state: Obj := Obj) -> Never
.Type_yulesimon_gen._pmf: |Type_159264 <: Structural({.__add__ = (self: Never, ?R) -> ?O; .__mul__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(self: _discrete_distns.Type_yulesimon_gen, x: Obj, alpha: Type_159264) -> O
.Type_yulesimon_gen._argcheck: |R: Type, Type_159273 <: Structural({.__gt__ = (self: Never, ?R) -> Bool})|(self: _discrete_distns.Type_yulesimon_gen, alpha: Type_159273) -> {alpha in {Type_v_global_96395: Nat | (Type_v_global_96395 == 0 or (Type_v_global_96395 >= 0) and (Type_v_global_96395 != 0))}}
.Type_yulesimon_gen._logpmf: |Type_159282 <: Structural({.__add__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(self: _discrete_distns.Type_yulesimon_gen, x: Obj, alpha: Type_159282) -> O
.Type_yulesimon_gen._cdf: |O :> Int, R :> {1}, Type_159286 <: Structural({.__mul__ = (self: Never, ?R) -> ?R}), R: Type, O: Type|(self: _discrete_distns.Type_yulesimon_gen, x: Type_159286, alpha: Structural({.__add__ = (self: Never, R) -> O})) -> O
.Type_yulesimon_gen._sf: |R :> {1}, R: Type, Type_159299 <: Structural({.__mul__ = (self: Never, ?R) -> ?O}), O: Type|(self: _discrete_distns.Type_yulesimon_gen, x: Type_159299, alpha: Structural({.__add__ = (self: Never, R) -> O})) -> O
.Type_yulesimon_gen._logsf: |Type_159313 <: Structural({.__add__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(self: _discrete_distns.Type_yulesimon_gen, x: Obj, alpha: Type_159313) -> O
.Type_yulesimon_gen._stats: (self: _discrete_distns.Type_yulesimon_gen, alpha: Never) -> global::Tuple([Never, Never, Never, Never])

.yulesimon: Never
.Type__nchypergeom_gen: ClassType
.Type__nchypergeom_gen <: Never
.Type__nchypergeom_gen.rvs_name: {None}
.Type__nchypergeom_gen.dist: {None}
.Type__nchypergeom_gen._shape_info: (self: _discrete_distns.Type__nchypergeom_gen) -> global::List!(Never, 4)
.Type__nchypergeom_gen._get_support: |Type_159348: Type|(self: _discrete_distns.Type__nchypergeom_gen, M: Type_159348, n: Obj, N: Type_159348, odds: Obj) -> global::Tuple([Never, Never])
.Type__nchypergeom_gen._argcheck: (self: _discrete_distns.Type__nchypergeom_gen, M: Obj, n: Obj, N: Obj, odds: Obj) -> Bool
.Type__nchypergeom_gen._rvs: (self: _discrete_distns.Type__nchypergeom_gen, M: Obj, n: Obj, N: Obj, odds: Obj, size: Obj := Obj, random_state: Obj := Obj) -> Never
.Type__nchypergeom_gen._pmf: (self: _discrete_distns.Type__nchypergeom_gen, x: Obj, M: Obj, n: Obj, N: Obj, odds: Obj) -> Never
.Type__nchypergeom_gen._stats: |Type_159426 <: Structural({.__contains__ = (self: Never, ?R) -> Bool and (self: Never, ?R) -> Bool}), R: Type|(self: _discrete_distns.Type__nchypergeom_gen, M: Obj, n: Obj, N: Obj, odds: Obj, moments: Type_159426) -> global::Tuple([{None}, {None}, {None}, {None}])

.Type_nchypergeom_fisher_gen: ClassType
.Type_nchypergeom_fisher_gen <: .Type__nchypergeom_gen
.Type_nchypergeom_fisher_gen.rvs_name: {"rvs_fisher"}
.Type_nchypergeom_fisher_gen.dist: Never

.nchypergeom_fisher: Never
.Type_nchypergeom_wallenius_gen: ClassType
.Type_nchypergeom_wallenius_gen <: .Type__nchypergeom_gen
.Type_nchypergeom_wallenius_gen.rvs_name: {"rvs_wallenius"}
.Type_nchypergeom_wallenius_gen.dist: Never

.nchypergeom_wallenius: Never
.pairs: global::List!(global::Tuple([Str, Obj]), _: Nat)
.___v_global_9352: Never
._distn_names: Never
._distn_gen_names: Never

.__all__: Never
