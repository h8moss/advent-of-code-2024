##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/stats/_binomtest.py 1734628983 13118
.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.sqrt: Never
.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_2 = pyimport "_util"
._util = pyimport "_util"
._validate_int: |Type_85448 <: Structural({.__lt__ = (self: Never, ?R) -> Bool}), R: Type|(k: Type_85448, name: Obj, minimum: R := {None} and R) -> Type_85448
.___v_desugar_3 = pyimport "__init__"

.brentq: |R: Type, R :> {0}|(f: (x: Obj, *args: Obj) -> Never, a: Obj, b: Obj, args: global::Tuple([global::Tuple([Obj])]) := global::Tuple([global::Tuple([Obj])]), xtol: Structural({.__le__ = (self: Never, R) -> Bool}) := {0.0} and Structural({.__le__ = (self: Never, R) -> Bool}), rtol: Structural({.__lt__ = (self: Never, R) -> Bool}) := Structural({.__lt__ = (self: Never, R) -> Bool}), maxiter: Obj := {100}, full_output: Bool := {False} and Bool, disp: Obj := {True}) -> Never
.___v_desugar_4 = pyimport "__init__"

.ndtri: Never
.___v_desugar_5 = pyimport "_discrete_distns"
._discrete_distns = pyimport "_discrete_distns"
.binom: Never
.___v_desugar_6 = pyimport "_common"
._common = pyimport "_common"
.ConfidenceInterval: Never
.BinomTestResult: ClassType
.BinomTestResult.proportion_estimate: Never
.BinomTestResult.pvalue: Never
.BinomTestResult.alternative: Never
.BinomTestResult.n: Never
.BinomTestResult.statistic: Never
.BinomTestResult.k: Never
.BinomTestResult.__call__: (k: Obj, n: Obj, alternative: Obj, statistic: Obj, pvalue: Obj) -> _binomtest.BinomTestResult
.BinomTestResult.__repr__: (self: _binomtest.BinomTestResult) -> Str
.BinomTestResult.proportion_ci: (self: _binomtest.BinomTestResult, confidence_level: Float := Float, method: {"exact"} := {"exact"}) -> Never

._findp: (func: (x: Obj, *args: Obj) -> Never) -> Never
._binom_exact_conf_int: (k: {0}, n: Obj, confidence_level: Nat, alternative: {"two-sided"}) -> global::Tuple([{0.0}, {1.0}])
._binom_wilson_conf_int: |R: Type, E :> {0}, E <: Structural({.__div__ = (self: Never, Obj) -> ?R}), R <: Nat|(k: E, n: Obj, confidence_level: R, alternative: {"two-sided"}, correction: {method in {"wilsoncc"}}) -> global::Tuple([Float, Float])
.binomtest: (k: Float, n: Obj, p: Obj := Obj, alternative: {"less"} := {"less"}) -> _binomtest.BinomTestResult
._binary_search_for_binom_tst: (a: (x1: Obj) -> Obj, d: Obj, lo: {0}, hi: Obj) -> Never
