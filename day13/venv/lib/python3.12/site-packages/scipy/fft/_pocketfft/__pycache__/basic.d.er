##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/fft/_pocketfft/basic.py 1734628983 8138

.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.functools = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.___v_desugar_1 = pyimport "__init__"

.pfft: Never
.___v_desugar_2 = pyimport "helper"
.helper = pyimport "helper"
._asfarray: Never
._init_nd_shape_and_axes: Never
._datacopied: Never
._fix_shape: Never
._fix_shape_1d: Never
._normalization: Never
._workers: Never
.c2c: |R :> {.tmp.dtype.kind in {"c"}}, R :> Int, R: Type|(forward: Obj, x: Obj, n: Obj := Obj, axis: Obj := R, norm: Obj := Obj, overwrite_x: Structural({.__or__ = (self: Never, R) -> Structural({.__or__ = (self: Never, R) -> Never and (self: Never, R) -> Never; .__and__ = (self: Never, R) -> Bool}) and (self: Never, R) -> Structural({.__or__ = (self: Never, R) -> Never and (self: Never, R) -> Never; .__and__ = (self: Never, R) -> Bool}); .__and__ = (self: Never, R) -> Bool}) := {False} and Structural({.__or__ = (self: Never, R) -> Structural({.__or__ = (self: Never, R) -> Never and (self: Never, R) -> Never; .__and__ = (self: Never, R) -> Bool}) and (self: Never, R) -> Structural({.__or__ = (self: Never, R) -> Never and (self: Never, R) -> Never; .__and__ = (self: Never, R) -> Bool}); .__and__ = (self: Never, R) -> Bool}), workers: Obj := {None}, plan: Obj := {None}) -> Never
.fft: Never

.ifft: Never

.r2c: (forward: Obj, x: Obj, n: Obj := Obj, axis: Obj := Obj, norm: Obj := Obj, overwrite_x: Obj := Obj, workers: Obj := Obj, plan: Obj := Obj) -> Never
.rfft: Never

.ihfft: Never

.c2r: (forward: Obj, x: Obj, n: Never := Never, axis: Obj := Obj, norm: Obj := Obj, overwrite_x: Obj := Obj, workers: Obj := Obj, plan: Obj := Obj) -> Never
.hfft: Never

.irfft: Never

.hfft2: (x: Obj, s: Obj := Obj, axes: Obj := Obj, norm: Obj := Obj, overwrite_x: Obj := Obj, workers: Obj := Obj, plan: Obj := Obj) -> Never
.ihfft2: (x: Obj, s: Obj := Obj, axes: Obj := Obj, norm: Obj := Obj, overwrite_x: Obj := Obj, workers: Obj := Obj, plan: Obj := Obj) -> Never
.c2cn: (forward: Obj, x: Obj, s: Obj := Obj, axes: Obj := Obj, norm: Obj := Obj, overwrite_x: Structural({.__or__ = (self: Never, Obj) -> Structural({.__or__ = (self: Never, Obj) -> Never; .__and__ = (self: Never, Obj) -> Bool}); .__and__ = (self: Never, Obj) -> Bool}) := {False} and Structural({.__or__ = (self: Never, Obj) -> Structural({.__or__ = (self: Never, Obj) -> Never; .__and__ = (self: Never, Obj) -> Bool}); .__and__ = (self: Never, Obj) -> Bool}), workers: Obj := {None}, plan: Obj := {None}) -> Never
.fftn: Never

.ifftn: Never

.r2cn: (forward: Obj, x: Obj, s: Obj := Obj, axes: Obj := Obj, norm: Obj := Obj, overwrite_x: Obj := Obj, workers: Obj := Obj, plan: Obj := Obj) -> Never
.rfftn: Never

.ihfftn: Never

.c2rn: |K: Type, Self <: global::Indexable(?K, ?V), V: Type, Type_157207 <: Structural({.shape = ?Self})|(forward: Obj, x: Type_157207, s: Obj := Obj, axes: Obj := Obj, norm: Obj := Obj, overwrite_x: Obj := Obj, workers: Obj := Obj, plan: Obj := Obj) -> Never
.hfftn: Never

.irfftn: Never

.r2r_fftpack: |R: Type, R :> Int|(forward: Obj, x: Obj, n: Obj := Obj, axis: Obj := R, norm: Obj := Obj, overwrite_x: Structural({.__or__ = (self: Never, R) -> Structural({.__or__ = (self: Never, R) -> Never and (self: Never, R) -> Never}) and (self: Never, R) -> Structural({.__or__ = (self: Never, R) -> Never and (self: Never, R) -> Never})}) := {False} and Structural({.__or__ = (self: Never, R) -> Structural({.__or__ = (self: Never, R) -> Never and (self: Never, R) -> Never}) and (self: Never, R) -> Structural({.__or__ = (self: Never, R) -> Never and (self: Never, R) -> Never})})) -> Never
.rfft_fftpack: Never

.irfft_fftpack: Never

