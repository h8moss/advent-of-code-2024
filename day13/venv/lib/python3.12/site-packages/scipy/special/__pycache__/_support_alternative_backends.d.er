##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/special/_support_alternative_backends.py 1734628983 4389
.os = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.sys = pyimport "<failure>"


.functools = pyimport "<failure>"


.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.scipy = pyimport "__init__"


.___v_desugar_1 = pyimport "_array_api"
._array_api = pyimport "_array_api"
.array_namespace: (*arrays: Obj) -> Never
.scipy_namespace_for: (xp: Obj) -> Never
.is_numpy: (xp: Obj) -> Bool
.is_torch: (xp: Obj) -> Bool
.___v_desugar_2 = pyimport "__init__"

._ufuncs: Never
.___v_desugar_3 = pyimport "<failure>"

.log_ndtr: Never
.ndtr: Never
.ndtri: Never
.erf: Never
.erfc: Never
.i0: Never
.i0e: Never
.i1: Never
.i1e: Never
.gammaln: Never
.gammainc: Never
.gammaincc: Never
.logit: Never
.expit: Never
.entr: Never
.rel_entr: Never
.xlogy: Never
.chdtrc: Never
._SCIPY_ARRAY_API: Never
.array_api_compat_prefix: {"scipy._lib.array_api_compat"}
.get_array_special_func: |Type_127016 <: Structural({.special = ?127096}), Type_127096: Type|(f_name: Str, xp: Type_127016, n_array_args: Obj) -> {None}
._get_shape_dtype: (xp: Obj, *args: Obj) -> global::Tuple([Never, Never, Never])
._rel_entr: |Type_127022: Type, Type_127019: Type|(xp: Type_127022, spx: Obj) -> |Type_127019: Type|(x: Type_127019, y: Obj, xp: Type_127019 := Obj) -> Never
._xlogy: |Type_127025: Type, R: Type, E :> {0.0}, E <: Structural({.__mul__ = (self: Never, ?R) -> ?O}), O: Type|(xp: Type_127025, spx: Obj) -> |R: Type, E :> {0.0}, E <: Structural({.__mul__ = (self: Never, ?R) -> ?O}), O: Type|(x: E, y: Obj, xp: Obj := Obj) -> Never
._chdtrc: (xp: Obj, spx: Obj) -> |E :> {0}, E <: Structural({.__div__ = (self: Never, ?R) -> ?O}), E :> {0}, E <: Structural({.__div__ = (self: Never, ?R) -> ?O; .__ge__ = (self: Never, ?R) -> Bool}), R: Type, O: Type|(v: E, x: E) -> Never
._generic_implementations: global::Dict!({{"xlogy"}: |Type_127025: Type, R: Type, E :> {0.0}, E <: Structural({.__mul__ = (self: Never, ?R) -> ?O}), O: Type|(xp: Type_127025, spx: Obj) -> |R: Type, E :> {0.0}, E <: Structural({.__mul__ = (self: Never, ?R) -> ?O}), O: Type|(x: E, y: Obj, xp: Obj := Obj) -> Never, {"chdtrc"}: (xp: Obj, spx: Obj) -> |E :> {0}, E <: Structural({.__div__ = (self: Never, ?R) -> ?O}), E :> {0}, E <: Structural({.__div__ = (self: Never, ?R) -> ?O; .__ge__ = (self: Never, ?R) -> Bool}), R: Type, O: Type|(v: E, x: E) -> Never, {"rel_entr"}: |Type_127022: Type, Type_127019: Type|(xp: Type_127022, spx: Obj) -> |Type_127019: Type|(x: Type_127019, y: Obj, xp: Type_127019 := Obj) -> Never})
.support_alternative_backends: (f_name: Str, n_array_args: NoneType or Int) -> (*args: Obj, **kwargs := ?127680) -> Never
.array_special_func_map: global::Dict!({{"rel_entr"}: {2}, {"i1"}: {1}, {"gammaincc"}: {2}, {"gammaln"}: {1}, {"xlogy"}: {2}, {"erfc"}: {1}, {"ndtri"}: {1}, {"i0e"}: {1}, {"expit"}: {1}, {"logit"}: {1}, {"entr"}: {1}, {"i0"}: {1}, {"erf"}: {1}, {"chdtrc"}: {2}, {"gammainc"}: {2}, {"ndtr"}: {1}, {"i1e"}: {1}, {"log_ndtr"}: {1}})

.__all__: global::List!({"i0e", "gammaln", "xlogy", "ndtri", "logit", "ndtr", "erfc", "chdtrc", "rel_entr", "i0", "erf", "i1", "entr", "gammainc", "log_ndtr", "gammaincc", "i1e", "expit"}, _: Nat)
