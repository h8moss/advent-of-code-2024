##[pylyzer] failed /home/dani/advent-of-code-2024/day13/venv/lib/python3.12/site-packages/scipy/special/_basic.py 1734628983 105576
.operator = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.np = pyimport "__init__"
.__init__ = pyimport "__init__"

.math = pyimport "<failure>"


.warnings = pyimport "<failure>"


.___v_desugar_1 = pyimport "<failure>"

.defaultdict: Never
.___v_desugar_2 = pyimport "<failure>"

.heapify: Never
.heappop: Never
.___v_desugar_3 = pyimport "__init__"

.pi: Never
.asarray: Never
.floor: Never
.isscalar: Never
.sqrt: Never
.where: Never
.sin: Never
.place: Never
.issubdtype: Never
.extract: Never
.inexact: Never
.nan: Never
.zeros: Never
.sinc: Never
.___v_desugar_4 = pyimport "__init__"

._ufuncs: Never
.___v_desugar_5 = pyimport "<failure>"

.mathieu_a: Never
.mathieu_b: Never
.iv: Never
.jv: Never
.gamma: Never
.psi: Never
.hankel1: Never
.hankel2: Never
.yv: Never
.kv: Never
.poch: Never
.binom: Never
._stirling2_inexact: Never
.___v_desugar_6 = pyimport "<failure>"

._lpn: Never
._lpmn: Never
._clpmn: Never
._lqn: Never
._lqmn: Never
._rctj: Never
._rcty: Never
._sph_harm_all_gufunc: Never
.___v_desugar_7 = pyimport "__init__"

._specfun: Never
.___v_desugar_8 = pyimport "<failure>"

._comb_int: Never
.__all__: global::List!({"fresnel_zeros", "mathieu_even_coef", "lpmn", "h1vp", "pbvv_seq", "erf_zeros", "fresnels_zeros", "ber_zeros", "h2vp", "lqn", "riccati_yn", "jnyn_zeros", "clpmn", "obl_cv_seq", "lmbda", "fresnelc_zeros", "y0_zeros", "kelvin_zeros", "y1p_zeros", "ynp_zeros", "jnp_zeros", "yn_zeros", "bi_zeros", "zeta", "kei_zeros", "lqmn", "bei_zeros", "berp_zeros", "ai_zeros", "comb", "sinc", "lpn", "digamma", "riccati_jn", "pro_cv_seq", "stirling2", "kvp", "beip_zeros", "bernoulli", "polygamma", "y1_zeros", "kerp_zeros", "euler", "yvp", "jvp", "jn_zeros", "perm", "factorial2", "ivp", "jnjnp_zeros", "mathieu_odd_coef", "assoc_laguerre", "diric", "ker_zeros", "factorial", "pbdn_seq", "factorialk", "keip_zeros", "pbdv_seq"}, 59)
._FACTORIALK_LIMITS_64BITS: global::Dict!({{1}: {20}, {6}: {74}, {8}: {93}, {2}: {33}, {7}: {84}, {4}: {54}, {9}: {101}, {3}: {44}, {5}: {65}})
._FACTORIALK_LIMITS_32BITS: global::Dict!({{1}: {12}, {6}: {43}, {8}: {51}, {2}: {19}, {7}: {47}, {4}: {31}, {9}: {56}, {3}: {25}, {5}: {37}})
._nonneg_int_or_fail: (n: Int, var_name: Obj, strict: Bool := Bool) -> Int
.diric: (x: Obj, n: Obj) -> Never
.jnjnp_zeros: (nt: Obj) -> global::Tuple([Never, Never, Never, Never])
.jnyn_zeros: |E <: Structural({.__le__ = (self: Never, ?R) -> Bool}), E <: global::Num, R: Type|(n: E, nt: E) -> Never
.jn_zeros: |E <: global::Num|(n: E, nt: E) -> Never
.jnp_zeros: |E <: global::Num|(n: E, nt: E) -> Never
.yn_zeros: |E <: global::Num|(n: E, nt: E) -> Never
.ynp_zeros: |E <: global::Num|(n: E, nt: E) -> Never
.y0_zeros: (nt: Obj, Complex: Obj := Obj) -> Never
.y1_zeros: (nt: Obj, Complex: Obj := Obj) -> Never
.y1p_zeros: (nt: Obj, Complex: Obj := Obj) -> Never
._bessel_diff_formula: |R <: Structural({.__sub__ = (self: Never, {Type_v_global_7: Int | (Type_v_global_7 >= 1) and (Type_v_global_7 <= pred(?MAX))}) -> ?O; .__add__ = (self: Never, ?R) -> ?O}), MAX: Int, O: Type, O <: Structural({.__div__ = (self: Never, ?R) -> ?O}), R :> Float, R: Type, Type_128441: Type|(v: Obj, z: Type_128441, n: R, L: (O, Type_128441) -> Obj, phase: Structural({.__mul__ = (self: Never, R) -> O})) -> O
.jvp: (v: Obj, z: Obj, n: Int := Int) -> Never
.yvp: (v: Obj, z: Obj, n: Int := Int) -> Never
.kvp: (v: Obj, z: Obj, n: Int := Int) -> Never
.ivp: (v: Obj, z: Obj, n: Int := Int) -> Never
.h1vp: (v: Obj, z: Obj, n: Int := Int) -> Never
.h2vp: (v: Obj, z: Obj, n: Int := Int) -> Never
.riccati_jn: (n: Int, x: Obj) -> global::Tuple([Never, Never])
.riccati_yn: (n: Int, x: Obj) -> global::Tuple([Never, Never])
.erf_zeros: |R: Type, E <: Structural({.__le__ = (self: Never, ?R) -> Bool})|(nt: E) -> Never
.fresnelc_zeros: |E <: Structural({.__le__ = (self: Never, ?R) -> Bool}), R: Type|(nt: E) -> Never
.fresnels_zeros: |R: Type, E <: Structural({.__le__ = (self: Never, ?R) -> Bool})|(nt: E) -> Never
.fresnel_zeros: |R: Type, E <: Structural({.__le__ = (self: Never, ?R) -> Bool})|(nt: E) -> global::Tuple([Never, Never])
.assoc_laguerre: (x: Obj, n: Obj, k: Obj := Obj) -> Never
.digamma: Never
.polygamma: (n: Obj, x: Obj) -> Never
.mathieu_even_coef: |R <: Float, R :> Int, R <: Float|(m: R, q: R) -> Never
.mathieu_odd_coef: |R <: Float, R :> Int, R <: Float|(m: R, q: R) -> Never
.lpmn: (m: global::Num, n: Int, z: Obj) -> global::Tuple([Never, Never])
.clpmn: (m: global::Num, n: Obj, z: Obj, Type: Obj := Obj) -> global::Tuple([Never, Never])
.lqmn: |Type_128563 :> Int, Type_128563 <: Structural({.__lt__ = (self: Never, ?R) -> Bool}), R: Type|(m: Type_128563, n: Int, z: Obj) -> global::Tuple([Never, Never])
.bernoulli: |R: Type, Type_128567 :> Int, Type_128567 <: Structural({.__lt__ = (self: Never, ?R) -> Bool})|(n: Type_128567) -> Never
.euler: |R: Type, Type_128569 :> Int, Type_128569 <: Structural({.__lt__ = (self: Never, ?R) -> Bool})|(n: Type_128569) -> Never
.lpn: (n: Int, z: Obj) -> global::Tuple([Never, Never])
.lqn: (n: Int, z: Obj) -> global::Tuple([Never, Never])
.ai_zeros: (nt: Obj) -> Never
.bi_zeros: (nt: Obj) -> Never
.lmbda: |E <: Structural({.__sub__ = (self: Never, ?R) -> ?R; .__lt__ = (self: Never, ?R) -> Bool}), R: Type|(v: E, x: Obj) -> global::Tuple([Never, Never])
.pbdv_seq: |Type_128588 <: Structural({.__sub__ = (self: Never, ?R) -> ?R}), R: Type|(v: Type_128588, x: Obj) -> global::Tuple([Never, Never])
.pbvv_seq: |Type_128591 <: Structural({.__sub__ = (self: Never, ?R) -> ?R}), R: Type|(v: Type_128591, x: Obj) -> global::Tuple([Never, Never])
.pbdn_seq: (n: global::Num, z: Obj) -> global::Tuple([Never, Never])
.ber_zeros: (nt: Obj) -> Never
.bei_zeros: (nt: Obj) -> Never
.ker_zeros: (nt: Obj) -> Never
.kei_zeros: (nt: Obj) -> Never
.berp_zeros: (nt: Obj) -> Never
.beip_zeros: (nt: Obj) -> Never
.kerp_zeros: (nt: Obj) -> Never
.keip_zeros: (nt: Obj) -> Never
.kelvin_zeros: (nt: Obj) -> global::Tuple([Never, Never, Never, Never, Never, Never, Never, Never])
.pro_cv_seq: |E <: Structural({.__sub__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> Never}), R: Type, O: Type|(m: R, n: E, c: Obj) -> Never
.obl_cv_seq: |R: Type, E <: Structural({.__sub__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> Never}), O: Type|(m: R, n: E, c: Obj) -> Never
.comb: |Type_128633 :> {False}, Type_128633 <: Bool, Type_128631 :> {False}, Type_128631 <: Bool|(N: Obj, k: Obj, exact: Type_128631 := Type_128631 and Type_128631, repetition: Type_128633 := Type_128633 and Type_128633) -> Never
.perm: (N: Obj, k: Int, exact: Bool := Bool) -> Never
._range_prod: |R <: Structural({.__add__ = (self: Never, ?R) -> ?O}), R <: Structural({.__gt__ = (self: Never, ?R) -> Bool}), R <: Structural({.__add__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?R; .__mul__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(lo: R, hi: R, k: R := {1} and R) -> Never
._factorialx_array_exact: |R: Type, E <: Structural({.__lt__ = (self: Never, ?R) -> Bool and (self: Never, ?R) -> Bool})|(n: E, k: Obj := {1}) -> Never
._factorialx_array_approx: |Type_128652 <: Structural({.shape = ?140920; .__ge__ = (self: Never, ?R) -> Bool}), Type_140920 <: Ref(Obj), R :> {1}, R: Type|(n: Type_128652, k: R) -> Never
._factorialx_approx_core: |Type_128655 <: Structural({.__div__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O; .__sub__ = (self: Never, ?R) -> ?O; .__add__ = (self: Never, ?R) -> ?O; .__mod__ = (self: Never, ?R) -> ?R}), R :> {1}, R: Type, O: Type|(n: Type_128655, k: R) -> O
.factorial: (n: Never, exact: Structural({.__and__ = (self: Never, Obj) -> Bool}) := {False} and Structural({.__and__ = (self: Never, Obj) -> Bool})) -> Never
.factorial2: (n: Never, exact: Bool := Bool) -> Never
.factorialk: (n: Never, k: Never, exact: Bool := Bool) -> Never
.stirling2: (N: Obj, K: Obj, exact: Bool := Bool) -> Never
.zeta: |Type_128679 :> {None}|(x: Obj, q: Obj := Obj, out: Type_128679 := Type_128679 and Type_128679) -> Never
._sph_harm_all: |Type_128683 <: Structural({.__add__ = (self: Never, ?R) -> ?O}), R: Type, O: Type, R <: Nat|(m: R, n: Type_128683, theta: Obj, phi: Obj) -> Never
